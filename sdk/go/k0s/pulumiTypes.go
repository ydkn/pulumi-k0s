// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package k0s

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"internal"
)

var _ = internal.GetEnvOrDefault

type ClusterAPI struct {
	Address         *string           `pulumi:"address"`
	ExternalAddress *string           `pulumi:"externalAddress"`
	ExtraArgs       map[string]string `pulumi:"extraArgs"`
	K0sApiPort      *int              `pulumi:"k0sApiPort"`
	Port            *int              `pulumi:"port"`
	Sans            []string          `pulumi:"sans"`
}

// ClusterAPIInput is an input type that accepts ClusterAPIArgs and ClusterAPIOutput values.
// You can construct a concrete instance of `ClusterAPIInput` via:
//
//	ClusterAPIArgs{...}
type ClusterAPIInput interface {
	pulumi.Input

	ToClusterAPIOutput() ClusterAPIOutput
	ToClusterAPIOutputWithContext(context.Context) ClusterAPIOutput
}

type ClusterAPIArgs struct {
	Address         pulumi.StringPtrInput   `pulumi:"address"`
	ExternalAddress pulumi.StringPtrInput   `pulumi:"externalAddress"`
	ExtraArgs       pulumi.StringMapInput   `pulumi:"extraArgs"`
	K0sApiPort      pulumi.IntPtrInput      `pulumi:"k0sApiPort"`
	Port            pulumi.IntPtrInput      `pulumi:"port"`
	Sans            pulumi.StringArrayInput `pulumi:"sans"`
}

func (ClusterAPIArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAPI)(nil)).Elem()
}

func (i ClusterAPIArgs) ToClusterAPIOutput() ClusterAPIOutput {
	return i.ToClusterAPIOutputWithContext(context.Background())
}

func (i ClusterAPIArgs) ToClusterAPIOutputWithContext(ctx context.Context) ClusterAPIOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAPIOutput)
}

func (i ClusterAPIArgs) ToClusterAPIPtrOutput() ClusterAPIPtrOutput {
	return i.ToClusterAPIPtrOutputWithContext(context.Background())
}

func (i ClusterAPIArgs) ToClusterAPIPtrOutputWithContext(ctx context.Context) ClusterAPIPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAPIOutput).ToClusterAPIPtrOutputWithContext(ctx)
}

// ClusterAPIPtrInput is an input type that accepts ClusterAPIArgs, ClusterAPIPtr and ClusterAPIPtrOutput values.
// You can construct a concrete instance of `ClusterAPIPtrInput` via:
//
//	        ClusterAPIArgs{...}
//
//	or:
//
//	        nil
type ClusterAPIPtrInput interface {
	pulumi.Input

	ToClusterAPIPtrOutput() ClusterAPIPtrOutput
	ToClusterAPIPtrOutputWithContext(context.Context) ClusterAPIPtrOutput
}

type clusterAPIPtrType ClusterAPIArgs

func ClusterAPIPtr(v *ClusterAPIArgs) ClusterAPIPtrInput {
	return (*clusterAPIPtrType)(v)
}

func (*clusterAPIPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAPI)(nil)).Elem()
}

func (i *clusterAPIPtrType) ToClusterAPIPtrOutput() ClusterAPIPtrOutput {
	return i.ToClusterAPIPtrOutputWithContext(context.Background())
}

func (i *clusterAPIPtrType) ToClusterAPIPtrOutputWithContext(ctx context.Context) ClusterAPIPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAPIPtrOutput)
}

type ClusterAPIOutput struct{ *pulumi.OutputState }

func (ClusterAPIOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAPI)(nil)).Elem()
}

func (o ClusterAPIOutput) ToClusterAPIOutput() ClusterAPIOutput {
	return o
}

func (o ClusterAPIOutput) ToClusterAPIOutputWithContext(ctx context.Context) ClusterAPIOutput {
	return o
}

func (o ClusterAPIOutput) ToClusterAPIPtrOutput() ClusterAPIPtrOutput {
	return o.ToClusterAPIPtrOutputWithContext(context.Background())
}

func (o ClusterAPIOutput) ToClusterAPIPtrOutputWithContext(ctx context.Context) ClusterAPIPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAPI) *ClusterAPI {
		return &v
	}).(ClusterAPIPtrOutput)
}

func (o ClusterAPIOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAPI) *string { return v.Address }).(pulumi.StringPtrOutput)
}

func (o ClusterAPIOutput) ExternalAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAPI) *string { return v.ExternalAddress }).(pulumi.StringPtrOutput)
}

func (o ClusterAPIOutput) ExtraArgs() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterAPI) map[string]string { return v.ExtraArgs }).(pulumi.StringMapOutput)
}

func (o ClusterAPIOutput) K0sApiPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAPI) *int { return v.K0sApiPort }).(pulumi.IntPtrOutput)
}

func (o ClusterAPIOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAPI) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o ClusterAPIOutput) Sans() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterAPI) []string { return v.Sans }).(pulumi.StringArrayOutput)
}

type ClusterAPIPtrOutput struct{ *pulumi.OutputState }

func (ClusterAPIPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAPI)(nil)).Elem()
}

func (o ClusterAPIPtrOutput) ToClusterAPIPtrOutput() ClusterAPIPtrOutput {
	return o
}

func (o ClusterAPIPtrOutput) ToClusterAPIPtrOutputWithContext(ctx context.Context) ClusterAPIPtrOutput {
	return o
}

func (o ClusterAPIPtrOutput) Elem() ClusterAPIOutput {
	return o.ApplyT(func(v *ClusterAPI) ClusterAPI {
		if v != nil {
			return *v
		}
		var ret ClusterAPI
		return ret
	}).(ClusterAPIOutput)
}

func (o ClusterAPIPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAPI) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

func (o ClusterAPIPtrOutput) ExternalAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAPI) *string {
		if v == nil {
			return nil
		}
		return v.ExternalAddress
	}).(pulumi.StringPtrOutput)
}

func (o ClusterAPIPtrOutput) ExtraArgs() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterAPI) map[string]string {
		if v == nil {
			return nil
		}
		return v.ExtraArgs
	}).(pulumi.StringMapOutput)
}

func (o ClusterAPIPtrOutput) K0sApiPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAPI) *int {
		if v == nil {
			return nil
		}
		return v.K0sApiPort
	}).(pulumi.IntPtrOutput)
}

func (o ClusterAPIPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAPI) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

func (o ClusterAPIPtrOutput) Sans() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterAPI) []string {
		if v == nil {
			return nil
		}
		return v.Sans
	}).(pulumi.StringArrayOutput)
}

type ClusterCalico struct {
	EnvVars               map[string]string `pulumi:"envVars"`
	FlexVolumeDriverPath  *string           `pulumi:"flexVolumeDriverPath"`
	IpAutodetectionMethod *string           `pulumi:"ipAutodetectionMethod"`
	Mode                  *string           `pulumi:"mode"`
	Mtu                   *int              `pulumi:"mtu"`
	Overlay               *string           `pulumi:"overlay"`
	VxlanPort             *int              `pulumi:"vxlanPort"`
	VxlanVNI              *int              `pulumi:"vxlanVNI"`
	Wireguard             *bool             `pulumi:"wireguard"`
}

// ClusterCalicoInput is an input type that accepts ClusterCalicoArgs and ClusterCalicoOutput values.
// You can construct a concrete instance of `ClusterCalicoInput` via:
//
//	ClusterCalicoArgs{...}
type ClusterCalicoInput interface {
	pulumi.Input

	ToClusterCalicoOutput() ClusterCalicoOutput
	ToClusterCalicoOutputWithContext(context.Context) ClusterCalicoOutput
}

type ClusterCalicoArgs struct {
	EnvVars               pulumi.StringMapInput `pulumi:"envVars"`
	FlexVolumeDriverPath  pulumi.StringPtrInput `pulumi:"flexVolumeDriverPath"`
	IpAutodetectionMethod pulumi.StringPtrInput `pulumi:"ipAutodetectionMethod"`
	Mode                  pulumi.StringPtrInput `pulumi:"mode"`
	Mtu                   pulumi.IntPtrInput    `pulumi:"mtu"`
	Overlay               pulumi.StringPtrInput `pulumi:"overlay"`
	VxlanPort             pulumi.IntPtrInput    `pulumi:"vxlanPort"`
	VxlanVNI              pulumi.IntPtrInput    `pulumi:"vxlanVNI"`
	Wireguard             pulumi.BoolPtrInput   `pulumi:"wireguard"`
}

func (ClusterCalicoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCalico)(nil)).Elem()
}

func (i ClusterCalicoArgs) ToClusterCalicoOutput() ClusterCalicoOutput {
	return i.ToClusterCalicoOutputWithContext(context.Background())
}

func (i ClusterCalicoArgs) ToClusterCalicoOutputWithContext(ctx context.Context) ClusterCalicoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCalicoOutput)
}

func (i ClusterCalicoArgs) ToClusterCalicoPtrOutput() ClusterCalicoPtrOutput {
	return i.ToClusterCalicoPtrOutputWithContext(context.Background())
}

func (i ClusterCalicoArgs) ToClusterCalicoPtrOutputWithContext(ctx context.Context) ClusterCalicoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCalicoOutput).ToClusterCalicoPtrOutputWithContext(ctx)
}

// ClusterCalicoPtrInput is an input type that accepts ClusterCalicoArgs, ClusterCalicoPtr and ClusterCalicoPtrOutput values.
// You can construct a concrete instance of `ClusterCalicoPtrInput` via:
//
//	        ClusterCalicoArgs{...}
//
//	or:
//
//	        nil
type ClusterCalicoPtrInput interface {
	pulumi.Input

	ToClusterCalicoPtrOutput() ClusterCalicoPtrOutput
	ToClusterCalicoPtrOutputWithContext(context.Context) ClusterCalicoPtrOutput
}

type clusterCalicoPtrType ClusterCalicoArgs

func ClusterCalicoPtr(v *ClusterCalicoArgs) ClusterCalicoPtrInput {
	return (*clusterCalicoPtrType)(v)
}

func (*clusterCalicoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCalico)(nil)).Elem()
}

func (i *clusterCalicoPtrType) ToClusterCalicoPtrOutput() ClusterCalicoPtrOutput {
	return i.ToClusterCalicoPtrOutputWithContext(context.Background())
}

func (i *clusterCalicoPtrType) ToClusterCalicoPtrOutputWithContext(ctx context.Context) ClusterCalicoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCalicoPtrOutput)
}

type ClusterCalicoOutput struct{ *pulumi.OutputState }

func (ClusterCalicoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCalico)(nil)).Elem()
}

func (o ClusterCalicoOutput) ToClusterCalicoOutput() ClusterCalicoOutput {
	return o
}

func (o ClusterCalicoOutput) ToClusterCalicoOutputWithContext(ctx context.Context) ClusterCalicoOutput {
	return o
}

func (o ClusterCalicoOutput) ToClusterCalicoPtrOutput() ClusterCalicoPtrOutput {
	return o.ToClusterCalicoPtrOutputWithContext(context.Background())
}

func (o ClusterCalicoOutput) ToClusterCalicoPtrOutputWithContext(ctx context.Context) ClusterCalicoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterCalico) *ClusterCalico {
		return &v
	}).(ClusterCalicoPtrOutput)
}

func (o ClusterCalicoOutput) EnvVars() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterCalico) map[string]string { return v.EnvVars }).(pulumi.StringMapOutput)
}

func (o ClusterCalicoOutput) FlexVolumeDriverPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCalico) *string { return v.FlexVolumeDriverPath }).(pulumi.StringPtrOutput)
}

func (o ClusterCalicoOutput) IpAutodetectionMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCalico) *string { return v.IpAutodetectionMethod }).(pulumi.StringPtrOutput)
}

func (o ClusterCalicoOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCalico) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

func (o ClusterCalicoOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCalico) *int { return v.Mtu }).(pulumi.IntPtrOutput)
}

func (o ClusterCalicoOutput) Overlay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCalico) *string { return v.Overlay }).(pulumi.StringPtrOutput)
}

func (o ClusterCalicoOutput) VxlanPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCalico) *int { return v.VxlanPort }).(pulumi.IntPtrOutput)
}

func (o ClusterCalicoOutput) VxlanVNI() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCalico) *int { return v.VxlanVNI }).(pulumi.IntPtrOutput)
}

func (o ClusterCalicoOutput) Wireguard() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterCalico) *bool { return v.Wireguard }).(pulumi.BoolPtrOutput)
}

type ClusterCalicoPtrOutput struct{ *pulumi.OutputState }

func (ClusterCalicoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCalico)(nil)).Elem()
}

func (o ClusterCalicoPtrOutput) ToClusterCalicoPtrOutput() ClusterCalicoPtrOutput {
	return o
}

func (o ClusterCalicoPtrOutput) ToClusterCalicoPtrOutputWithContext(ctx context.Context) ClusterCalicoPtrOutput {
	return o
}

func (o ClusterCalicoPtrOutput) Elem() ClusterCalicoOutput {
	return o.ApplyT(func(v *ClusterCalico) ClusterCalico {
		if v != nil {
			return *v
		}
		var ret ClusterCalico
		return ret
	}).(ClusterCalicoOutput)
}

func (o ClusterCalicoPtrOutput) EnvVars() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterCalico) map[string]string {
		if v == nil {
			return nil
		}
		return v.EnvVars
	}).(pulumi.StringMapOutput)
}

func (o ClusterCalicoPtrOutput) FlexVolumeDriverPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCalico) *string {
		if v == nil {
			return nil
		}
		return v.FlexVolumeDriverPath
	}).(pulumi.StringPtrOutput)
}

func (o ClusterCalicoPtrOutput) IpAutodetectionMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCalico) *string {
		if v == nil {
			return nil
		}
		return v.IpAutodetectionMethod
	}).(pulumi.StringPtrOutput)
}

func (o ClusterCalicoPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCalico) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

func (o ClusterCalicoPtrOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterCalico) *int {
		if v == nil {
			return nil
		}
		return v.Mtu
	}).(pulumi.IntPtrOutput)
}

func (o ClusterCalicoPtrOutput) Overlay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCalico) *string {
		if v == nil {
			return nil
		}
		return v.Overlay
	}).(pulumi.StringPtrOutput)
}

func (o ClusterCalicoPtrOutput) VxlanPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterCalico) *int {
		if v == nil {
			return nil
		}
		return v.VxlanPort
	}).(pulumi.IntPtrOutput)
}

func (o ClusterCalicoPtrOutput) VxlanVNI() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterCalico) *int {
		if v == nil {
			return nil
		}
		return v.VxlanVNI
	}).(pulumi.IntPtrOutput)
}

func (o ClusterCalicoPtrOutput) Wireguard() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterCalico) *bool {
		if v == nil {
			return nil
		}
		return v.Wireguard
	}).(pulumi.BoolPtrOutput)
}

type ClusterCalicoImage struct {
	Cni             *ClusterImage `pulumi:"cni"`
	Flexvolume      *ClusterImage `pulumi:"flexvolume"`
	Kubecontrollers *ClusterImage `pulumi:"kubecontrollers"`
	Node            *ClusterImage `pulumi:"node"`
}

// ClusterCalicoImageInput is an input type that accepts ClusterCalicoImageArgs and ClusterCalicoImageOutput values.
// You can construct a concrete instance of `ClusterCalicoImageInput` via:
//
//	ClusterCalicoImageArgs{...}
type ClusterCalicoImageInput interface {
	pulumi.Input

	ToClusterCalicoImageOutput() ClusterCalicoImageOutput
	ToClusterCalicoImageOutputWithContext(context.Context) ClusterCalicoImageOutput
}

type ClusterCalicoImageArgs struct {
	Cni             ClusterImagePtrInput `pulumi:"cni"`
	Flexvolume      ClusterImagePtrInput `pulumi:"flexvolume"`
	Kubecontrollers ClusterImagePtrInput `pulumi:"kubecontrollers"`
	Node            ClusterImagePtrInput `pulumi:"node"`
}

func (ClusterCalicoImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCalicoImage)(nil)).Elem()
}

func (i ClusterCalicoImageArgs) ToClusterCalicoImageOutput() ClusterCalicoImageOutput {
	return i.ToClusterCalicoImageOutputWithContext(context.Background())
}

func (i ClusterCalicoImageArgs) ToClusterCalicoImageOutputWithContext(ctx context.Context) ClusterCalicoImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCalicoImageOutput)
}

func (i ClusterCalicoImageArgs) ToClusterCalicoImagePtrOutput() ClusterCalicoImagePtrOutput {
	return i.ToClusterCalicoImagePtrOutputWithContext(context.Background())
}

func (i ClusterCalicoImageArgs) ToClusterCalicoImagePtrOutputWithContext(ctx context.Context) ClusterCalicoImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCalicoImageOutput).ToClusterCalicoImagePtrOutputWithContext(ctx)
}

// ClusterCalicoImagePtrInput is an input type that accepts ClusterCalicoImageArgs, ClusterCalicoImagePtr and ClusterCalicoImagePtrOutput values.
// You can construct a concrete instance of `ClusterCalicoImagePtrInput` via:
//
//	        ClusterCalicoImageArgs{...}
//
//	or:
//
//	        nil
type ClusterCalicoImagePtrInput interface {
	pulumi.Input

	ToClusterCalicoImagePtrOutput() ClusterCalicoImagePtrOutput
	ToClusterCalicoImagePtrOutputWithContext(context.Context) ClusterCalicoImagePtrOutput
}

type clusterCalicoImagePtrType ClusterCalicoImageArgs

func ClusterCalicoImagePtr(v *ClusterCalicoImageArgs) ClusterCalicoImagePtrInput {
	return (*clusterCalicoImagePtrType)(v)
}

func (*clusterCalicoImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCalicoImage)(nil)).Elem()
}

func (i *clusterCalicoImagePtrType) ToClusterCalicoImagePtrOutput() ClusterCalicoImagePtrOutput {
	return i.ToClusterCalicoImagePtrOutputWithContext(context.Background())
}

func (i *clusterCalicoImagePtrType) ToClusterCalicoImagePtrOutputWithContext(ctx context.Context) ClusterCalicoImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCalicoImagePtrOutput)
}

type ClusterCalicoImageOutput struct{ *pulumi.OutputState }

func (ClusterCalicoImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCalicoImage)(nil)).Elem()
}

func (o ClusterCalicoImageOutput) ToClusterCalicoImageOutput() ClusterCalicoImageOutput {
	return o
}

func (o ClusterCalicoImageOutput) ToClusterCalicoImageOutputWithContext(ctx context.Context) ClusterCalicoImageOutput {
	return o
}

func (o ClusterCalicoImageOutput) ToClusterCalicoImagePtrOutput() ClusterCalicoImagePtrOutput {
	return o.ToClusterCalicoImagePtrOutputWithContext(context.Background())
}

func (o ClusterCalicoImageOutput) ToClusterCalicoImagePtrOutputWithContext(ctx context.Context) ClusterCalicoImagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterCalicoImage) *ClusterCalicoImage {
		return &v
	}).(ClusterCalicoImagePtrOutput)
}

func (o ClusterCalicoImageOutput) Cni() ClusterImagePtrOutput {
	return o.ApplyT(func(v ClusterCalicoImage) *ClusterImage { return v.Cni }).(ClusterImagePtrOutput)
}

func (o ClusterCalicoImageOutput) Flexvolume() ClusterImagePtrOutput {
	return o.ApplyT(func(v ClusterCalicoImage) *ClusterImage { return v.Flexvolume }).(ClusterImagePtrOutput)
}

func (o ClusterCalicoImageOutput) Kubecontrollers() ClusterImagePtrOutput {
	return o.ApplyT(func(v ClusterCalicoImage) *ClusterImage { return v.Kubecontrollers }).(ClusterImagePtrOutput)
}

func (o ClusterCalicoImageOutput) Node() ClusterImagePtrOutput {
	return o.ApplyT(func(v ClusterCalicoImage) *ClusterImage { return v.Node }).(ClusterImagePtrOutput)
}

type ClusterCalicoImagePtrOutput struct{ *pulumi.OutputState }

func (ClusterCalicoImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCalicoImage)(nil)).Elem()
}

func (o ClusterCalicoImagePtrOutput) ToClusterCalicoImagePtrOutput() ClusterCalicoImagePtrOutput {
	return o
}

func (o ClusterCalicoImagePtrOutput) ToClusterCalicoImagePtrOutputWithContext(ctx context.Context) ClusterCalicoImagePtrOutput {
	return o
}

func (o ClusterCalicoImagePtrOutput) Elem() ClusterCalicoImageOutput {
	return o.ApplyT(func(v *ClusterCalicoImage) ClusterCalicoImage {
		if v != nil {
			return *v
		}
		var ret ClusterCalicoImage
		return ret
	}).(ClusterCalicoImageOutput)
}

func (o ClusterCalicoImagePtrOutput) Cni() ClusterImagePtrOutput {
	return o.ApplyT(func(v *ClusterCalicoImage) *ClusterImage {
		if v == nil {
			return nil
		}
		return v.Cni
	}).(ClusterImagePtrOutput)
}

func (o ClusterCalicoImagePtrOutput) Flexvolume() ClusterImagePtrOutput {
	return o.ApplyT(func(v *ClusterCalicoImage) *ClusterImage {
		if v == nil {
			return nil
		}
		return v.Flexvolume
	}).(ClusterImagePtrOutput)
}

func (o ClusterCalicoImagePtrOutput) Kubecontrollers() ClusterImagePtrOutput {
	return o.ApplyT(func(v *ClusterCalicoImage) *ClusterImage {
		if v == nil {
			return nil
		}
		return v.Kubecontrollers
	}).(ClusterImagePtrOutput)
}

func (o ClusterCalicoImagePtrOutput) Node() ClusterImagePtrOutput {
	return o.ApplyT(func(v *ClusterCalicoImage) *ClusterImage {
		if v == nil {
			return nil
		}
		return v.Node
	}).(ClusterImagePtrOutput)
}

type ClusterControllerManager struct {
	ExtraArgs map[string]string `pulumi:"extraArgs"`
}

// ClusterControllerManagerInput is an input type that accepts ClusterControllerManagerArgs and ClusterControllerManagerOutput values.
// You can construct a concrete instance of `ClusterControllerManagerInput` via:
//
//	ClusterControllerManagerArgs{...}
type ClusterControllerManagerInput interface {
	pulumi.Input

	ToClusterControllerManagerOutput() ClusterControllerManagerOutput
	ToClusterControllerManagerOutputWithContext(context.Context) ClusterControllerManagerOutput
}

type ClusterControllerManagerArgs struct {
	ExtraArgs pulumi.StringMapInput `pulumi:"extraArgs"`
}

func (ClusterControllerManagerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterControllerManager)(nil)).Elem()
}

func (i ClusterControllerManagerArgs) ToClusterControllerManagerOutput() ClusterControllerManagerOutput {
	return i.ToClusterControllerManagerOutputWithContext(context.Background())
}

func (i ClusterControllerManagerArgs) ToClusterControllerManagerOutputWithContext(ctx context.Context) ClusterControllerManagerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterControllerManagerOutput)
}

func (i ClusterControllerManagerArgs) ToClusterControllerManagerPtrOutput() ClusterControllerManagerPtrOutput {
	return i.ToClusterControllerManagerPtrOutputWithContext(context.Background())
}

func (i ClusterControllerManagerArgs) ToClusterControllerManagerPtrOutputWithContext(ctx context.Context) ClusterControllerManagerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterControllerManagerOutput).ToClusterControllerManagerPtrOutputWithContext(ctx)
}

// ClusterControllerManagerPtrInput is an input type that accepts ClusterControllerManagerArgs, ClusterControllerManagerPtr and ClusterControllerManagerPtrOutput values.
// You can construct a concrete instance of `ClusterControllerManagerPtrInput` via:
//
//	        ClusterControllerManagerArgs{...}
//
//	or:
//
//	        nil
type ClusterControllerManagerPtrInput interface {
	pulumi.Input

	ToClusterControllerManagerPtrOutput() ClusterControllerManagerPtrOutput
	ToClusterControllerManagerPtrOutputWithContext(context.Context) ClusterControllerManagerPtrOutput
}

type clusterControllerManagerPtrType ClusterControllerManagerArgs

func ClusterControllerManagerPtr(v *ClusterControllerManagerArgs) ClusterControllerManagerPtrInput {
	return (*clusterControllerManagerPtrType)(v)
}

func (*clusterControllerManagerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterControllerManager)(nil)).Elem()
}

func (i *clusterControllerManagerPtrType) ToClusterControllerManagerPtrOutput() ClusterControllerManagerPtrOutput {
	return i.ToClusterControllerManagerPtrOutputWithContext(context.Background())
}

func (i *clusterControllerManagerPtrType) ToClusterControllerManagerPtrOutputWithContext(ctx context.Context) ClusterControllerManagerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterControllerManagerPtrOutput)
}

type ClusterControllerManagerOutput struct{ *pulumi.OutputState }

func (ClusterControllerManagerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterControllerManager)(nil)).Elem()
}

func (o ClusterControllerManagerOutput) ToClusterControllerManagerOutput() ClusterControllerManagerOutput {
	return o
}

func (o ClusterControllerManagerOutput) ToClusterControllerManagerOutputWithContext(ctx context.Context) ClusterControllerManagerOutput {
	return o
}

func (o ClusterControllerManagerOutput) ToClusterControllerManagerPtrOutput() ClusterControllerManagerPtrOutput {
	return o.ToClusterControllerManagerPtrOutputWithContext(context.Background())
}

func (o ClusterControllerManagerOutput) ToClusterControllerManagerPtrOutputWithContext(ctx context.Context) ClusterControllerManagerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterControllerManager) *ClusterControllerManager {
		return &v
	}).(ClusterControllerManagerPtrOutput)
}

func (o ClusterControllerManagerOutput) ExtraArgs() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterControllerManager) map[string]string { return v.ExtraArgs }).(pulumi.StringMapOutput)
}

type ClusterControllerManagerPtrOutput struct{ *pulumi.OutputState }

func (ClusterControllerManagerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterControllerManager)(nil)).Elem()
}

func (o ClusterControllerManagerPtrOutput) ToClusterControllerManagerPtrOutput() ClusterControllerManagerPtrOutput {
	return o
}

func (o ClusterControllerManagerPtrOutput) ToClusterControllerManagerPtrOutputWithContext(ctx context.Context) ClusterControllerManagerPtrOutput {
	return o
}

func (o ClusterControllerManagerPtrOutput) Elem() ClusterControllerManagerOutput {
	return o.ApplyT(func(v *ClusterControllerManager) ClusterControllerManager {
		if v != nil {
			return *v
		}
		var ret ClusterControllerManager
		return ret
	}).(ClusterControllerManagerOutput)
}

func (o ClusterControllerManagerPtrOutput) ExtraArgs() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterControllerManager) map[string]string {
		if v == nil {
			return nil
		}
		return v.ExtraArgs
	}).(pulumi.StringMapOutput)
}

type ClusterDualStack struct {
	IPv6podCIDR     *string `pulumi:"IPv6podCIDR"`
	IPv6serviceCIDR *string `pulumi:"IPv6serviceCIDR"`
	Enabled         *bool   `pulumi:"enabled"`
}

// ClusterDualStackInput is an input type that accepts ClusterDualStackArgs and ClusterDualStackOutput values.
// You can construct a concrete instance of `ClusterDualStackInput` via:
//
//	ClusterDualStackArgs{...}
type ClusterDualStackInput interface {
	pulumi.Input

	ToClusterDualStackOutput() ClusterDualStackOutput
	ToClusterDualStackOutputWithContext(context.Context) ClusterDualStackOutput
}

type ClusterDualStackArgs struct {
	IPv6podCIDR     pulumi.StringPtrInput `pulumi:"IPv6podCIDR"`
	IPv6serviceCIDR pulumi.StringPtrInput `pulumi:"IPv6serviceCIDR"`
	Enabled         pulumi.BoolPtrInput   `pulumi:"enabled"`
}

func (ClusterDualStackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDualStack)(nil)).Elem()
}

func (i ClusterDualStackArgs) ToClusterDualStackOutput() ClusterDualStackOutput {
	return i.ToClusterDualStackOutputWithContext(context.Background())
}

func (i ClusterDualStackArgs) ToClusterDualStackOutputWithContext(ctx context.Context) ClusterDualStackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDualStackOutput)
}

func (i ClusterDualStackArgs) ToClusterDualStackPtrOutput() ClusterDualStackPtrOutput {
	return i.ToClusterDualStackPtrOutputWithContext(context.Background())
}

func (i ClusterDualStackArgs) ToClusterDualStackPtrOutputWithContext(ctx context.Context) ClusterDualStackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDualStackOutput).ToClusterDualStackPtrOutputWithContext(ctx)
}

// ClusterDualStackPtrInput is an input type that accepts ClusterDualStackArgs, ClusterDualStackPtr and ClusterDualStackPtrOutput values.
// You can construct a concrete instance of `ClusterDualStackPtrInput` via:
//
//	        ClusterDualStackArgs{...}
//
//	or:
//
//	        nil
type ClusterDualStackPtrInput interface {
	pulumi.Input

	ToClusterDualStackPtrOutput() ClusterDualStackPtrOutput
	ToClusterDualStackPtrOutputWithContext(context.Context) ClusterDualStackPtrOutput
}

type clusterDualStackPtrType ClusterDualStackArgs

func ClusterDualStackPtr(v *ClusterDualStackArgs) ClusterDualStackPtrInput {
	return (*clusterDualStackPtrType)(v)
}

func (*clusterDualStackPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterDualStack)(nil)).Elem()
}

func (i *clusterDualStackPtrType) ToClusterDualStackPtrOutput() ClusterDualStackPtrOutput {
	return i.ToClusterDualStackPtrOutputWithContext(context.Background())
}

func (i *clusterDualStackPtrType) ToClusterDualStackPtrOutputWithContext(ctx context.Context) ClusterDualStackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDualStackPtrOutput)
}

type ClusterDualStackOutput struct{ *pulumi.OutputState }

func (ClusterDualStackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDualStack)(nil)).Elem()
}

func (o ClusterDualStackOutput) ToClusterDualStackOutput() ClusterDualStackOutput {
	return o
}

func (o ClusterDualStackOutput) ToClusterDualStackOutputWithContext(ctx context.Context) ClusterDualStackOutput {
	return o
}

func (o ClusterDualStackOutput) ToClusterDualStackPtrOutput() ClusterDualStackPtrOutput {
	return o.ToClusterDualStackPtrOutputWithContext(context.Background())
}

func (o ClusterDualStackOutput) ToClusterDualStackPtrOutputWithContext(ctx context.Context) ClusterDualStackPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterDualStack) *ClusterDualStack {
		return &v
	}).(ClusterDualStackPtrOutput)
}

func (o ClusterDualStackOutput) IPv6podCIDR() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterDualStack) *string { return v.IPv6podCIDR }).(pulumi.StringPtrOutput)
}

func (o ClusterDualStackOutput) IPv6serviceCIDR() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterDualStack) *string { return v.IPv6serviceCIDR }).(pulumi.StringPtrOutput)
}

func (o ClusterDualStackOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterDualStack) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ClusterDualStackPtrOutput struct{ *pulumi.OutputState }

func (ClusterDualStackPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterDualStack)(nil)).Elem()
}

func (o ClusterDualStackPtrOutput) ToClusterDualStackPtrOutput() ClusterDualStackPtrOutput {
	return o
}

func (o ClusterDualStackPtrOutput) ToClusterDualStackPtrOutputWithContext(ctx context.Context) ClusterDualStackPtrOutput {
	return o
}

func (o ClusterDualStackPtrOutput) Elem() ClusterDualStackOutput {
	return o.ApplyT(func(v *ClusterDualStack) ClusterDualStack {
		if v != nil {
			return *v
		}
		var ret ClusterDualStack
		return ret
	}).(ClusterDualStackOutput)
}

func (o ClusterDualStackPtrOutput) IPv6podCIDR() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterDualStack) *string {
		if v == nil {
			return nil
		}
		return v.IPv6podCIDR
	}).(pulumi.StringPtrOutput)
}

func (o ClusterDualStackPtrOutput) IPv6serviceCIDR() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterDualStack) *string {
		if v == nil {
			return nil
		}
		return v.IPv6serviceCIDR
	}).(pulumi.StringPtrOutput)
}

func (o ClusterDualStackPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterDualStack) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterEnvoyProxy struct {
	ApiServerBindPort          *int    `pulumi:"apiServerBindPort"`
	Image                      *string `pulumi:"image"`
	ImagePullPolicy            *string `pulumi:"imagePullPolicy"`
	KonnectivityServerBindPort *int    `pulumi:"konnectivityServerBindPort"`
}

// ClusterEnvoyProxyInput is an input type that accepts ClusterEnvoyProxyArgs and ClusterEnvoyProxyOutput values.
// You can construct a concrete instance of `ClusterEnvoyProxyInput` via:
//
//	ClusterEnvoyProxyArgs{...}
type ClusterEnvoyProxyInput interface {
	pulumi.Input

	ToClusterEnvoyProxyOutput() ClusterEnvoyProxyOutput
	ToClusterEnvoyProxyOutputWithContext(context.Context) ClusterEnvoyProxyOutput
}

type ClusterEnvoyProxyArgs struct {
	ApiServerBindPort          pulumi.IntPtrInput    `pulumi:"apiServerBindPort"`
	Image                      pulumi.StringPtrInput `pulumi:"image"`
	ImagePullPolicy            pulumi.StringPtrInput `pulumi:"imagePullPolicy"`
	KonnectivityServerBindPort pulumi.IntPtrInput    `pulumi:"konnectivityServerBindPort"`
}

func (ClusterEnvoyProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEnvoyProxy)(nil)).Elem()
}

func (i ClusterEnvoyProxyArgs) ToClusterEnvoyProxyOutput() ClusterEnvoyProxyOutput {
	return i.ToClusterEnvoyProxyOutputWithContext(context.Background())
}

func (i ClusterEnvoyProxyArgs) ToClusterEnvoyProxyOutputWithContext(ctx context.Context) ClusterEnvoyProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEnvoyProxyOutput)
}

func (i ClusterEnvoyProxyArgs) ToClusterEnvoyProxyPtrOutput() ClusterEnvoyProxyPtrOutput {
	return i.ToClusterEnvoyProxyPtrOutputWithContext(context.Background())
}

func (i ClusterEnvoyProxyArgs) ToClusterEnvoyProxyPtrOutputWithContext(ctx context.Context) ClusterEnvoyProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEnvoyProxyOutput).ToClusterEnvoyProxyPtrOutputWithContext(ctx)
}

// ClusterEnvoyProxyPtrInput is an input type that accepts ClusterEnvoyProxyArgs, ClusterEnvoyProxyPtr and ClusterEnvoyProxyPtrOutput values.
// You can construct a concrete instance of `ClusterEnvoyProxyPtrInput` via:
//
//	        ClusterEnvoyProxyArgs{...}
//
//	or:
//
//	        nil
type ClusterEnvoyProxyPtrInput interface {
	pulumi.Input

	ToClusterEnvoyProxyPtrOutput() ClusterEnvoyProxyPtrOutput
	ToClusterEnvoyProxyPtrOutputWithContext(context.Context) ClusterEnvoyProxyPtrOutput
}

type clusterEnvoyProxyPtrType ClusterEnvoyProxyArgs

func ClusterEnvoyProxyPtr(v *ClusterEnvoyProxyArgs) ClusterEnvoyProxyPtrInput {
	return (*clusterEnvoyProxyPtrType)(v)
}

func (*clusterEnvoyProxyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEnvoyProxy)(nil)).Elem()
}

func (i *clusterEnvoyProxyPtrType) ToClusterEnvoyProxyPtrOutput() ClusterEnvoyProxyPtrOutput {
	return i.ToClusterEnvoyProxyPtrOutputWithContext(context.Background())
}

func (i *clusterEnvoyProxyPtrType) ToClusterEnvoyProxyPtrOutputWithContext(ctx context.Context) ClusterEnvoyProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEnvoyProxyPtrOutput)
}

type ClusterEnvoyProxyOutput struct{ *pulumi.OutputState }

func (ClusterEnvoyProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEnvoyProxy)(nil)).Elem()
}

func (o ClusterEnvoyProxyOutput) ToClusterEnvoyProxyOutput() ClusterEnvoyProxyOutput {
	return o
}

func (o ClusterEnvoyProxyOutput) ToClusterEnvoyProxyOutputWithContext(ctx context.Context) ClusterEnvoyProxyOutput {
	return o
}

func (o ClusterEnvoyProxyOutput) ToClusterEnvoyProxyPtrOutput() ClusterEnvoyProxyPtrOutput {
	return o.ToClusterEnvoyProxyPtrOutputWithContext(context.Background())
}

func (o ClusterEnvoyProxyOutput) ToClusterEnvoyProxyPtrOutputWithContext(ctx context.Context) ClusterEnvoyProxyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterEnvoyProxy) *ClusterEnvoyProxy {
		return &v
	}).(ClusterEnvoyProxyPtrOutput)
}

func (o ClusterEnvoyProxyOutput) ApiServerBindPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterEnvoyProxy) *int { return v.ApiServerBindPort }).(pulumi.IntPtrOutput)
}

func (o ClusterEnvoyProxyOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterEnvoyProxy) *string { return v.Image }).(pulumi.StringPtrOutput)
}

func (o ClusterEnvoyProxyOutput) ImagePullPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterEnvoyProxy) *string { return v.ImagePullPolicy }).(pulumi.StringPtrOutput)
}

func (o ClusterEnvoyProxyOutput) KonnectivityServerBindPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterEnvoyProxy) *int { return v.KonnectivityServerBindPort }).(pulumi.IntPtrOutput)
}

type ClusterEnvoyProxyPtrOutput struct{ *pulumi.OutputState }

func (ClusterEnvoyProxyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEnvoyProxy)(nil)).Elem()
}

func (o ClusterEnvoyProxyPtrOutput) ToClusterEnvoyProxyPtrOutput() ClusterEnvoyProxyPtrOutput {
	return o
}

func (o ClusterEnvoyProxyPtrOutput) ToClusterEnvoyProxyPtrOutputWithContext(ctx context.Context) ClusterEnvoyProxyPtrOutput {
	return o
}

func (o ClusterEnvoyProxyPtrOutput) Elem() ClusterEnvoyProxyOutput {
	return o.ApplyT(func(v *ClusterEnvoyProxy) ClusterEnvoyProxy {
		if v != nil {
			return *v
		}
		var ret ClusterEnvoyProxy
		return ret
	}).(ClusterEnvoyProxyOutput)
}

func (o ClusterEnvoyProxyPtrOutput) ApiServerBindPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterEnvoyProxy) *int {
		if v == nil {
			return nil
		}
		return v.ApiServerBindPort
	}).(pulumi.IntPtrOutput)
}

func (o ClusterEnvoyProxyPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterEnvoyProxy) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

func (o ClusterEnvoyProxyPtrOutput) ImagePullPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterEnvoyProxy) *string {
		if v == nil {
			return nil
		}
		return v.ImagePullPolicy
	}).(pulumi.StringPtrOutput)
}

func (o ClusterEnvoyProxyPtrOutput) KonnectivityServerBindPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterEnvoyProxy) *int {
		if v == nil {
			return nil
		}
		return v.KonnectivityServerBindPort
	}).(pulumi.IntPtrOutput)
}

type ClusterEtcd struct {
	ExternalCluster *ClusterEtcdExternalCluster `pulumi:"externalCluster"`
	ExtraArgs       map[string]string           `pulumi:"extraArgs"`
	PeerAddress     *string                     `pulumi:"peerAddress"`
}

// ClusterEtcdInput is an input type that accepts ClusterEtcdArgs and ClusterEtcdOutput values.
// You can construct a concrete instance of `ClusterEtcdInput` via:
//
//	ClusterEtcdArgs{...}
type ClusterEtcdInput interface {
	pulumi.Input

	ToClusterEtcdOutput() ClusterEtcdOutput
	ToClusterEtcdOutputWithContext(context.Context) ClusterEtcdOutput
}

type ClusterEtcdArgs struct {
	ExternalCluster ClusterEtcdExternalClusterPtrInput `pulumi:"externalCluster"`
	ExtraArgs       pulumi.StringMapInput              `pulumi:"extraArgs"`
	PeerAddress     pulumi.StringPtrInput              `pulumi:"peerAddress"`
}

func (ClusterEtcdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEtcd)(nil)).Elem()
}

func (i ClusterEtcdArgs) ToClusterEtcdOutput() ClusterEtcdOutput {
	return i.ToClusterEtcdOutputWithContext(context.Background())
}

func (i ClusterEtcdArgs) ToClusterEtcdOutputWithContext(ctx context.Context) ClusterEtcdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEtcdOutput)
}

func (i ClusterEtcdArgs) ToClusterEtcdPtrOutput() ClusterEtcdPtrOutput {
	return i.ToClusterEtcdPtrOutputWithContext(context.Background())
}

func (i ClusterEtcdArgs) ToClusterEtcdPtrOutputWithContext(ctx context.Context) ClusterEtcdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEtcdOutput).ToClusterEtcdPtrOutputWithContext(ctx)
}

// ClusterEtcdPtrInput is an input type that accepts ClusterEtcdArgs, ClusterEtcdPtr and ClusterEtcdPtrOutput values.
// You can construct a concrete instance of `ClusterEtcdPtrInput` via:
//
//	        ClusterEtcdArgs{...}
//
//	or:
//
//	        nil
type ClusterEtcdPtrInput interface {
	pulumi.Input

	ToClusterEtcdPtrOutput() ClusterEtcdPtrOutput
	ToClusterEtcdPtrOutputWithContext(context.Context) ClusterEtcdPtrOutput
}

type clusterEtcdPtrType ClusterEtcdArgs

func ClusterEtcdPtr(v *ClusterEtcdArgs) ClusterEtcdPtrInput {
	return (*clusterEtcdPtrType)(v)
}

func (*clusterEtcdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEtcd)(nil)).Elem()
}

func (i *clusterEtcdPtrType) ToClusterEtcdPtrOutput() ClusterEtcdPtrOutput {
	return i.ToClusterEtcdPtrOutputWithContext(context.Background())
}

func (i *clusterEtcdPtrType) ToClusterEtcdPtrOutputWithContext(ctx context.Context) ClusterEtcdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEtcdPtrOutput)
}

type ClusterEtcdOutput struct{ *pulumi.OutputState }

func (ClusterEtcdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEtcd)(nil)).Elem()
}

func (o ClusterEtcdOutput) ToClusterEtcdOutput() ClusterEtcdOutput {
	return o
}

func (o ClusterEtcdOutput) ToClusterEtcdOutputWithContext(ctx context.Context) ClusterEtcdOutput {
	return o
}

func (o ClusterEtcdOutput) ToClusterEtcdPtrOutput() ClusterEtcdPtrOutput {
	return o.ToClusterEtcdPtrOutputWithContext(context.Background())
}

func (o ClusterEtcdOutput) ToClusterEtcdPtrOutputWithContext(ctx context.Context) ClusterEtcdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterEtcd) *ClusterEtcd {
		return &v
	}).(ClusterEtcdPtrOutput)
}

func (o ClusterEtcdOutput) ExternalCluster() ClusterEtcdExternalClusterPtrOutput {
	return o.ApplyT(func(v ClusterEtcd) *ClusterEtcdExternalCluster { return v.ExternalCluster }).(ClusterEtcdExternalClusterPtrOutput)
}

func (o ClusterEtcdOutput) ExtraArgs() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterEtcd) map[string]string { return v.ExtraArgs }).(pulumi.StringMapOutput)
}

func (o ClusterEtcdOutput) PeerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterEtcd) *string { return v.PeerAddress }).(pulumi.StringPtrOutput)
}

type ClusterEtcdPtrOutput struct{ *pulumi.OutputState }

func (ClusterEtcdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEtcd)(nil)).Elem()
}

func (o ClusterEtcdPtrOutput) ToClusterEtcdPtrOutput() ClusterEtcdPtrOutput {
	return o
}

func (o ClusterEtcdPtrOutput) ToClusterEtcdPtrOutputWithContext(ctx context.Context) ClusterEtcdPtrOutput {
	return o
}

func (o ClusterEtcdPtrOutput) Elem() ClusterEtcdOutput {
	return o.ApplyT(func(v *ClusterEtcd) ClusterEtcd {
		if v != nil {
			return *v
		}
		var ret ClusterEtcd
		return ret
	}).(ClusterEtcdOutput)
}

func (o ClusterEtcdPtrOutput) ExternalCluster() ClusterEtcdExternalClusterPtrOutput {
	return o.ApplyT(func(v *ClusterEtcd) *ClusterEtcdExternalCluster {
		if v == nil {
			return nil
		}
		return v.ExternalCluster
	}).(ClusterEtcdExternalClusterPtrOutput)
}

func (o ClusterEtcdPtrOutput) ExtraArgs() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterEtcd) map[string]string {
		if v == nil {
			return nil
		}
		return v.ExtraArgs
	}).(pulumi.StringMapOutput)
}

func (o ClusterEtcdPtrOutput) PeerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterEtcd) *string {
		if v == nil {
			return nil
		}
		return v.PeerAddress
	}).(pulumi.StringPtrOutput)
}

type ClusterEtcdExternalCluster struct {
	Ca         *string  `pulumi:"ca"`
	ClientCert *string  `pulumi:"clientCert"`
	ClientKey  *string  `pulumi:"clientKey"`
	Endpoints  []string `pulumi:"endpoints"`
	EtcdPrefix *string  `pulumi:"etcdPrefix"`
}

// ClusterEtcdExternalClusterInput is an input type that accepts ClusterEtcdExternalClusterArgs and ClusterEtcdExternalClusterOutput values.
// You can construct a concrete instance of `ClusterEtcdExternalClusterInput` via:
//
//	ClusterEtcdExternalClusterArgs{...}
type ClusterEtcdExternalClusterInput interface {
	pulumi.Input

	ToClusterEtcdExternalClusterOutput() ClusterEtcdExternalClusterOutput
	ToClusterEtcdExternalClusterOutputWithContext(context.Context) ClusterEtcdExternalClusterOutput
}

type ClusterEtcdExternalClusterArgs struct {
	Ca         pulumi.StringPtrInput   `pulumi:"ca"`
	ClientCert pulumi.StringPtrInput   `pulumi:"clientCert"`
	ClientKey  pulumi.StringPtrInput   `pulumi:"clientKey"`
	Endpoints  pulumi.StringArrayInput `pulumi:"endpoints"`
	EtcdPrefix pulumi.StringPtrInput   `pulumi:"etcdPrefix"`
}

func (ClusterEtcdExternalClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEtcdExternalCluster)(nil)).Elem()
}

func (i ClusterEtcdExternalClusterArgs) ToClusterEtcdExternalClusterOutput() ClusterEtcdExternalClusterOutput {
	return i.ToClusterEtcdExternalClusterOutputWithContext(context.Background())
}

func (i ClusterEtcdExternalClusterArgs) ToClusterEtcdExternalClusterOutputWithContext(ctx context.Context) ClusterEtcdExternalClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEtcdExternalClusterOutput)
}

func (i ClusterEtcdExternalClusterArgs) ToClusterEtcdExternalClusterPtrOutput() ClusterEtcdExternalClusterPtrOutput {
	return i.ToClusterEtcdExternalClusterPtrOutputWithContext(context.Background())
}

func (i ClusterEtcdExternalClusterArgs) ToClusterEtcdExternalClusterPtrOutputWithContext(ctx context.Context) ClusterEtcdExternalClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEtcdExternalClusterOutput).ToClusterEtcdExternalClusterPtrOutputWithContext(ctx)
}

// ClusterEtcdExternalClusterPtrInput is an input type that accepts ClusterEtcdExternalClusterArgs, ClusterEtcdExternalClusterPtr and ClusterEtcdExternalClusterPtrOutput values.
// You can construct a concrete instance of `ClusterEtcdExternalClusterPtrInput` via:
//
//	        ClusterEtcdExternalClusterArgs{...}
//
//	or:
//
//	        nil
type ClusterEtcdExternalClusterPtrInput interface {
	pulumi.Input

	ToClusterEtcdExternalClusterPtrOutput() ClusterEtcdExternalClusterPtrOutput
	ToClusterEtcdExternalClusterPtrOutputWithContext(context.Context) ClusterEtcdExternalClusterPtrOutput
}

type clusterEtcdExternalClusterPtrType ClusterEtcdExternalClusterArgs

func ClusterEtcdExternalClusterPtr(v *ClusterEtcdExternalClusterArgs) ClusterEtcdExternalClusterPtrInput {
	return (*clusterEtcdExternalClusterPtrType)(v)
}

func (*clusterEtcdExternalClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEtcdExternalCluster)(nil)).Elem()
}

func (i *clusterEtcdExternalClusterPtrType) ToClusterEtcdExternalClusterPtrOutput() ClusterEtcdExternalClusterPtrOutput {
	return i.ToClusterEtcdExternalClusterPtrOutputWithContext(context.Background())
}

func (i *clusterEtcdExternalClusterPtrType) ToClusterEtcdExternalClusterPtrOutputWithContext(ctx context.Context) ClusterEtcdExternalClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEtcdExternalClusterPtrOutput)
}

type ClusterEtcdExternalClusterOutput struct{ *pulumi.OutputState }

func (ClusterEtcdExternalClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEtcdExternalCluster)(nil)).Elem()
}

func (o ClusterEtcdExternalClusterOutput) ToClusterEtcdExternalClusterOutput() ClusterEtcdExternalClusterOutput {
	return o
}

func (o ClusterEtcdExternalClusterOutput) ToClusterEtcdExternalClusterOutputWithContext(ctx context.Context) ClusterEtcdExternalClusterOutput {
	return o
}

func (o ClusterEtcdExternalClusterOutput) ToClusterEtcdExternalClusterPtrOutput() ClusterEtcdExternalClusterPtrOutput {
	return o.ToClusterEtcdExternalClusterPtrOutputWithContext(context.Background())
}

func (o ClusterEtcdExternalClusterOutput) ToClusterEtcdExternalClusterPtrOutputWithContext(ctx context.Context) ClusterEtcdExternalClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterEtcdExternalCluster) *ClusterEtcdExternalCluster {
		return &v
	}).(ClusterEtcdExternalClusterPtrOutput)
}

func (o ClusterEtcdExternalClusterOutput) Ca() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterEtcdExternalCluster) *string { return v.Ca }).(pulumi.StringPtrOutput)
}

func (o ClusterEtcdExternalClusterOutput) ClientCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterEtcdExternalCluster) *string { return v.ClientCert }).(pulumi.StringPtrOutput)
}

func (o ClusterEtcdExternalClusterOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterEtcdExternalCluster) *string { return v.ClientKey }).(pulumi.StringPtrOutput)
}

func (o ClusterEtcdExternalClusterOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterEtcdExternalCluster) []string { return v.Endpoints }).(pulumi.StringArrayOutput)
}

func (o ClusterEtcdExternalClusterOutput) EtcdPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterEtcdExternalCluster) *string { return v.EtcdPrefix }).(pulumi.StringPtrOutput)
}

type ClusterEtcdExternalClusterPtrOutput struct{ *pulumi.OutputState }

func (ClusterEtcdExternalClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEtcdExternalCluster)(nil)).Elem()
}

func (o ClusterEtcdExternalClusterPtrOutput) ToClusterEtcdExternalClusterPtrOutput() ClusterEtcdExternalClusterPtrOutput {
	return o
}

func (o ClusterEtcdExternalClusterPtrOutput) ToClusterEtcdExternalClusterPtrOutputWithContext(ctx context.Context) ClusterEtcdExternalClusterPtrOutput {
	return o
}

func (o ClusterEtcdExternalClusterPtrOutput) Elem() ClusterEtcdExternalClusterOutput {
	return o.ApplyT(func(v *ClusterEtcdExternalCluster) ClusterEtcdExternalCluster {
		if v != nil {
			return *v
		}
		var ret ClusterEtcdExternalCluster
		return ret
	}).(ClusterEtcdExternalClusterOutput)
}

func (o ClusterEtcdExternalClusterPtrOutput) Ca() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterEtcdExternalCluster) *string {
		if v == nil {
			return nil
		}
		return v.Ca
	}).(pulumi.StringPtrOutput)
}

func (o ClusterEtcdExternalClusterPtrOutput) ClientCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterEtcdExternalCluster) *string {
		if v == nil {
			return nil
		}
		return v.ClientCert
	}).(pulumi.StringPtrOutput)
}

func (o ClusterEtcdExternalClusterPtrOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterEtcdExternalCluster) *string {
		if v == nil {
			return nil
		}
		return v.ClientKey
	}).(pulumi.StringPtrOutput)
}

func (o ClusterEtcdExternalClusterPtrOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterEtcdExternalCluster) []string {
		if v == nil {
			return nil
		}
		return v.Endpoints
	}).(pulumi.StringArrayOutput)
}

func (o ClusterEtcdExternalClusterPtrOutput) EtcdPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterEtcdExternalCluster) *string {
		if v == nil {
			return nil
		}
		return v.EtcdPrefix
	}).(pulumi.StringPtrOutput)
}

type ClusterFeatureGate struct {
	Components []string `pulumi:"components"`
	Enabled    *bool    `pulumi:"enabled"`
	Name       string   `pulumi:"name"`
}

// ClusterFeatureGateInput is an input type that accepts ClusterFeatureGateArgs and ClusterFeatureGateOutput values.
// You can construct a concrete instance of `ClusterFeatureGateInput` via:
//
//	ClusterFeatureGateArgs{...}
type ClusterFeatureGateInput interface {
	pulumi.Input

	ToClusterFeatureGateOutput() ClusterFeatureGateOutput
	ToClusterFeatureGateOutputWithContext(context.Context) ClusterFeatureGateOutput
}

type ClusterFeatureGateArgs struct {
	Components pulumi.StringArrayInput `pulumi:"components"`
	Enabled    pulumi.BoolPtrInput     `pulumi:"enabled"`
	Name       pulumi.StringInput      `pulumi:"name"`
}

func (ClusterFeatureGateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterFeatureGate)(nil)).Elem()
}

func (i ClusterFeatureGateArgs) ToClusterFeatureGateOutput() ClusterFeatureGateOutput {
	return i.ToClusterFeatureGateOutputWithContext(context.Background())
}

func (i ClusterFeatureGateArgs) ToClusterFeatureGateOutputWithContext(ctx context.Context) ClusterFeatureGateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterFeatureGateOutput)
}

// ClusterFeatureGateArrayInput is an input type that accepts ClusterFeatureGateArray and ClusterFeatureGateArrayOutput values.
// You can construct a concrete instance of `ClusterFeatureGateArrayInput` via:
//
//	ClusterFeatureGateArray{ ClusterFeatureGateArgs{...} }
type ClusterFeatureGateArrayInput interface {
	pulumi.Input

	ToClusterFeatureGateArrayOutput() ClusterFeatureGateArrayOutput
	ToClusterFeatureGateArrayOutputWithContext(context.Context) ClusterFeatureGateArrayOutput
}

type ClusterFeatureGateArray []ClusterFeatureGateInput

func (ClusterFeatureGateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterFeatureGate)(nil)).Elem()
}

func (i ClusterFeatureGateArray) ToClusterFeatureGateArrayOutput() ClusterFeatureGateArrayOutput {
	return i.ToClusterFeatureGateArrayOutputWithContext(context.Background())
}

func (i ClusterFeatureGateArray) ToClusterFeatureGateArrayOutputWithContext(ctx context.Context) ClusterFeatureGateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterFeatureGateArrayOutput)
}

type ClusterFeatureGateOutput struct{ *pulumi.OutputState }

func (ClusterFeatureGateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterFeatureGate)(nil)).Elem()
}

func (o ClusterFeatureGateOutput) ToClusterFeatureGateOutput() ClusterFeatureGateOutput {
	return o
}

func (o ClusterFeatureGateOutput) ToClusterFeatureGateOutputWithContext(ctx context.Context) ClusterFeatureGateOutput {
	return o
}

func (o ClusterFeatureGateOutput) Components() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterFeatureGate) []string { return v.Components }).(pulumi.StringArrayOutput)
}

func (o ClusterFeatureGateOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterFeatureGate) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o ClusterFeatureGateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterFeatureGate) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterFeatureGateArrayOutput struct{ *pulumi.OutputState }

func (ClusterFeatureGateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterFeatureGate)(nil)).Elem()
}

func (o ClusterFeatureGateArrayOutput) ToClusterFeatureGateArrayOutput() ClusterFeatureGateArrayOutput {
	return o
}

func (o ClusterFeatureGateArrayOutput) ToClusterFeatureGateArrayOutputWithContext(ctx context.Context) ClusterFeatureGateArrayOutput {
	return o
}

func (o ClusterFeatureGateArrayOutput) Index(i pulumi.IntInput) ClusterFeatureGateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterFeatureGate {
		return vs[0].([]ClusterFeatureGate)[vs[1].(int)]
	}).(ClusterFeatureGateOutput)
}

type ClusterFile struct {
	DirPerm *string `pulumi:"dirPerm"`
	Dst     *string `pulumi:"dst"`
	DstDir  *string `pulumi:"dstDir"`
	Group   *string `pulumi:"group"`
	Name    *string `pulumi:"name"`
	Perm    *string `pulumi:"perm"`
	Src     *string `pulumi:"src"`
	User    *string `pulumi:"user"`
}

// ClusterFileInput is an input type that accepts ClusterFileArgs and ClusterFileOutput values.
// You can construct a concrete instance of `ClusterFileInput` via:
//
//	ClusterFileArgs{...}
type ClusterFileInput interface {
	pulumi.Input

	ToClusterFileOutput() ClusterFileOutput
	ToClusterFileOutputWithContext(context.Context) ClusterFileOutput
}

type ClusterFileArgs struct {
	DirPerm pulumi.StringPtrInput `pulumi:"dirPerm"`
	Dst     pulumi.StringPtrInput `pulumi:"dst"`
	DstDir  pulumi.StringPtrInput `pulumi:"dstDir"`
	Group   pulumi.StringPtrInput `pulumi:"group"`
	Name    pulumi.StringPtrInput `pulumi:"name"`
	Perm    pulumi.StringPtrInput `pulumi:"perm"`
	Src     pulumi.StringPtrInput `pulumi:"src"`
	User    pulumi.StringPtrInput `pulumi:"user"`
}

func (ClusterFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterFile)(nil)).Elem()
}

func (i ClusterFileArgs) ToClusterFileOutput() ClusterFileOutput {
	return i.ToClusterFileOutputWithContext(context.Background())
}

func (i ClusterFileArgs) ToClusterFileOutputWithContext(ctx context.Context) ClusterFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterFileOutput)
}

// ClusterFileArrayInput is an input type that accepts ClusterFileArray and ClusterFileArrayOutput values.
// You can construct a concrete instance of `ClusterFileArrayInput` via:
//
//	ClusterFileArray{ ClusterFileArgs{...} }
type ClusterFileArrayInput interface {
	pulumi.Input

	ToClusterFileArrayOutput() ClusterFileArrayOutput
	ToClusterFileArrayOutputWithContext(context.Context) ClusterFileArrayOutput
}

type ClusterFileArray []ClusterFileInput

func (ClusterFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterFile)(nil)).Elem()
}

func (i ClusterFileArray) ToClusterFileArrayOutput() ClusterFileArrayOutput {
	return i.ToClusterFileArrayOutputWithContext(context.Background())
}

func (i ClusterFileArray) ToClusterFileArrayOutputWithContext(ctx context.Context) ClusterFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterFileArrayOutput)
}

type ClusterFileOutput struct{ *pulumi.OutputState }

func (ClusterFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterFile)(nil)).Elem()
}

func (o ClusterFileOutput) ToClusterFileOutput() ClusterFileOutput {
	return o
}

func (o ClusterFileOutput) ToClusterFileOutputWithContext(ctx context.Context) ClusterFileOutput {
	return o
}

func (o ClusterFileOutput) DirPerm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterFile) *string { return v.DirPerm }).(pulumi.StringPtrOutput)
}

func (o ClusterFileOutput) Dst() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterFile) *string { return v.Dst }).(pulumi.StringPtrOutput)
}

func (o ClusterFileOutput) DstDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterFile) *string { return v.DstDir }).(pulumi.StringPtrOutput)
}

func (o ClusterFileOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterFile) *string { return v.Group }).(pulumi.StringPtrOutput)
}

func (o ClusterFileOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterFile) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ClusterFileOutput) Perm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterFile) *string { return v.Perm }).(pulumi.StringPtrOutput)
}

func (o ClusterFileOutput) Src() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterFile) *string { return v.Src }).(pulumi.StringPtrOutput)
}

func (o ClusterFileOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterFile) *string { return v.User }).(pulumi.StringPtrOutput)
}

type ClusterFileArrayOutput struct{ *pulumi.OutputState }

func (ClusterFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterFile)(nil)).Elem()
}

func (o ClusterFileArrayOutput) ToClusterFileArrayOutput() ClusterFileArrayOutput {
	return o
}

func (o ClusterFileArrayOutput) ToClusterFileArrayOutputWithContext(ctx context.Context) ClusterFileArrayOutput {
	return o
}

func (o ClusterFileArrayOutput) Index(i pulumi.IntInput) ClusterFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterFile {
		return vs[0].([]ClusterFile)[vs[1].(int)]
	}).(ClusterFileOutput)
}

type ClusterHook struct {
	After  []string `pulumi:"after"`
	Before []string `pulumi:"before"`
}

// ClusterHookInput is an input type that accepts ClusterHookArgs and ClusterHookOutput values.
// You can construct a concrete instance of `ClusterHookInput` via:
//
//	ClusterHookArgs{...}
type ClusterHookInput interface {
	pulumi.Input

	ToClusterHookOutput() ClusterHookOutput
	ToClusterHookOutputWithContext(context.Context) ClusterHookOutput
}

type ClusterHookArgs struct {
	After  pulumi.StringArrayInput `pulumi:"after"`
	Before pulumi.StringArrayInput `pulumi:"before"`
}

func (ClusterHookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterHook)(nil)).Elem()
}

func (i ClusterHookArgs) ToClusterHookOutput() ClusterHookOutput {
	return i.ToClusterHookOutputWithContext(context.Background())
}

func (i ClusterHookArgs) ToClusterHookOutputWithContext(ctx context.Context) ClusterHookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterHookOutput)
}

func (i ClusterHookArgs) ToClusterHookPtrOutput() ClusterHookPtrOutput {
	return i.ToClusterHookPtrOutputWithContext(context.Background())
}

func (i ClusterHookArgs) ToClusterHookPtrOutputWithContext(ctx context.Context) ClusterHookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterHookOutput).ToClusterHookPtrOutputWithContext(ctx)
}

// ClusterHookPtrInput is an input type that accepts ClusterHookArgs, ClusterHookPtr and ClusterHookPtrOutput values.
// You can construct a concrete instance of `ClusterHookPtrInput` via:
//
//	        ClusterHookArgs{...}
//
//	or:
//
//	        nil
type ClusterHookPtrInput interface {
	pulumi.Input

	ToClusterHookPtrOutput() ClusterHookPtrOutput
	ToClusterHookPtrOutputWithContext(context.Context) ClusterHookPtrOutput
}

type clusterHookPtrType ClusterHookArgs

func ClusterHookPtr(v *ClusterHookArgs) ClusterHookPtrInput {
	return (*clusterHookPtrType)(v)
}

func (*clusterHookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterHook)(nil)).Elem()
}

func (i *clusterHookPtrType) ToClusterHookPtrOutput() ClusterHookPtrOutput {
	return i.ToClusterHookPtrOutputWithContext(context.Background())
}

func (i *clusterHookPtrType) ToClusterHookPtrOutputWithContext(ctx context.Context) ClusterHookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterHookPtrOutput)
}

type ClusterHookOutput struct{ *pulumi.OutputState }

func (ClusterHookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterHook)(nil)).Elem()
}

func (o ClusterHookOutput) ToClusterHookOutput() ClusterHookOutput {
	return o
}

func (o ClusterHookOutput) ToClusterHookOutputWithContext(ctx context.Context) ClusterHookOutput {
	return o
}

func (o ClusterHookOutput) ToClusterHookPtrOutput() ClusterHookPtrOutput {
	return o.ToClusterHookPtrOutputWithContext(context.Background())
}

func (o ClusterHookOutput) ToClusterHookPtrOutputWithContext(ctx context.Context) ClusterHookPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterHook) *ClusterHook {
		return &v
	}).(ClusterHookPtrOutput)
}

func (o ClusterHookOutput) After() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterHook) []string { return v.After }).(pulumi.StringArrayOutput)
}

func (o ClusterHookOutput) Before() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterHook) []string { return v.Before }).(pulumi.StringArrayOutput)
}

type ClusterHookPtrOutput struct{ *pulumi.OutputState }

func (ClusterHookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterHook)(nil)).Elem()
}

func (o ClusterHookPtrOutput) ToClusterHookPtrOutput() ClusterHookPtrOutput {
	return o
}

func (o ClusterHookPtrOutput) ToClusterHookPtrOutputWithContext(ctx context.Context) ClusterHookPtrOutput {
	return o
}

func (o ClusterHookPtrOutput) Elem() ClusterHookOutput {
	return o.ApplyT(func(v *ClusterHook) ClusterHook {
		if v != nil {
			return *v
		}
		var ret ClusterHook
		return ret
	}).(ClusterHookOutput)
}

func (o ClusterHookPtrOutput) After() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterHook) []string {
		if v == nil {
			return nil
		}
		return v.After
	}).(pulumi.StringArrayOutput)
}

func (o ClusterHookPtrOutput) Before() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterHook) []string {
		if v == nil {
			return nil
		}
		return v.Before
	}).(pulumi.StringArrayOutput)
}

type ClusterHooks struct {
	Apply  *ClusterHook `pulumi:"apply"`
	Backup *ClusterHook `pulumi:"backup"`
	Reset  *ClusterHook `pulumi:"reset"`
}

// ClusterHooksInput is an input type that accepts ClusterHooksArgs and ClusterHooksOutput values.
// You can construct a concrete instance of `ClusterHooksInput` via:
//
//	ClusterHooksArgs{...}
type ClusterHooksInput interface {
	pulumi.Input

	ToClusterHooksOutput() ClusterHooksOutput
	ToClusterHooksOutputWithContext(context.Context) ClusterHooksOutput
}

type ClusterHooksArgs struct {
	Apply  ClusterHookPtrInput `pulumi:"apply"`
	Backup ClusterHookPtrInput `pulumi:"backup"`
	Reset  ClusterHookPtrInput `pulumi:"reset"`
}

func (ClusterHooksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterHooks)(nil)).Elem()
}

func (i ClusterHooksArgs) ToClusterHooksOutput() ClusterHooksOutput {
	return i.ToClusterHooksOutputWithContext(context.Background())
}

func (i ClusterHooksArgs) ToClusterHooksOutputWithContext(ctx context.Context) ClusterHooksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterHooksOutput)
}

func (i ClusterHooksArgs) ToClusterHooksPtrOutput() ClusterHooksPtrOutput {
	return i.ToClusterHooksPtrOutputWithContext(context.Background())
}

func (i ClusterHooksArgs) ToClusterHooksPtrOutputWithContext(ctx context.Context) ClusterHooksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterHooksOutput).ToClusterHooksPtrOutputWithContext(ctx)
}

// ClusterHooksPtrInput is an input type that accepts ClusterHooksArgs, ClusterHooksPtr and ClusterHooksPtrOutput values.
// You can construct a concrete instance of `ClusterHooksPtrInput` via:
//
//	        ClusterHooksArgs{...}
//
//	or:
//
//	        nil
type ClusterHooksPtrInput interface {
	pulumi.Input

	ToClusterHooksPtrOutput() ClusterHooksPtrOutput
	ToClusterHooksPtrOutputWithContext(context.Context) ClusterHooksPtrOutput
}

type clusterHooksPtrType ClusterHooksArgs

func ClusterHooksPtr(v *ClusterHooksArgs) ClusterHooksPtrInput {
	return (*clusterHooksPtrType)(v)
}

func (*clusterHooksPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterHooks)(nil)).Elem()
}

func (i *clusterHooksPtrType) ToClusterHooksPtrOutput() ClusterHooksPtrOutput {
	return i.ToClusterHooksPtrOutputWithContext(context.Background())
}

func (i *clusterHooksPtrType) ToClusterHooksPtrOutputWithContext(ctx context.Context) ClusterHooksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterHooksPtrOutput)
}

type ClusterHooksOutput struct{ *pulumi.OutputState }

func (ClusterHooksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterHooks)(nil)).Elem()
}

func (o ClusterHooksOutput) ToClusterHooksOutput() ClusterHooksOutput {
	return o
}

func (o ClusterHooksOutput) ToClusterHooksOutputWithContext(ctx context.Context) ClusterHooksOutput {
	return o
}

func (o ClusterHooksOutput) ToClusterHooksPtrOutput() ClusterHooksPtrOutput {
	return o.ToClusterHooksPtrOutputWithContext(context.Background())
}

func (o ClusterHooksOutput) ToClusterHooksPtrOutputWithContext(ctx context.Context) ClusterHooksPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterHooks) *ClusterHooks {
		return &v
	}).(ClusterHooksPtrOutput)
}

func (o ClusterHooksOutput) Apply() ClusterHookPtrOutput {
	return o.ApplyT(func(v ClusterHooks) *ClusterHook { return v.Apply }).(ClusterHookPtrOutput)
}

func (o ClusterHooksOutput) Backup() ClusterHookPtrOutput {
	return o.ApplyT(func(v ClusterHooks) *ClusterHook { return v.Backup }).(ClusterHookPtrOutput)
}

func (o ClusterHooksOutput) Reset() ClusterHookPtrOutput {
	return o.ApplyT(func(v ClusterHooks) *ClusterHook { return v.Reset }).(ClusterHookPtrOutput)
}

type ClusterHooksPtrOutput struct{ *pulumi.OutputState }

func (ClusterHooksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterHooks)(nil)).Elem()
}

func (o ClusterHooksPtrOutput) ToClusterHooksPtrOutput() ClusterHooksPtrOutput {
	return o
}

func (o ClusterHooksPtrOutput) ToClusterHooksPtrOutputWithContext(ctx context.Context) ClusterHooksPtrOutput {
	return o
}

func (o ClusterHooksPtrOutput) Elem() ClusterHooksOutput {
	return o.ApplyT(func(v *ClusterHooks) ClusterHooks {
		if v != nil {
			return *v
		}
		var ret ClusterHooks
		return ret
	}).(ClusterHooksOutput)
}

func (o ClusterHooksPtrOutput) Apply() ClusterHookPtrOutput {
	return o.ApplyT(func(v *ClusterHooks) *ClusterHook {
		if v == nil {
			return nil
		}
		return v.Apply
	}).(ClusterHookPtrOutput)
}

func (o ClusterHooksPtrOutput) Backup() ClusterHookPtrOutput {
	return o.ApplyT(func(v *ClusterHooks) *ClusterHook {
		if v == nil {
			return nil
		}
		return v.Backup
	}).(ClusterHookPtrOutput)
}

func (o ClusterHooksPtrOutput) Reset() ClusterHookPtrOutput {
	return o.ApplyT(func(v *ClusterHooks) *ClusterHook {
		if v == nil {
			return nil
		}
		return v.Reset
	}).(ClusterHookPtrOutput)
}

type ClusterHost struct {
	Environment      map[string]string `pulumi:"environment"`
	Files            []ClusterFile     `pulumi:"files"`
	Hooks            *ClusterHooks     `pulumi:"hooks"`
	Hostname         *string           `pulumi:"hostname"`
	InstallFlags     []string          `pulumi:"installFlags"`
	K0sBinaryPath    *string           `pulumi:"k0sBinaryPath"`
	Localhost        *ClusterLocalhost `pulumi:"localhost"`
	NoTaints         *bool             `pulumi:"noTaints"`
	Os               *string           `pulumi:"os"`
	PrivateAddress   *string           `pulumi:"privateAddress"`
	PrivateInterface *string           `pulumi:"privateInterface"`
	Role             string            `pulumi:"role"`
	Ssh              *ClusterSSH       `pulumi:"ssh"`
	UploadBinary     *bool             `pulumi:"uploadBinary"`
	WinRM            *ClusterWinRM     `pulumi:"winRM"`
}

// ClusterHostInput is an input type that accepts ClusterHostArgs and ClusterHostOutput values.
// You can construct a concrete instance of `ClusterHostInput` via:
//
//	ClusterHostArgs{...}
type ClusterHostInput interface {
	pulumi.Input

	ToClusterHostOutput() ClusterHostOutput
	ToClusterHostOutputWithContext(context.Context) ClusterHostOutput
}

type ClusterHostArgs struct {
	Environment      pulumi.StringMapInput    `pulumi:"environment"`
	Files            ClusterFileArrayInput    `pulumi:"files"`
	Hooks            ClusterHooksPtrInput     `pulumi:"hooks"`
	Hostname         pulumi.StringPtrInput    `pulumi:"hostname"`
	InstallFlags     pulumi.StringArrayInput  `pulumi:"installFlags"`
	K0sBinaryPath    pulumi.StringPtrInput    `pulumi:"k0sBinaryPath"`
	Localhost        ClusterLocalhostPtrInput `pulumi:"localhost"`
	NoTaints         pulumi.BoolPtrInput      `pulumi:"noTaints"`
	Os               pulumi.StringPtrInput    `pulumi:"os"`
	PrivateAddress   pulumi.StringPtrInput    `pulumi:"privateAddress"`
	PrivateInterface pulumi.StringPtrInput    `pulumi:"privateInterface"`
	Role             pulumi.StringInput       `pulumi:"role"`
	Ssh              ClusterSSHPtrInput       `pulumi:"ssh"`
	UploadBinary     pulumi.BoolPtrInput      `pulumi:"uploadBinary"`
	WinRM            ClusterWinRMPtrInput     `pulumi:"winRM"`
}

func (ClusterHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterHost)(nil)).Elem()
}

func (i ClusterHostArgs) ToClusterHostOutput() ClusterHostOutput {
	return i.ToClusterHostOutputWithContext(context.Background())
}

func (i ClusterHostArgs) ToClusterHostOutputWithContext(ctx context.Context) ClusterHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterHostOutput)
}

// ClusterHostArrayInput is an input type that accepts ClusterHostArray and ClusterHostArrayOutput values.
// You can construct a concrete instance of `ClusterHostArrayInput` via:
//
//	ClusterHostArray{ ClusterHostArgs{...} }
type ClusterHostArrayInput interface {
	pulumi.Input

	ToClusterHostArrayOutput() ClusterHostArrayOutput
	ToClusterHostArrayOutputWithContext(context.Context) ClusterHostArrayOutput
}

type ClusterHostArray []ClusterHostInput

func (ClusterHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterHost)(nil)).Elem()
}

func (i ClusterHostArray) ToClusterHostArrayOutput() ClusterHostArrayOutput {
	return i.ToClusterHostArrayOutputWithContext(context.Background())
}

func (i ClusterHostArray) ToClusterHostArrayOutputWithContext(ctx context.Context) ClusterHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterHostArrayOutput)
}

type ClusterHostOutput struct{ *pulumi.OutputState }

func (ClusterHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterHost)(nil)).Elem()
}

func (o ClusterHostOutput) ToClusterHostOutput() ClusterHostOutput {
	return o
}

func (o ClusterHostOutput) ToClusterHostOutputWithContext(ctx context.Context) ClusterHostOutput {
	return o
}

func (o ClusterHostOutput) Environment() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterHost) map[string]string { return v.Environment }).(pulumi.StringMapOutput)
}

func (o ClusterHostOutput) Files() ClusterFileArrayOutput {
	return o.ApplyT(func(v ClusterHost) []ClusterFile { return v.Files }).(ClusterFileArrayOutput)
}

func (o ClusterHostOutput) Hooks() ClusterHooksPtrOutput {
	return o.ApplyT(func(v ClusterHost) *ClusterHooks { return v.Hooks }).(ClusterHooksPtrOutput)
}

func (o ClusterHostOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterHost) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

func (o ClusterHostOutput) InstallFlags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterHost) []string { return v.InstallFlags }).(pulumi.StringArrayOutput)
}

func (o ClusterHostOutput) K0sBinaryPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterHost) *string { return v.K0sBinaryPath }).(pulumi.StringPtrOutput)
}

func (o ClusterHostOutput) Localhost() ClusterLocalhostPtrOutput {
	return o.ApplyT(func(v ClusterHost) *ClusterLocalhost { return v.Localhost }).(ClusterLocalhostPtrOutput)
}

func (o ClusterHostOutput) NoTaints() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterHost) *bool { return v.NoTaints }).(pulumi.BoolPtrOutput)
}

func (o ClusterHostOutput) Os() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterHost) *string { return v.Os }).(pulumi.StringPtrOutput)
}

func (o ClusterHostOutput) PrivateAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterHost) *string { return v.PrivateAddress }).(pulumi.StringPtrOutput)
}

func (o ClusterHostOutput) PrivateInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterHost) *string { return v.PrivateInterface }).(pulumi.StringPtrOutput)
}

func (o ClusterHostOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterHost) string { return v.Role }).(pulumi.StringOutput)
}

func (o ClusterHostOutput) Ssh() ClusterSSHPtrOutput {
	return o.ApplyT(func(v ClusterHost) *ClusterSSH { return v.Ssh }).(ClusterSSHPtrOutput)
}

func (o ClusterHostOutput) UploadBinary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterHost) *bool { return v.UploadBinary }).(pulumi.BoolPtrOutput)
}

func (o ClusterHostOutput) WinRM() ClusterWinRMPtrOutput {
	return o.ApplyT(func(v ClusterHost) *ClusterWinRM { return v.WinRM }).(ClusterWinRMPtrOutput)
}

type ClusterHostArrayOutput struct{ *pulumi.OutputState }

func (ClusterHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterHost)(nil)).Elem()
}

func (o ClusterHostArrayOutput) ToClusterHostArrayOutput() ClusterHostArrayOutput {
	return o
}

func (o ClusterHostArrayOutput) ToClusterHostArrayOutputWithContext(ctx context.Context) ClusterHostArrayOutput {
	return o
}

func (o ClusterHostArrayOutput) Index(i pulumi.IntInput) ClusterHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterHost {
		return vs[0].([]ClusterHost)[vs[1].(int)]
	}).(ClusterHostOutput)
}

type ClusterImage struct {
	Image   *string `pulumi:"image"`
	Version *string `pulumi:"version"`
}

// ClusterImageInput is an input type that accepts ClusterImageArgs and ClusterImageOutput values.
// You can construct a concrete instance of `ClusterImageInput` via:
//
//	ClusterImageArgs{...}
type ClusterImageInput interface {
	pulumi.Input

	ToClusterImageOutput() ClusterImageOutput
	ToClusterImageOutputWithContext(context.Context) ClusterImageOutput
}

type ClusterImageArgs struct {
	Image   pulumi.StringPtrInput `pulumi:"image"`
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ClusterImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterImage)(nil)).Elem()
}

func (i ClusterImageArgs) ToClusterImageOutput() ClusterImageOutput {
	return i.ToClusterImageOutputWithContext(context.Background())
}

func (i ClusterImageArgs) ToClusterImageOutputWithContext(ctx context.Context) ClusterImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterImageOutput)
}

func (i ClusterImageArgs) ToClusterImagePtrOutput() ClusterImagePtrOutput {
	return i.ToClusterImagePtrOutputWithContext(context.Background())
}

func (i ClusterImageArgs) ToClusterImagePtrOutputWithContext(ctx context.Context) ClusterImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterImageOutput).ToClusterImagePtrOutputWithContext(ctx)
}

// ClusterImagePtrInput is an input type that accepts ClusterImageArgs, ClusterImagePtr and ClusterImagePtrOutput values.
// You can construct a concrete instance of `ClusterImagePtrInput` via:
//
//	        ClusterImageArgs{...}
//
//	or:
//
//	        nil
type ClusterImagePtrInput interface {
	pulumi.Input

	ToClusterImagePtrOutput() ClusterImagePtrOutput
	ToClusterImagePtrOutputWithContext(context.Context) ClusterImagePtrOutput
}

type clusterImagePtrType ClusterImageArgs

func ClusterImagePtr(v *ClusterImageArgs) ClusterImagePtrInput {
	return (*clusterImagePtrType)(v)
}

func (*clusterImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterImage)(nil)).Elem()
}

func (i *clusterImagePtrType) ToClusterImagePtrOutput() ClusterImagePtrOutput {
	return i.ToClusterImagePtrOutputWithContext(context.Background())
}

func (i *clusterImagePtrType) ToClusterImagePtrOutputWithContext(ctx context.Context) ClusterImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterImagePtrOutput)
}

type ClusterImageOutput struct{ *pulumi.OutputState }

func (ClusterImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterImage)(nil)).Elem()
}

func (o ClusterImageOutput) ToClusterImageOutput() ClusterImageOutput {
	return o
}

func (o ClusterImageOutput) ToClusterImageOutputWithContext(ctx context.Context) ClusterImageOutput {
	return o
}

func (o ClusterImageOutput) ToClusterImagePtrOutput() ClusterImagePtrOutput {
	return o.ToClusterImagePtrOutputWithContext(context.Background())
}

func (o ClusterImageOutput) ToClusterImagePtrOutputWithContext(ctx context.Context) ClusterImagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterImage) *ClusterImage {
		return &v
	}).(ClusterImagePtrOutput)
}

func (o ClusterImageOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterImage) *string { return v.Image }).(pulumi.StringPtrOutput)
}

func (o ClusterImageOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterImage) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ClusterImagePtrOutput struct{ *pulumi.OutputState }

func (ClusterImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterImage)(nil)).Elem()
}

func (o ClusterImagePtrOutput) ToClusterImagePtrOutput() ClusterImagePtrOutput {
	return o
}

func (o ClusterImagePtrOutput) ToClusterImagePtrOutputWithContext(ctx context.Context) ClusterImagePtrOutput {
	return o
}

func (o ClusterImagePtrOutput) Elem() ClusterImageOutput {
	return o.ApplyT(func(v *ClusterImage) ClusterImage {
		if v != nil {
			return *v
		}
		var ret ClusterImage
		return ret
	}).(ClusterImageOutput)
}

func (o ClusterImagePtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterImage) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

func (o ClusterImagePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterImage) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type ClusterImages struct {
	Calico              *ClusterCalicoImage     `pulumi:"calico"`
	Coredns             *ClusterImage           `pulumi:"coredns"`
	Default_pull_policy *string                 `pulumi:"default_pull_policy"`
	Konnectivity        *ClusterImage           `pulumi:"konnectivity"`
	Kubeproxy           *ClusterImage           `pulumi:"kubeproxy"`
	Kuberouter          *ClusterKubeRouterImage `pulumi:"kuberouter"`
	Metricsserver       *ClusterImage           `pulumi:"metricsserver"`
	Pause               *ClusterImage           `pulumi:"pause"`
	Repository          *string                 `pulumi:"repository"`
}

// ClusterImagesInput is an input type that accepts ClusterImagesArgs and ClusterImagesOutput values.
// You can construct a concrete instance of `ClusterImagesInput` via:
//
//	ClusterImagesArgs{...}
type ClusterImagesInput interface {
	pulumi.Input

	ToClusterImagesOutput() ClusterImagesOutput
	ToClusterImagesOutputWithContext(context.Context) ClusterImagesOutput
}

type ClusterImagesArgs struct {
	Calico              ClusterCalicoImagePtrInput     `pulumi:"calico"`
	Coredns             ClusterImagePtrInput           `pulumi:"coredns"`
	Default_pull_policy pulumi.StringPtrInput          `pulumi:"default_pull_policy"`
	Konnectivity        ClusterImagePtrInput           `pulumi:"konnectivity"`
	Kubeproxy           ClusterImagePtrInput           `pulumi:"kubeproxy"`
	Kuberouter          ClusterKubeRouterImagePtrInput `pulumi:"kuberouter"`
	Metricsserver       ClusterImagePtrInput           `pulumi:"metricsserver"`
	Pause               ClusterImagePtrInput           `pulumi:"pause"`
	Repository          pulumi.StringPtrInput          `pulumi:"repository"`
}

func (ClusterImagesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterImages)(nil)).Elem()
}

func (i ClusterImagesArgs) ToClusterImagesOutput() ClusterImagesOutput {
	return i.ToClusterImagesOutputWithContext(context.Background())
}

func (i ClusterImagesArgs) ToClusterImagesOutputWithContext(ctx context.Context) ClusterImagesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterImagesOutput)
}

func (i ClusterImagesArgs) ToClusterImagesPtrOutput() ClusterImagesPtrOutput {
	return i.ToClusterImagesPtrOutputWithContext(context.Background())
}

func (i ClusterImagesArgs) ToClusterImagesPtrOutputWithContext(ctx context.Context) ClusterImagesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterImagesOutput).ToClusterImagesPtrOutputWithContext(ctx)
}

// ClusterImagesPtrInput is an input type that accepts ClusterImagesArgs, ClusterImagesPtr and ClusterImagesPtrOutput values.
// You can construct a concrete instance of `ClusterImagesPtrInput` via:
//
//	        ClusterImagesArgs{...}
//
//	or:
//
//	        nil
type ClusterImagesPtrInput interface {
	pulumi.Input

	ToClusterImagesPtrOutput() ClusterImagesPtrOutput
	ToClusterImagesPtrOutputWithContext(context.Context) ClusterImagesPtrOutput
}

type clusterImagesPtrType ClusterImagesArgs

func ClusterImagesPtr(v *ClusterImagesArgs) ClusterImagesPtrInput {
	return (*clusterImagesPtrType)(v)
}

func (*clusterImagesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterImages)(nil)).Elem()
}

func (i *clusterImagesPtrType) ToClusterImagesPtrOutput() ClusterImagesPtrOutput {
	return i.ToClusterImagesPtrOutputWithContext(context.Background())
}

func (i *clusterImagesPtrType) ToClusterImagesPtrOutputWithContext(ctx context.Context) ClusterImagesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterImagesPtrOutput)
}

type ClusterImagesOutput struct{ *pulumi.OutputState }

func (ClusterImagesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterImages)(nil)).Elem()
}

func (o ClusterImagesOutput) ToClusterImagesOutput() ClusterImagesOutput {
	return o
}

func (o ClusterImagesOutput) ToClusterImagesOutputWithContext(ctx context.Context) ClusterImagesOutput {
	return o
}

func (o ClusterImagesOutput) ToClusterImagesPtrOutput() ClusterImagesPtrOutput {
	return o.ToClusterImagesPtrOutputWithContext(context.Background())
}

func (o ClusterImagesOutput) ToClusterImagesPtrOutputWithContext(ctx context.Context) ClusterImagesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterImages) *ClusterImages {
		return &v
	}).(ClusterImagesPtrOutput)
}

func (o ClusterImagesOutput) Calico() ClusterCalicoImagePtrOutput {
	return o.ApplyT(func(v ClusterImages) *ClusterCalicoImage { return v.Calico }).(ClusterCalicoImagePtrOutput)
}

func (o ClusterImagesOutput) Coredns() ClusterImagePtrOutput {
	return o.ApplyT(func(v ClusterImages) *ClusterImage { return v.Coredns }).(ClusterImagePtrOutput)
}

func (o ClusterImagesOutput) Default_pull_policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterImages) *string { return v.Default_pull_policy }).(pulumi.StringPtrOutput)
}

func (o ClusterImagesOutput) Konnectivity() ClusterImagePtrOutput {
	return o.ApplyT(func(v ClusterImages) *ClusterImage { return v.Konnectivity }).(ClusterImagePtrOutput)
}

func (o ClusterImagesOutput) Kubeproxy() ClusterImagePtrOutput {
	return o.ApplyT(func(v ClusterImages) *ClusterImage { return v.Kubeproxy }).(ClusterImagePtrOutput)
}

func (o ClusterImagesOutput) Kuberouter() ClusterKubeRouterImagePtrOutput {
	return o.ApplyT(func(v ClusterImages) *ClusterKubeRouterImage { return v.Kuberouter }).(ClusterKubeRouterImagePtrOutput)
}

func (o ClusterImagesOutput) Metricsserver() ClusterImagePtrOutput {
	return o.ApplyT(func(v ClusterImages) *ClusterImage { return v.Metricsserver }).(ClusterImagePtrOutput)
}

func (o ClusterImagesOutput) Pause() ClusterImagePtrOutput {
	return o.ApplyT(func(v ClusterImages) *ClusterImage { return v.Pause }).(ClusterImagePtrOutput)
}

func (o ClusterImagesOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterImages) *string { return v.Repository }).(pulumi.StringPtrOutput)
}

type ClusterImagesPtrOutput struct{ *pulumi.OutputState }

func (ClusterImagesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterImages)(nil)).Elem()
}

func (o ClusterImagesPtrOutput) ToClusterImagesPtrOutput() ClusterImagesPtrOutput {
	return o
}

func (o ClusterImagesPtrOutput) ToClusterImagesPtrOutputWithContext(ctx context.Context) ClusterImagesPtrOutput {
	return o
}

func (o ClusterImagesPtrOutput) Elem() ClusterImagesOutput {
	return o.ApplyT(func(v *ClusterImages) ClusterImages {
		if v != nil {
			return *v
		}
		var ret ClusterImages
		return ret
	}).(ClusterImagesOutput)
}

func (o ClusterImagesPtrOutput) Calico() ClusterCalicoImagePtrOutput {
	return o.ApplyT(func(v *ClusterImages) *ClusterCalicoImage {
		if v == nil {
			return nil
		}
		return v.Calico
	}).(ClusterCalicoImagePtrOutput)
}

func (o ClusterImagesPtrOutput) Coredns() ClusterImagePtrOutput {
	return o.ApplyT(func(v *ClusterImages) *ClusterImage {
		if v == nil {
			return nil
		}
		return v.Coredns
	}).(ClusterImagePtrOutput)
}

func (o ClusterImagesPtrOutput) Default_pull_policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterImages) *string {
		if v == nil {
			return nil
		}
		return v.Default_pull_policy
	}).(pulumi.StringPtrOutput)
}

func (o ClusterImagesPtrOutput) Konnectivity() ClusterImagePtrOutput {
	return o.ApplyT(func(v *ClusterImages) *ClusterImage {
		if v == nil {
			return nil
		}
		return v.Konnectivity
	}).(ClusterImagePtrOutput)
}

func (o ClusterImagesPtrOutput) Kubeproxy() ClusterImagePtrOutput {
	return o.ApplyT(func(v *ClusterImages) *ClusterImage {
		if v == nil {
			return nil
		}
		return v.Kubeproxy
	}).(ClusterImagePtrOutput)
}

func (o ClusterImagesPtrOutput) Kuberouter() ClusterKubeRouterImagePtrOutput {
	return o.ApplyT(func(v *ClusterImages) *ClusterKubeRouterImage {
		if v == nil {
			return nil
		}
		return v.Kuberouter
	}).(ClusterKubeRouterImagePtrOutput)
}

func (o ClusterImagesPtrOutput) Metricsserver() ClusterImagePtrOutput {
	return o.ApplyT(func(v *ClusterImages) *ClusterImage {
		if v == nil {
			return nil
		}
		return v.Metricsserver
	}).(ClusterImagePtrOutput)
}

func (o ClusterImagesPtrOutput) Pause() ClusterImagePtrOutput {
	return o.ApplyT(func(v *ClusterImages) *ClusterImage {
		if v == nil {
			return nil
		}
		return v.Pause
	}).(ClusterImagePtrOutput)
}

func (o ClusterImagesPtrOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterImages) *string {
		if v == nil {
			return nil
		}
		return v.Repository
	}).(pulumi.StringPtrOutput)
}

type ClusterInstallConfig struct {
	Users *ClusterInstallConfigUser `pulumi:"users"`
}

// ClusterInstallConfigInput is an input type that accepts ClusterInstallConfigArgs and ClusterInstallConfigOutput values.
// You can construct a concrete instance of `ClusterInstallConfigInput` via:
//
//	ClusterInstallConfigArgs{...}
type ClusterInstallConfigInput interface {
	pulumi.Input

	ToClusterInstallConfigOutput() ClusterInstallConfigOutput
	ToClusterInstallConfigOutputWithContext(context.Context) ClusterInstallConfigOutput
}

type ClusterInstallConfigArgs struct {
	Users ClusterInstallConfigUserPtrInput `pulumi:"users"`
}

func (ClusterInstallConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallConfig)(nil)).Elem()
}

func (i ClusterInstallConfigArgs) ToClusterInstallConfigOutput() ClusterInstallConfigOutput {
	return i.ToClusterInstallConfigOutputWithContext(context.Background())
}

func (i ClusterInstallConfigArgs) ToClusterInstallConfigOutputWithContext(ctx context.Context) ClusterInstallConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInstallConfigOutput)
}

func (i ClusterInstallConfigArgs) ToClusterInstallConfigPtrOutput() ClusterInstallConfigPtrOutput {
	return i.ToClusterInstallConfigPtrOutputWithContext(context.Background())
}

func (i ClusterInstallConfigArgs) ToClusterInstallConfigPtrOutputWithContext(ctx context.Context) ClusterInstallConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInstallConfigOutput).ToClusterInstallConfigPtrOutputWithContext(ctx)
}

// ClusterInstallConfigPtrInput is an input type that accepts ClusterInstallConfigArgs, ClusterInstallConfigPtr and ClusterInstallConfigPtrOutput values.
// You can construct a concrete instance of `ClusterInstallConfigPtrInput` via:
//
//	        ClusterInstallConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterInstallConfigPtrInput interface {
	pulumi.Input

	ToClusterInstallConfigPtrOutput() ClusterInstallConfigPtrOutput
	ToClusterInstallConfigPtrOutputWithContext(context.Context) ClusterInstallConfigPtrOutput
}

type clusterInstallConfigPtrType ClusterInstallConfigArgs

func ClusterInstallConfigPtr(v *ClusterInstallConfigArgs) ClusterInstallConfigPtrInput {
	return (*clusterInstallConfigPtrType)(v)
}

func (*clusterInstallConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterInstallConfig)(nil)).Elem()
}

func (i *clusterInstallConfigPtrType) ToClusterInstallConfigPtrOutput() ClusterInstallConfigPtrOutput {
	return i.ToClusterInstallConfigPtrOutputWithContext(context.Background())
}

func (i *clusterInstallConfigPtrType) ToClusterInstallConfigPtrOutputWithContext(ctx context.Context) ClusterInstallConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInstallConfigPtrOutput)
}

type ClusterInstallConfigOutput struct{ *pulumi.OutputState }

func (ClusterInstallConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallConfig)(nil)).Elem()
}

func (o ClusterInstallConfigOutput) ToClusterInstallConfigOutput() ClusterInstallConfigOutput {
	return o
}

func (o ClusterInstallConfigOutput) ToClusterInstallConfigOutputWithContext(ctx context.Context) ClusterInstallConfigOutput {
	return o
}

func (o ClusterInstallConfigOutput) ToClusterInstallConfigPtrOutput() ClusterInstallConfigPtrOutput {
	return o.ToClusterInstallConfigPtrOutputWithContext(context.Background())
}

func (o ClusterInstallConfigOutput) ToClusterInstallConfigPtrOutputWithContext(ctx context.Context) ClusterInstallConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterInstallConfig) *ClusterInstallConfig {
		return &v
	}).(ClusterInstallConfigPtrOutput)
}

func (o ClusterInstallConfigOutput) Users() ClusterInstallConfigUserPtrOutput {
	return o.ApplyT(func(v ClusterInstallConfig) *ClusterInstallConfigUser { return v.Users }).(ClusterInstallConfigUserPtrOutput)
}

type ClusterInstallConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterInstallConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterInstallConfig)(nil)).Elem()
}

func (o ClusterInstallConfigPtrOutput) ToClusterInstallConfigPtrOutput() ClusterInstallConfigPtrOutput {
	return o
}

func (o ClusterInstallConfigPtrOutput) ToClusterInstallConfigPtrOutputWithContext(ctx context.Context) ClusterInstallConfigPtrOutput {
	return o
}

func (o ClusterInstallConfigPtrOutput) Elem() ClusterInstallConfigOutput {
	return o.ApplyT(func(v *ClusterInstallConfig) ClusterInstallConfig {
		if v != nil {
			return *v
		}
		var ret ClusterInstallConfig
		return ret
	}).(ClusterInstallConfigOutput)
}

func (o ClusterInstallConfigPtrOutput) Users() ClusterInstallConfigUserPtrOutput {
	return o.ApplyT(func(v *ClusterInstallConfig) *ClusterInstallConfigUser {
		if v == nil {
			return nil
		}
		return v.Users
	}).(ClusterInstallConfigUserPtrOutput)
}

type ClusterInstallConfigUser struct {
	EtcdUser          *string `pulumi:"etcdUser"`
	KineUser          *string `pulumi:"kineUser"`
	KonnectivityUser  *string `pulumi:"konnectivityUser"`
	KubeAPIserverUser *string `pulumi:"kubeAPIserverUser"`
	KubeSchedulerUser *string `pulumi:"kubeSchedulerUser"`
}

// ClusterInstallConfigUserInput is an input type that accepts ClusterInstallConfigUserArgs and ClusterInstallConfigUserOutput values.
// You can construct a concrete instance of `ClusterInstallConfigUserInput` via:
//
//	ClusterInstallConfigUserArgs{...}
type ClusterInstallConfigUserInput interface {
	pulumi.Input

	ToClusterInstallConfigUserOutput() ClusterInstallConfigUserOutput
	ToClusterInstallConfigUserOutputWithContext(context.Context) ClusterInstallConfigUserOutput
}

type ClusterInstallConfigUserArgs struct {
	EtcdUser          pulumi.StringPtrInput `pulumi:"etcdUser"`
	KineUser          pulumi.StringPtrInput `pulumi:"kineUser"`
	KonnectivityUser  pulumi.StringPtrInput `pulumi:"konnectivityUser"`
	KubeAPIserverUser pulumi.StringPtrInput `pulumi:"kubeAPIserverUser"`
	KubeSchedulerUser pulumi.StringPtrInput `pulumi:"kubeSchedulerUser"`
}

func (ClusterInstallConfigUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallConfigUser)(nil)).Elem()
}

func (i ClusterInstallConfigUserArgs) ToClusterInstallConfigUserOutput() ClusterInstallConfigUserOutput {
	return i.ToClusterInstallConfigUserOutputWithContext(context.Background())
}

func (i ClusterInstallConfigUserArgs) ToClusterInstallConfigUserOutputWithContext(ctx context.Context) ClusterInstallConfigUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInstallConfigUserOutput)
}

func (i ClusterInstallConfigUserArgs) ToClusterInstallConfigUserPtrOutput() ClusterInstallConfigUserPtrOutput {
	return i.ToClusterInstallConfigUserPtrOutputWithContext(context.Background())
}

func (i ClusterInstallConfigUserArgs) ToClusterInstallConfigUserPtrOutputWithContext(ctx context.Context) ClusterInstallConfigUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInstallConfigUserOutput).ToClusterInstallConfigUserPtrOutputWithContext(ctx)
}

// ClusterInstallConfigUserPtrInput is an input type that accepts ClusterInstallConfigUserArgs, ClusterInstallConfigUserPtr and ClusterInstallConfigUserPtrOutput values.
// You can construct a concrete instance of `ClusterInstallConfigUserPtrInput` via:
//
//	        ClusterInstallConfigUserArgs{...}
//
//	or:
//
//	        nil
type ClusterInstallConfigUserPtrInput interface {
	pulumi.Input

	ToClusterInstallConfigUserPtrOutput() ClusterInstallConfigUserPtrOutput
	ToClusterInstallConfigUserPtrOutputWithContext(context.Context) ClusterInstallConfigUserPtrOutput
}

type clusterInstallConfigUserPtrType ClusterInstallConfigUserArgs

func ClusterInstallConfigUserPtr(v *ClusterInstallConfigUserArgs) ClusterInstallConfigUserPtrInput {
	return (*clusterInstallConfigUserPtrType)(v)
}

func (*clusterInstallConfigUserPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterInstallConfigUser)(nil)).Elem()
}

func (i *clusterInstallConfigUserPtrType) ToClusterInstallConfigUserPtrOutput() ClusterInstallConfigUserPtrOutput {
	return i.ToClusterInstallConfigUserPtrOutputWithContext(context.Background())
}

func (i *clusterInstallConfigUserPtrType) ToClusterInstallConfigUserPtrOutputWithContext(ctx context.Context) ClusterInstallConfigUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInstallConfigUserPtrOutput)
}

type ClusterInstallConfigUserOutput struct{ *pulumi.OutputState }

func (ClusterInstallConfigUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInstallConfigUser)(nil)).Elem()
}

func (o ClusterInstallConfigUserOutput) ToClusterInstallConfigUserOutput() ClusterInstallConfigUserOutput {
	return o
}

func (o ClusterInstallConfigUserOutput) ToClusterInstallConfigUserOutputWithContext(ctx context.Context) ClusterInstallConfigUserOutput {
	return o
}

func (o ClusterInstallConfigUserOutput) ToClusterInstallConfigUserPtrOutput() ClusterInstallConfigUserPtrOutput {
	return o.ToClusterInstallConfigUserPtrOutputWithContext(context.Background())
}

func (o ClusterInstallConfigUserOutput) ToClusterInstallConfigUserPtrOutputWithContext(ctx context.Context) ClusterInstallConfigUserPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterInstallConfigUser) *ClusterInstallConfigUser {
		return &v
	}).(ClusterInstallConfigUserPtrOutput)
}

func (o ClusterInstallConfigUserOutput) EtcdUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterInstallConfigUser) *string { return v.EtcdUser }).(pulumi.StringPtrOutput)
}

func (o ClusterInstallConfigUserOutput) KineUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterInstallConfigUser) *string { return v.KineUser }).(pulumi.StringPtrOutput)
}

func (o ClusterInstallConfigUserOutput) KonnectivityUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterInstallConfigUser) *string { return v.KonnectivityUser }).(pulumi.StringPtrOutput)
}

func (o ClusterInstallConfigUserOutput) KubeAPIserverUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterInstallConfigUser) *string { return v.KubeAPIserverUser }).(pulumi.StringPtrOutput)
}

func (o ClusterInstallConfigUserOutput) KubeSchedulerUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterInstallConfigUser) *string { return v.KubeSchedulerUser }).(pulumi.StringPtrOutput)
}

type ClusterInstallConfigUserPtrOutput struct{ *pulumi.OutputState }

func (ClusterInstallConfigUserPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterInstallConfigUser)(nil)).Elem()
}

func (o ClusterInstallConfigUserPtrOutput) ToClusterInstallConfigUserPtrOutput() ClusterInstallConfigUserPtrOutput {
	return o
}

func (o ClusterInstallConfigUserPtrOutput) ToClusterInstallConfigUserPtrOutputWithContext(ctx context.Context) ClusterInstallConfigUserPtrOutput {
	return o
}

func (o ClusterInstallConfigUserPtrOutput) Elem() ClusterInstallConfigUserOutput {
	return o.ApplyT(func(v *ClusterInstallConfigUser) ClusterInstallConfigUser {
		if v != nil {
			return *v
		}
		var ret ClusterInstallConfigUser
		return ret
	}).(ClusterInstallConfigUserOutput)
}

func (o ClusterInstallConfigUserPtrOutput) EtcdUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterInstallConfigUser) *string {
		if v == nil {
			return nil
		}
		return v.EtcdUser
	}).(pulumi.StringPtrOutput)
}

func (o ClusterInstallConfigUserPtrOutput) KineUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterInstallConfigUser) *string {
		if v == nil {
			return nil
		}
		return v.KineUser
	}).(pulumi.StringPtrOutput)
}

func (o ClusterInstallConfigUserPtrOutput) KonnectivityUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterInstallConfigUser) *string {
		if v == nil {
			return nil
		}
		return v.KonnectivityUser
	}).(pulumi.StringPtrOutput)
}

func (o ClusterInstallConfigUserPtrOutput) KubeAPIserverUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterInstallConfigUser) *string {
		if v == nil {
			return nil
		}
		return v.KubeAPIserverUser
	}).(pulumi.StringPtrOutput)
}

func (o ClusterInstallConfigUserPtrOutput) KubeSchedulerUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterInstallConfigUser) *string {
		if v == nil {
			return nil
		}
		return v.KubeSchedulerUser
	}).(pulumi.StringPtrOutput)
}

type ClusterK0s struct {
	Config         *ClusterK0sConfig `pulumi:"config"`
	DynamicConfig  *bool             `pulumi:"dynamicConfig"`
	Version        *string           `pulumi:"version"`
	VersionChannel *string           `pulumi:"versionChannel"`
}

// ClusterK0sInput is an input type that accepts ClusterK0sArgs and ClusterK0sOutput values.
// You can construct a concrete instance of `ClusterK0sInput` via:
//
//	ClusterK0sArgs{...}
type ClusterK0sInput interface {
	pulumi.Input

	ToClusterK0sOutput() ClusterK0sOutput
	ToClusterK0sOutputWithContext(context.Context) ClusterK0sOutput
}

type ClusterK0sArgs struct {
	Config         ClusterK0sConfigPtrInput `pulumi:"config"`
	DynamicConfig  pulumi.BoolPtrInput      `pulumi:"dynamicConfig"`
	Version        pulumi.StringPtrInput    `pulumi:"version"`
	VersionChannel pulumi.StringPtrInput    `pulumi:"versionChannel"`
}

func (ClusterK0sArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterK0s)(nil)).Elem()
}

func (i ClusterK0sArgs) ToClusterK0sOutput() ClusterK0sOutput {
	return i.ToClusterK0sOutputWithContext(context.Background())
}

func (i ClusterK0sArgs) ToClusterK0sOutputWithContext(ctx context.Context) ClusterK0sOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterK0sOutput)
}

func (i ClusterK0sArgs) ToClusterK0sPtrOutput() ClusterK0sPtrOutput {
	return i.ToClusterK0sPtrOutputWithContext(context.Background())
}

func (i ClusterK0sArgs) ToClusterK0sPtrOutputWithContext(ctx context.Context) ClusterK0sPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterK0sOutput).ToClusterK0sPtrOutputWithContext(ctx)
}

// ClusterK0sPtrInput is an input type that accepts ClusterK0sArgs, ClusterK0sPtr and ClusterK0sPtrOutput values.
// You can construct a concrete instance of `ClusterK0sPtrInput` via:
//
//	        ClusterK0sArgs{...}
//
//	or:
//
//	        nil
type ClusterK0sPtrInput interface {
	pulumi.Input

	ToClusterK0sPtrOutput() ClusterK0sPtrOutput
	ToClusterK0sPtrOutputWithContext(context.Context) ClusterK0sPtrOutput
}

type clusterK0sPtrType ClusterK0sArgs

func ClusterK0sPtr(v *ClusterK0sArgs) ClusterK0sPtrInput {
	return (*clusterK0sPtrType)(v)
}

func (*clusterK0sPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterK0s)(nil)).Elem()
}

func (i *clusterK0sPtrType) ToClusterK0sPtrOutput() ClusterK0sPtrOutput {
	return i.ToClusterK0sPtrOutputWithContext(context.Background())
}

func (i *clusterK0sPtrType) ToClusterK0sPtrOutputWithContext(ctx context.Context) ClusterK0sPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterK0sPtrOutput)
}

type ClusterK0sOutput struct{ *pulumi.OutputState }

func (ClusterK0sOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterK0s)(nil)).Elem()
}

func (o ClusterK0sOutput) ToClusterK0sOutput() ClusterK0sOutput {
	return o
}

func (o ClusterK0sOutput) ToClusterK0sOutputWithContext(ctx context.Context) ClusterK0sOutput {
	return o
}

func (o ClusterK0sOutput) ToClusterK0sPtrOutput() ClusterK0sPtrOutput {
	return o.ToClusterK0sPtrOutputWithContext(context.Background())
}

func (o ClusterK0sOutput) ToClusterK0sPtrOutputWithContext(ctx context.Context) ClusterK0sPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterK0s) *ClusterK0s {
		return &v
	}).(ClusterK0sPtrOutput)
}

func (o ClusterK0sOutput) Config() ClusterK0sConfigPtrOutput {
	return o.ApplyT(func(v ClusterK0s) *ClusterK0sConfig { return v.Config }).(ClusterK0sConfigPtrOutput)
}

func (o ClusterK0sOutput) DynamicConfig() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterK0s) *bool { return v.DynamicConfig }).(pulumi.BoolPtrOutput)
}

func (o ClusterK0sOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterK0s) *string { return v.Version }).(pulumi.StringPtrOutput)
}

func (o ClusterK0sOutput) VersionChannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterK0s) *string { return v.VersionChannel }).(pulumi.StringPtrOutput)
}

type ClusterK0sPtrOutput struct{ *pulumi.OutputState }

func (ClusterK0sPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterK0s)(nil)).Elem()
}

func (o ClusterK0sPtrOutput) ToClusterK0sPtrOutput() ClusterK0sPtrOutput {
	return o
}

func (o ClusterK0sPtrOutput) ToClusterK0sPtrOutputWithContext(ctx context.Context) ClusterK0sPtrOutput {
	return o
}

func (o ClusterK0sPtrOutput) Elem() ClusterK0sOutput {
	return o.ApplyT(func(v *ClusterK0s) ClusterK0s {
		if v != nil {
			return *v
		}
		var ret ClusterK0s
		return ret
	}).(ClusterK0sOutput)
}

func (o ClusterK0sPtrOutput) Config() ClusterK0sConfigPtrOutput {
	return o.ApplyT(func(v *ClusterK0s) *ClusterK0sConfig {
		if v == nil {
			return nil
		}
		return v.Config
	}).(ClusterK0sConfigPtrOutput)
}

func (o ClusterK0sPtrOutput) DynamicConfig() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterK0s) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicConfig
	}).(pulumi.BoolPtrOutput)
}

func (o ClusterK0sPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterK0s) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

func (o ClusterK0sPtrOutput) VersionChannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterK0s) *string {
		if v == nil {
			return nil
		}
		return v.VersionChannel
	}).(pulumi.StringPtrOutput)
}

type ClusterK0sConfig struct {
	Metadata *ClusterMetadata `pulumi:"metadata"`
	Spec     *ClusterK0sSpec  `pulumi:"spec"`
}

// ClusterK0sConfigInput is an input type that accepts ClusterK0sConfigArgs and ClusterK0sConfigOutput values.
// You can construct a concrete instance of `ClusterK0sConfigInput` via:
//
//	ClusterK0sConfigArgs{...}
type ClusterK0sConfigInput interface {
	pulumi.Input

	ToClusterK0sConfigOutput() ClusterK0sConfigOutput
	ToClusterK0sConfigOutputWithContext(context.Context) ClusterK0sConfigOutput
}

type ClusterK0sConfigArgs struct {
	Metadata ClusterMetadataPtrInput `pulumi:"metadata"`
	Spec     ClusterK0sSpecPtrInput  `pulumi:"spec"`
}

func (ClusterK0sConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterK0sConfig)(nil)).Elem()
}

func (i ClusterK0sConfigArgs) ToClusterK0sConfigOutput() ClusterK0sConfigOutput {
	return i.ToClusterK0sConfigOutputWithContext(context.Background())
}

func (i ClusterK0sConfigArgs) ToClusterK0sConfigOutputWithContext(ctx context.Context) ClusterK0sConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterK0sConfigOutput)
}

func (i ClusterK0sConfigArgs) ToClusterK0sConfigPtrOutput() ClusterK0sConfigPtrOutput {
	return i.ToClusterK0sConfigPtrOutputWithContext(context.Background())
}

func (i ClusterK0sConfigArgs) ToClusterK0sConfigPtrOutputWithContext(ctx context.Context) ClusterK0sConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterK0sConfigOutput).ToClusterK0sConfigPtrOutputWithContext(ctx)
}

// ClusterK0sConfigPtrInput is an input type that accepts ClusterK0sConfigArgs, ClusterK0sConfigPtr and ClusterK0sConfigPtrOutput values.
// You can construct a concrete instance of `ClusterK0sConfigPtrInput` via:
//
//	        ClusterK0sConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterK0sConfigPtrInput interface {
	pulumi.Input

	ToClusterK0sConfigPtrOutput() ClusterK0sConfigPtrOutput
	ToClusterK0sConfigPtrOutputWithContext(context.Context) ClusterK0sConfigPtrOutput
}

type clusterK0sConfigPtrType ClusterK0sConfigArgs

func ClusterK0sConfigPtr(v *ClusterK0sConfigArgs) ClusterK0sConfigPtrInput {
	return (*clusterK0sConfigPtrType)(v)
}

func (*clusterK0sConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterK0sConfig)(nil)).Elem()
}

func (i *clusterK0sConfigPtrType) ToClusterK0sConfigPtrOutput() ClusterK0sConfigPtrOutput {
	return i.ToClusterK0sConfigPtrOutputWithContext(context.Background())
}

func (i *clusterK0sConfigPtrType) ToClusterK0sConfigPtrOutputWithContext(ctx context.Context) ClusterK0sConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterK0sConfigPtrOutput)
}

type ClusterK0sConfigOutput struct{ *pulumi.OutputState }

func (ClusterK0sConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterK0sConfig)(nil)).Elem()
}

func (o ClusterK0sConfigOutput) ToClusterK0sConfigOutput() ClusterK0sConfigOutput {
	return o
}

func (o ClusterK0sConfigOutput) ToClusterK0sConfigOutputWithContext(ctx context.Context) ClusterK0sConfigOutput {
	return o
}

func (o ClusterK0sConfigOutput) ToClusterK0sConfigPtrOutput() ClusterK0sConfigPtrOutput {
	return o.ToClusterK0sConfigPtrOutputWithContext(context.Background())
}

func (o ClusterK0sConfigOutput) ToClusterK0sConfigPtrOutputWithContext(ctx context.Context) ClusterK0sConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterK0sConfig) *ClusterK0sConfig {
		return &v
	}).(ClusterK0sConfigPtrOutput)
}

func (o ClusterK0sConfigOutput) Metadata() ClusterMetadataPtrOutput {
	return o.ApplyT(func(v ClusterK0sConfig) *ClusterMetadata { return v.Metadata }).(ClusterMetadataPtrOutput)
}

func (o ClusterK0sConfigOutput) Spec() ClusterK0sSpecPtrOutput {
	return o.ApplyT(func(v ClusterK0sConfig) *ClusterK0sSpec { return v.Spec }).(ClusterK0sSpecPtrOutput)
}

type ClusterK0sConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterK0sConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterK0sConfig)(nil)).Elem()
}

func (o ClusterK0sConfigPtrOutput) ToClusterK0sConfigPtrOutput() ClusterK0sConfigPtrOutput {
	return o
}

func (o ClusterK0sConfigPtrOutput) ToClusterK0sConfigPtrOutputWithContext(ctx context.Context) ClusterK0sConfigPtrOutput {
	return o
}

func (o ClusterK0sConfigPtrOutput) Elem() ClusterK0sConfigOutput {
	return o.ApplyT(func(v *ClusterK0sConfig) ClusterK0sConfig {
		if v != nil {
			return *v
		}
		var ret ClusterK0sConfig
		return ret
	}).(ClusterK0sConfigOutput)
}

func (o ClusterK0sConfigPtrOutput) Metadata() ClusterMetadataPtrOutput {
	return o.ApplyT(func(v *ClusterK0sConfig) *ClusterMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(ClusterMetadataPtrOutput)
}

func (o ClusterK0sConfigPtrOutput) Spec() ClusterK0sSpecPtrOutput {
	return o.ApplyT(func(v *ClusterK0sConfig) *ClusterK0sSpec {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(ClusterK0sSpecPtrOutput)
}

type ClusterK0sSpec struct {
	Api               *ClusterAPI               `pulumi:"api"`
	ControllerManager *ClusterControllerManager `pulumi:"controllerManager"`
	FeatureGates      []ClusterFeatureGate      `pulumi:"featureGates"`
	Images            *ClusterImages            `pulumi:"images"`
	InstallConfig     *ClusterInstallConfig     `pulumi:"installConfig"`
	Konnectivity      *ClusterKonnectivity      `pulumi:"konnectivity"`
	Network           *ClusterNetwork           `pulumi:"network"`
	PodSecurityPolicy *ClusterPodSecurityPolicy `pulumi:"podSecurityPolicy"`
	Scheduler         *ClusterScheduler         `pulumi:"scheduler"`
	Storage           *ClusterStorage           `pulumi:"storage"`
	Telemetry         *ClusterTelemetry         `pulumi:"telemetry"`
	WorkerProfiles    []ClusterWorkerProfile    `pulumi:"workerProfiles"`
}

// ClusterK0sSpecInput is an input type that accepts ClusterK0sSpecArgs and ClusterK0sSpecOutput values.
// You can construct a concrete instance of `ClusterK0sSpecInput` via:
//
//	ClusterK0sSpecArgs{...}
type ClusterK0sSpecInput interface {
	pulumi.Input

	ToClusterK0sSpecOutput() ClusterK0sSpecOutput
	ToClusterK0sSpecOutputWithContext(context.Context) ClusterK0sSpecOutput
}

type ClusterK0sSpecArgs struct {
	Api               ClusterAPIPtrInput               `pulumi:"api"`
	ControllerManager ClusterControllerManagerPtrInput `pulumi:"controllerManager"`
	FeatureGates      ClusterFeatureGateArrayInput     `pulumi:"featureGates"`
	Images            ClusterImagesPtrInput            `pulumi:"images"`
	InstallConfig     ClusterInstallConfigPtrInput     `pulumi:"installConfig"`
	Konnectivity      ClusterKonnectivityPtrInput      `pulumi:"konnectivity"`
	Network           ClusterNetworkPtrInput           `pulumi:"network"`
	PodSecurityPolicy ClusterPodSecurityPolicyPtrInput `pulumi:"podSecurityPolicy"`
	Scheduler         ClusterSchedulerPtrInput         `pulumi:"scheduler"`
	Storage           ClusterStoragePtrInput           `pulumi:"storage"`
	Telemetry         ClusterTelemetryPtrInput         `pulumi:"telemetry"`
	WorkerProfiles    ClusterWorkerProfileArrayInput   `pulumi:"workerProfiles"`
}

func (ClusterK0sSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterK0sSpec)(nil)).Elem()
}

func (i ClusterK0sSpecArgs) ToClusterK0sSpecOutput() ClusterK0sSpecOutput {
	return i.ToClusterK0sSpecOutputWithContext(context.Background())
}

func (i ClusterK0sSpecArgs) ToClusterK0sSpecOutputWithContext(ctx context.Context) ClusterK0sSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterK0sSpecOutput)
}

func (i ClusterK0sSpecArgs) ToClusterK0sSpecPtrOutput() ClusterK0sSpecPtrOutput {
	return i.ToClusterK0sSpecPtrOutputWithContext(context.Background())
}

func (i ClusterK0sSpecArgs) ToClusterK0sSpecPtrOutputWithContext(ctx context.Context) ClusterK0sSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterK0sSpecOutput).ToClusterK0sSpecPtrOutputWithContext(ctx)
}

// ClusterK0sSpecPtrInput is an input type that accepts ClusterK0sSpecArgs, ClusterK0sSpecPtr and ClusterK0sSpecPtrOutput values.
// You can construct a concrete instance of `ClusterK0sSpecPtrInput` via:
//
//	        ClusterK0sSpecArgs{...}
//
//	or:
//
//	        nil
type ClusterK0sSpecPtrInput interface {
	pulumi.Input

	ToClusterK0sSpecPtrOutput() ClusterK0sSpecPtrOutput
	ToClusterK0sSpecPtrOutputWithContext(context.Context) ClusterK0sSpecPtrOutput
}

type clusterK0sSpecPtrType ClusterK0sSpecArgs

func ClusterK0sSpecPtr(v *ClusterK0sSpecArgs) ClusterK0sSpecPtrInput {
	return (*clusterK0sSpecPtrType)(v)
}

func (*clusterK0sSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterK0sSpec)(nil)).Elem()
}

func (i *clusterK0sSpecPtrType) ToClusterK0sSpecPtrOutput() ClusterK0sSpecPtrOutput {
	return i.ToClusterK0sSpecPtrOutputWithContext(context.Background())
}

func (i *clusterK0sSpecPtrType) ToClusterK0sSpecPtrOutputWithContext(ctx context.Context) ClusterK0sSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterK0sSpecPtrOutput)
}

type ClusterK0sSpecOutput struct{ *pulumi.OutputState }

func (ClusterK0sSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterK0sSpec)(nil)).Elem()
}

func (o ClusterK0sSpecOutput) ToClusterK0sSpecOutput() ClusterK0sSpecOutput {
	return o
}

func (o ClusterK0sSpecOutput) ToClusterK0sSpecOutputWithContext(ctx context.Context) ClusterK0sSpecOutput {
	return o
}

func (o ClusterK0sSpecOutput) ToClusterK0sSpecPtrOutput() ClusterK0sSpecPtrOutput {
	return o.ToClusterK0sSpecPtrOutputWithContext(context.Background())
}

func (o ClusterK0sSpecOutput) ToClusterK0sSpecPtrOutputWithContext(ctx context.Context) ClusterK0sSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterK0sSpec) *ClusterK0sSpec {
		return &v
	}).(ClusterK0sSpecPtrOutput)
}

func (o ClusterK0sSpecOutput) Api() ClusterAPIPtrOutput {
	return o.ApplyT(func(v ClusterK0sSpec) *ClusterAPI { return v.Api }).(ClusterAPIPtrOutput)
}

func (o ClusterK0sSpecOutput) ControllerManager() ClusterControllerManagerPtrOutput {
	return o.ApplyT(func(v ClusterK0sSpec) *ClusterControllerManager { return v.ControllerManager }).(ClusterControllerManagerPtrOutput)
}

func (o ClusterK0sSpecOutput) FeatureGates() ClusterFeatureGateArrayOutput {
	return o.ApplyT(func(v ClusterK0sSpec) []ClusterFeatureGate { return v.FeatureGates }).(ClusterFeatureGateArrayOutput)
}

func (o ClusterK0sSpecOutput) Images() ClusterImagesPtrOutput {
	return o.ApplyT(func(v ClusterK0sSpec) *ClusterImages { return v.Images }).(ClusterImagesPtrOutput)
}

func (o ClusterK0sSpecOutput) InstallConfig() ClusterInstallConfigPtrOutput {
	return o.ApplyT(func(v ClusterK0sSpec) *ClusterInstallConfig { return v.InstallConfig }).(ClusterInstallConfigPtrOutput)
}

func (o ClusterK0sSpecOutput) Konnectivity() ClusterKonnectivityPtrOutput {
	return o.ApplyT(func(v ClusterK0sSpec) *ClusterKonnectivity { return v.Konnectivity }).(ClusterKonnectivityPtrOutput)
}

func (o ClusterK0sSpecOutput) Network() ClusterNetworkPtrOutput {
	return o.ApplyT(func(v ClusterK0sSpec) *ClusterNetwork { return v.Network }).(ClusterNetworkPtrOutput)
}

func (o ClusterK0sSpecOutput) PodSecurityPolicy() ClusterPodSecurityPolicyPtrOutput {
	return o.ApplyT(func(v ClusterK0sSpec) *ClusterPodSecurityPolicy { return v.PodSecurityPolicy }).(ClusterPodSecurityPolicyPtrOutput)
}

func (o ClusterK0sSpecOutput) Scheduler() ClusterSchedulerPtrOutput {
	return o.ApplyT(func(v ClusterK0sSpec) *ClusterScheduler { return v.Scheduler }).(ClusterSchedulerPtrOutput)
}

func (o ClusterK0sSpecOutput) Storage() ClusterStoragePtrOutput {
	return o.ApplyT(func(v ClusterK0sSpec) *ClusterStorage { return v.Storage }).(ClusterStoragePtrOutput)
}

func (o ClusterK0sSpecOutput) Telemetry() ClusterTelemetryPtrOutput {
	return o.ApplyT(func(v ClusterK0sSpec) *ClusterTelemetry { return v.Telemetry }).(ClusterTelemetryPtrOutput)
}

func (o ClusterK0sSpecOutput) WorkerProfiles() ClusterWorkerProfileArrayOutput {
	return o.ApplyT(func(v ClusterK0sSpec) []ClusterWorkerProfile { return v.WorkerProfiles }).(ClusterWorkerProfileArrayOutput)
}

type ClusterK0sSpecPtrOutput struct{ *pulumi.OutputState }

func (ClusterK0sSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterK0sSpec)(nil)).Elem()
}

func (o ClusterK0sSpecPtrOutput) ToClusterK0sSpecPtrOutput() ClusterK0sSpecPtrOutput {
	return o
}

func (o ClusterK0sSpecPtrOutput) ToClusterK0sSpecPtrOutputWithContext(ctx context.Context) ClusterK0sSpecPtrOutput {
	return o
}

func (o ClusterK0sSpecPtrOutput) Elem() ClusterK0sSpecOutput {
	return o.ApplyT(func(v *ClusterK0sSpec) ClusterK0sSpec {
		if v != nil {
			return *v
		}
		var ret ClusterK0sSpec
		return ret
	}).(ClusterK0sSpecOutput)
}

func (o ClusterK0sSpecPtrOutput) Api() ClusterAPIPtrOutput {
	return o.ApplyT(func(v *ClusterK0sSpec) *ClusterAPI {
		if v == nil {
			return nil
		}
		return v.Api
	}).(ClusterAPIPtrOutput)
}

func (o ClusterK0sSpecPtrOutput) ControllerManager() ClusterControllerManagerPtrOutput {
	return o.ApplyT(func(v *ClusterK0sSpec) *ClusterControllerManager {
		if v == nil {
			return nil
		}
		return v.ControllerManager
	}).(ClusterControllerManagerPtrOutput)
}

func (o ClusterK0sSpecPtrOutput) FeatureGates() ClusterFeatureGateArrayOutput {
	return o.ApplyT(func(v *ClusterK0sSpec) []ClusterFeatureGate {
		if v == nil {
			return nil
		}
		return v.FeatureGates
	}).(ClusterFeatureGateArrayOutput)
}

func (o ClusterK0sSpecPtrOutput) Images() ClusterImagesPtrOutput {
	return o.ApplyT(func(v *ClusterK0sSpec) *ClusterImages {
		if v == nil {
			return nil
		}
		return v.Images
	}).(ClusterImagesPtrOutput)
}

func (o ClusterK0sSpecPtrOutput) InstallConfig() ClusterInstallConfigPtrOutput {
	return o.ApplyT(func(v *ClusterK0sSpec) *ClusterInstallConfig {
		if v == nil {
			return nil
		}
		return v.InstallConfig
	}).(ClusterInstallConfigPtrOutput)
}

func (o ClusterK0sSpecPtrOutput) Konnectivity() ClusterKonnectivityPtrOutput {
	return o.ApplyT(func(v *ClusterK0sSpec) *ClusterKonnectivity {
		if v == nil {
			return nil
		}
		return v.Konnectivity
	}).(ClusterKonnectivityPtrOutput)
}

func (o ClusterK0sSpecPtrOutput) Network() ClusterNetworkPtrOutput {
	return o.ApplyT(func(v *ClusterK0sSpec) *ClusterNetwork {
		if v == nil {
			return nil
		}
		return v.Network
	}).(ClusterNetworkPtrOutput)
}

func (o ClusterK0sSpecPtrOutput) PodSecurityPolicy() ClusterPodSecurityPolicyPtrOutput {
	return o.ApplyT(func(v *ClusterK0sSpec) *ClusterPodSecurityPolicy {
		if v == nil {
			return nil
		}
		return v.PodSecurityPolicy
	}).(ClusterPodSecurityPolicyPtrOutput)
}

func (o ClusterK0sSpecPtrOutput) Scheduler() ClusterSchedulerPtrOutput {
	return o.ApplyT(func(v *ClusterK0sSpec) *ClusterScheduler {
		if v == nil {
			return nil
		}
		return v.Scheduler
	}).(ClusterSchedulerPtrOutput)
}

func (o ClusterK0sSpecPtrOutput) Storage() ClusterStoragePtrOutput {
	return o.ApplyT(func(v *ClusterK0sSpec) *ClusterStorage {
		if v == nil {
			return nil
		}
		return v.Storage
	}).(ClusterStoragePtrOutput)
}

func (o ClusterK0sSpecPtrOutput) Telemetry() ClusterTelemetryPtrOutput {
	return o.ApplyT(func(v *ClusterK0sSpec) *ClusterTelemetry {
		if v == nil {
			return nil
		}
		return v.Telemetry
	}).(ClusterTelemetryPtrOutput)
}

func (o ClusterK0sSpecPtrOutput) WorkerProfiles() ClusterWorkerProfileArrayOutput {
	return o.ApplyT(func(v *ClusterK0sSpec) []ClusterWorkerProfile {
		if v == nil {
			return nil
		}
		return v.WorkerProfiles
	}).(ClusterWorkerProfileArrayOutput)
}

type ClusterKine struct {
	DataSource string `pulumi:"dataSource"`
}

// ClusterKineInput is an input type that accepts ClusterKineArgs and ClusterKineOutput values.
// You can construct a concrete instance of `ClusterKineInput` via:
//
//	ClusterKineArgs{...}
type ClusterKineInput interface {
	pulumi.Input

	ToClusterKineOutput() ClusterKineOutput
	ToClusterKineOutputWithContext(context.Context) ClusterKineOutput
}

type ClusterKineArgs struct {
	DataSource pulumi.StringInput `pulumi:"dataSource"`
}

func (ClusterKineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKine)(nil)).Elem()
}

func (i ClusterKineArgs) ToClusterKineOutput() ClusterKineOutput {
	return i.ToClusterKineOutputWithContext(context.Background())
}

func (i ClusterKineArgs) ToClusterKineOutputWithContext(ctx context.Context) ClusterKineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKineOutput)
}

func (i ClusterKineArgs) ToClusterKinePtrOutput() ClusterKinePtrOutput {
	return i.ToClusterKinePtrOutputWithContext(context.Background())
}

func (i ClusterKineArgs) ToClusterKinePtrOutputWithContext(ctx context.Context) ClusterKinePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKineOutput).ToClusterKinePtrOutputWithContext(ctx)
}

// ClusterKinePtrInput is an input type that accepts ClusterKineArgs, ClusterKinePtr and ClusterKinePtrOutput values.
// You can construct a concrete instance of `ClusterKinePtrInput` via:
//
//	        ClusterKineArgs{...}
//
//	or:
//
//	        nil
type ClusterKinePtrInput interface {
	pulumi.Input

	ToClusterKinePtrOutput() ClusterKinePtrOutput
	ToClusterKinePtrOutputWithContext(context.Context) ClusterKinePtrOutput
}

type clusterKinePtrType ClusterKineArgs

func ClusterKinePtr(v *ClusterKineArgs) ClusterKinePtrInput {
	return (*clusterKinePtrType)(v)
}

func (*clusterKinePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterKine)(nil)).Elem()
}

func (i *clusterKinePtrType) ToClusterKinePtrOutput() ClusterKinePtrOutput {
	return i.ToClusterKinePtrOutputWithContext(context.Background())
}

func (i *clusterKinePtrType) ToClusterKinePtrOutputWithContext(ctx context.Context) ClusterKinePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKinePtrOutput)
}

type ClusterKineOutput struct{ *pulumi.OutputState }

func (ClusterKineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKine)(nil)).Elem()
}

func (o ClusterKineOutput) ToClusterKineOutput() ClusterKineOutput {
	return o
}

func (o ClusterKineOutput) ToClusterKineOutputWithContext(ctx context.Context) ClusterKineOutput {
	return o
}

func (o ClusterKineOutput) ToClusterKinePtrOutput() ClusterKinePtrOutput {
	return o.ToClusterKinePtrOutputWithContext(context.Background())
}

func (o ClusterKineOutput) ToClusterKinePtrOutputWithContext(ctx context.Context) ClusterKinePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterKine) *ClusterKine {
		return &v
	}).(ClusterKinePtrOutput)
}

func (o ClusterKineOutput) DataSource() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterKine) string { return v.DataSource }).(pulumi.StringOutput)
}

type ClusterKinePtrOutput struct{ *pulumi.OutputState }

func (ClusterKinePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterKine)(nil)).Elem()
}

func (o ClusterKinePtrOutput) ToClusterKinePtrOutput() ClusterKinePtrOutput {
	return o
}

func (o ClusterKinePtrOutput) ToClusterKinePtrOutputWithContext(ctx context.Context) ClusterKinePtrOutput {
	return o
}

func (o ClusterKinePtrOutput) Elem() ClusterKineOutput {
	return o.ApplyT(func(v *ClusterKine) ClusterKine {
		if v != nil {
			return *v
		}
		var ret ClusterKine
		return ret
	}).(ClusterKineOutput)
}

func (o ClusterKinePtrOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterKine) *string {
		if v == nil {
			return nil
		}
		return &v.DataSource
	}).(pulumi.StringPtrOutput)
}

type ClusterKonnectivity struct {
	AdminPort *int `pulumi:"adminPort"`
	AgentPort *int `pulumi:"agentPort"`
}

// ClusterKonnectivityInput is an input type that accepts ClusterKonnectivityArgs and ClusterKonnectivityOutput values.
// You can construct a concrete instance of `ClusterKonnectivityInput` via:
//
//	ClusterKonnectivityArgs{...}
type ClusterKonnectivityInput interface {
	pulumi.Input

	ToClusterKonnectivityOutput() ClusterKonnectivityOutput
	ToClusterKonnectivityOutputWithContext(context.Context) ClusterKonnectivityOutput
}

type ClusterKonnectivityArgs struct {
	AdminPort pulumi.IntPtrInput `pulumi:"adminPort"`
	AgentPort pulumi.IntPtrInput `pulumi:"agentPort"`
}

func (ClusterKonnectivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKonnectivity)(nil)).Elem()
}

func (i ClusterKonnectivityArgs) ToClusterKonnectivityOutput() ClusterKonnectivityOutput {
	return i.ToClusterKonnectivityOutputWithContext(context.Background())
}

func (i ClusterKonnectivityArgs) ToClusterKonnectivityOutputWithContext(ctx context.Context) ClusterKonnectivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKonnectivityOutput)
}

func (i ClusterKonnectivityArgs) ToClusterKonnectivityPtrOutput() ClusterKonnectivityPtrOutput {
	return i.ToClusterKonnectivityPtrOutputWithContext(context.Background())
}

func (i ClusterKonnectivityArgs) ToClusterKonnectivityPtrOutputWithContext(ctx context.Context) ClusterKonnectivityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKonnectivityOutput).ToClusterKonnectivityPtrOutputWithContext(ctx)
}

// ClusterKonnectivityPtrInput is an input type that accepts ClusterKonnectivityArgs, ClusterKonnectivityPtr and ClusterKonnectivityPtrOutput values.
// You can construct a concrete instance of `ClusterKonnectivityPtrInput` via:
//
//	        ClusterKonnectivityArgs{...}
//
//	or:
//
//	        nil
type ClusterKonnectivityPtrInput interface {
	pulumi.Input

	ToClusterKonnectivityPtrOutput() ClusterKonnectivityPtrOutput
	ToClusterKonnectivityPtrOutputWithContext(context.Context) ClusterKonnectivityPtrOutput
}

type clusterKonnectivityPtrType ClusterKonnectivityArgs

func ClusterKonnectivityPtr(v *ClusterKonnectivityArgs) ClusterKonnectivityPtrInput {
	return (*clusterKonnectivityPtrType)(v)
}

func (*clusterKonnectivityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterKonnectivity)(nil)).Elem()
}

func (i *clusterKonnectivityPtrType) ToClusterKonnectivityPtrOutput() ClusterKonnectivityPtrOutput {
	return i.ToClusterKonnectivityPtrOutputWithContext(context.Background())
}

func (i *clusterKonnectivityPtrType) ToClusterKonnectivityPtrOutputWithContext(ctx context.Context) ClusterKonnectivityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKonnectivityPtrOutput)
}

type ClusterKonnectivityOutput struct{ *pulumi.OutputState }

func (ClusterKonnectivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKonnectivity)(nil)).Elem()
}

func (o ClusterKonnectivityOutput) ToClusterKonnectivityOutput() ClusterKonnectivityOutput {
	return o
}

func (o ClusterKonnectivityOutput) ToClusterKonnectivityOutputWithContext(ctx context.Context) ClusterKonnectivityOutput {
	return o
}

func (o ClusterKonnectivityOutput) ToClusterKonnectivityPtrOutput() ClusterKonnectivityPtrOutput {
	return o.ToClusterKonnectivityPtrOutputWithContext(context.Background())
}

func (o ClusterKonnectivityOutput) ToClusterKonnectivityPtrOutputWithContext(ctx context.Context) ClusterKonnectivityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterKonnectivity) *ClusterKonnectivity {
		return &v
	}).(ClusterKonnectivityPtrOutput)
}

func (o ClusterKonnectivityOutput) AdminPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterKonnectivity) *int { return v.AdminPort }).(pulumi.IntPtrOutput)
}

func (o ClusterKonnectivityOutput) AgentPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterKonnectivity) *int { return v.AgentPort }).(pulumi.IntPtrOutput)
}

type ClusterKonnectivityPtrOutput struct{ *pulumi.OutputState }

func (ClusterKonnectivityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterKonnectivity)(nil)).Elem()
}

func (o ClusterKonnectivityPtrOutput) ToClusterKonnectivityPtrOutput() ClusterKonnectivityPtrOutput {
	return o
}

func (o ClusterKonnectivityPtrOutput) ToClusterKonnectivityPtrOutputWithContext(ctx context.Context) ClusterKonnectivityPtrOutput {
	return o
}

func (o ClusterKonnectivityPtrOutput) Elem() ClusterKonnectivityOutput {
	return o.ApplyT(func(v *ClusterKonnectivity) ClusterKonnectivity {
		if v != nil {
			return *v
		}
		var ret ClusterKonnectivity
		return ret
	}).(ClusterKonnectivityOutput)
}

func (o ClusterKonnectivityPtrOutput) AdminPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterKonnectivity) *int {
		if v == nil {
			return nil
		}
		return v.AdminPort
	}).(pulumi.IntPtrOutput)
}

func (o ClusterKonnectivityPtrOutput) AgentPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterKonnectivity) *int {
		if v == nil {
			return nil
		}
		return v.AgentPort
	}).(pulumi.IntPtrOutput)
}

type ClusterKubeProxy struct {
	Disabled          *bool                     `pulumi:"disabled"`
	Iptables          *ClusterKubeProxyIPTables `pulumi:"iptables"`
	Ipvs              *ClusterKubeProxyIPVS     `pulumi:"ipvs"`
	Mode              *string                   `pulumi:"mode"`
	NodePortAddresses *string                   `pulumi:"nodePortAddresses"`
}

// ClusterKubeProxyInput is an input type that accepts ClusterKubeProxyArgs and ClusterKubeProxyOutput values.
// You can construct a concrete instance of `ClusterKubeProxyInput` via:
//
//	ClusterKubeProxyArgs{...}
type ClusterKubeProxyInput interface {
	pulumi.Input

	ToClusterKubeProxyOutput() ClusterKubeProxyOutput
	ToClusterKubeProxyOutputWithContext(context.Context) ClusterKubeProxyOutput
}

type ClusterKubeProxyArgs struct {
	Disabled          pulumi.BoolPtrInput              `pulumi:"disabled"`
	Iptables          ClusterKubeProxyIPTablesPtrInput `pulumi:"iptables"`
	Ipvs              ClusterKubeProxyIPVSPtrInput     `pulumi:"ipvs"`
	Mode              pulumi.StringPtrInput            `pulumi:"mode"`
	NodePortAddresses pulumi.StringPtrInput            `pulumi:"nodePortAddresses"`
}

func (ClusterKubeProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKubeProxy)(nil)).Elem()
}

func (i ClusterKubeProxyArgs) ToClusterKubeProxyOutput() ClusterKubeProxyOutput {
	return i.ToClusterKubeProxyOutputWithContext(context.Background())
}

func (i ClusterKubeProxyArgs) ToClusterKubeProxyOutputWithContext(ctx context.Context) ClusterKubeProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKubeProxyOutput)
}

func (i ClusterKubeProxyArgs) ToClusterKubeProxyPtrOutput() ClusterKubeProxyPtrOutput {
	return i.ToClusterKubeProxyPtrOutputWithContext(context.Background())
}

func (i ClusterKubeProxyArgs) ToClusterKubeProxyPtrOutputWithContext(ctx context.Context) ClusterKubeProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKubeProxyOutput).ToClusterKubeProxyPtrOutputWithContext(ctx)
}

// ClusterKubeProxyPtrInput is an input type that accepts ClusterKubeProxyArgs, ClusterKubeProxyPtr and ClusterKubeProxyPtrOutput values.
// You can construct a concrete instance of `ClusterKubeProxyPtrInput` via:
//
//	        ClusterKubeProxyArgs{...}
//
//	or:
//
//	        nil
type ClusterKubeProxyPtrInput interface {
	pulumi.Input

	ToClusterKubeProxyPtrOutput() ClusterKubeProxyPtrOutput
	ToClusterKubeProxyPtrOutputWithContext(context.Context) ClusterKubeProxyPtrOutput
}

type clusterKubeProxyPtrType ClusterKubeProxyArgs

func ClusterKubeProxyPtr(v *ClusterKubeProxyArgs) ClusterKubeProxyPtrInput {
	return (*clusterKubeProxyPtrType)(v)
}

func (*clusterKubeProxyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterKubeProxy)(nil)).Elem()
}

func (i *clusterKubeProxyPtrType) ToClusterKubeProxyPtrOutput() ClusterKubeProxyPtrOutput {
	return i.ToClusterKubeProxyPtrOutputWithContext(context.Background())
}

func (i *clusterKubeProxyPtrType) ToClusterKubeProxyPtrOutputWithContext(ctx context.Context) ClusterKubeProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKubeProxyPtrOutput)
}

type ClusterKubeProxyOutput struct{ *pulumi.OutputState }

func (ClusterKubeProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKubeProxy)(nil)).Elem()
}

func (o ClusterKubeProxyOutput) ToClusterKubeProxyOutput() ClusterKubeProxyOutput {
	return o
}

func (o ClusterKubeProxyOutput) ToClusterKubeProxyOutputWithContext(ctx context.Context) ClusterKubeProxyOutput {
	return o
}

func (o ClusterKubeProxyOutput) ToClusterKubeProxyPtrOutput() ClusterKubeProxyPtrOutput {
	return o.ToClusterKubeProxyPtrOutputWithContext(context.Background())
}

func (o ClusterKubeProxyOutput) ToClusterKubeProxyPtrOutputWithContext(ctx context.Context) ClusterKubeProxyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterKubeProxy) *ClusterKubeProxy {
		return &v
	}).(ClusterKubeProxyPtrOutput)
}

func (o ClusterKubeProxyOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterKubeProxy) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

func (o ClusterKubeProxyOutput) Iptables() ClusterKubeProxyIPTablesPtrOutput {
	return o.ApplyT(func(v ClusterKubeProxy) *ClusterKubeProxyIPTables { return v.Iptables }).(ClusterKubeProxyIPTablesPtrOutput)
}

func (o ClusterKubeProxyOutput) Ipvs() ClusterKubeProxyIPVSPtrOutput {
	return o.ApplyT(func(v ClusterKubeProxy) *ClusterKubeProxyIPVS { return v.Ipvs }).(ClusterKubeProxyIPVSPtrOutput)
}

func (o ClusterKubeProxyOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKubeProxy) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

func (o ClusterKubeProxyOutput) NodePortAddresses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKubeProxy) *string { return v.NodePortAddresses }).(pulumi.StringPtrOutput)
}

type ClusterKubeProxyPtrOutput struct{ *pulumi.OutputState }

func (ClusterKubeProxyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterKubeProxy)(nil)).Elem()
}

func (o ClusterKubeProxyPtrOutput) ToClusterKubeProxyPtrOutput() ClusterKubeProxyPtrOutput {
	return o
}

func (o ClusterKubeProxyPtrOutput) ToClusterKubeProxyPtrOutputWithContext(ctx context.Context) ClusterKubeProxyPtrOutput {
	return o
}

func (o ClusterKubeProxyPtrOutput) Elem() ClusterKubeProxyOutput {
	return o.ApplyT(func(v *ClusterKubeProxy) ClusterKubeProxy {
		if v != nil {
			return *v
		}
		var ret ClusterKubeProxy
		return ret
	}).(ClusterKubeProxyOutput)
}

func (o ClusterKubeProxyPtrOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterKubeProxy) *bool {
		if v == nil {
			return nil
		}
		return v.Disabled
	}).(pulumi.BoolPtrOutput)
}

func (o ClusterKubeProxyPtrOutput) Iptables() ClusterKubeProxyIPTablesPtrOutput {
	return o.ApplyT(func(v *ClusterKubeProxy) *ClusterKubeProxyIPTables {
		if v == nil {
			return nil
		}
		return v.Iptables
	}).(ClusterKubeProxyIPTablesPtrOutput)
}

func (o ClusterKubeProxyPtrOutput) Ipvs() ClusterKubeProxyIPVSPtrOutput {
	return o.ApplyT(func(v *ClusterKubeProxy) *ClusterKubeProxyIPVS {
		if v == nil {
			return nil
		}
		return v.Ipvs
	}).(ClusterKubeProxyIPVSPtrOutput)
}

func (o ClusterKubeProxyPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterKubeProxy) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

func (o ClusterKubeProxyPtrOutput) NodePortAddresses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterKubeProxy) *string {
		if v == nil {
			return nil
		}
		return v.NodePortAddresses
	}).(pulumi.StringPtrOutput)
}

type ClusterKubeProxyIPTables struct {
	MasqueradeAll *bool   `pulumi:"masqueradeAll"`
	MasqueradeBit *int    `pulumi:"masqueradeBit"`
	MinSyncPeriod *string `pulumi:"minSyncPeriod"`
	SyncPeriod    *string `pulumi:"syncPeriod"`
}

// ClusterKubeProxyIPTablesInput is an input type that accepts ClusterKubeProxyIPTablesArgs and ClusterKubeProxyIPTablesOutput values.
// You can construct a concrete instance of `ClusterKubeProxyIPTablesInput` via:
//
//	ClusterKubeProxyIPTablesArgs{...}
type ClusterKubeProxyIPTablesInput interface {
	pulumi.Input

	ToClusterKubeProxyIPTablesOutput() ClusterKubeProxyIPTablesOutput
	ToClusterKubeProxyIPTablesOutputWithContext(context.Context) ClusterKubeProxyIPTablesOutput
}

type ClusterKubeProxyIPTablesArgs struct {
	MasqueradeAll pulumi.BoolPtrInput   `pulumi:"masqueradeAll"`
	MasqueradeBit pulumi.IntPtrInput    `pulumi:"masqueradeBit"`
	MinSyncPeriod pulumi.StringPtrInput `pulumi:"minSyncPeriod"`
	SyncPeriod    pulumi.StringPtrInput `pulumi:"syncPeriod"`
}

func (ClusterKubeProxyIPTablesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKubeProxyIPTables)(nil)).Elem()
}

func (i ClusterKubeProxyIPTablesArgs) ToClusterKubeProxyIPTablesOutput() ClusterKubeProxyIPTablesOutput {
	return i.ToClusterKubeProxyIPTablesOutputWithContext(context.Background())
}

func (i ClusterKubeProxyIPTablesArgs) ToClusterKubeProxyIPTablesOutputWithContext(ctx context.Context) ClusterKubeProxyIPTablesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKubeProxyIPTablesOutput)
}

func (i ClusterKubeProxyIPTablesArgs) ToClusterKubeProxyIPTablesPtrOutput() ClusterKubeProxyIPTablesPtrOutput {
	return i.ToClusterKubeProxyIPTablesPtrOutputWithContext(context.Background())
}

func (i ClusterKubeProxyIPTablesArgs) ToClusterKubeProxyIPTablesPtrOutputWithContext(ctx context.Context) ClusterKubeProxyIPTablesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKubeProxyIPTablesOutput).ToClusterKubeProxyIPTablesPtrOutputWithContext(ctx)
}

// ClusterKubeProxyIPTablesPtrInput is an input type that accepts ClusterKubeProxyIPTablesArgs, ClusterKubeProxyIPTablesPtr and ClusterKubeProxyIPTablesPtrOutput values.
// You can construct a concrete instance of `ClusterKubeProxyIPTablesPtrInput` via:
//
//	        ClusterKubeProxyIPTablesArgs{...}
//
//	or:
//
//	        nil
type ClusterKubeProxyIPTablesPtrInput interface {
	pulumi.Input

	ToClusterKubeProxyIPTablesPtrOutput() ClusterKubeProxyIPTablesPtrOutput
	ToClusterKubeProxyIPTablesPtrOutputWithContext(context.Context) ClusterKubeProxyIPTablesPtrOutput
}

type clusterKubeProxyIPTablesPtrType ClusterKubeProxyIPTablesArgs

func ClusterKubeProxyIPTablesPtr(v *ClusterKubeProxyIPTablesArgs) ClusterKubeProxyIPTablesPtrInput {
	return (*clusterKubeProxyIPTablesPtrType)(v)
}

func (*clusterKubeProxyIPTablesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterKubeProxyIPTables)(nil)).Elem()
}

func (i *clusterKubeProxyIPTablesPtrType) ToClusterKubeProxyIPTablesPtrOutput() ClusterKubeProxyIPTablesPtrOutput {
	return i.ToClusterKubeProxyIPTablesPtrOutputWithContext(context.Background())
}

func (i *clusterKubeProxyIPTablesPtrType) ToClusterKubeProxyIPTablesPtrOutputWithContext(ctx context.Context) ClusterKubeProxyIPTablesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKubeProxyIPTablesPtrOutput)
}

type ClusterKubeProxyIPTablesOutput struct{ *pulumi.OutputState }

func (ClusterKubeProxyIPTablesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKubeProxyIPTables)(nil)).Elem()
}

func (o ClusterKubeProxyIPTablesOutput) ToClusterKubeProxyIPTablesOutput() ClusterKubeProxyIPTablesOutput {
	return o
}

func (o ClusterKubeProxyIPTablesOutput) ToClusterKubeProxyIPTablesOutputWithContext(ctx context.Context) ClusterKubeProxyIPTablesOutput {
	return o
}

func (o ClusterKubeProxyIPTablesOutput) ToClusterKubeProxyIPTablesPtrOutput() ClusterKubeProxyIPTablesPtrOutput {
	return o.ToClusterKubeProxyIPTablesPtrOutputWithContext(context.Background())
}

func (o ClusterKubeProxyIPTablesOutput) ToClusterKubeProxyIPTablesPtrOutputWithContext(ctx context.Context) ClusterKubeProxyIPTablesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterKubeProxyIPTables) *ClusterKubeProxyIPTables {
		return &v
	}).(ClusterKubeProxyIPTablesPtrOutput)
}

func (o ClusterKubeProxyIPTablesOutput) MasqueradeAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterKubeProxyIPTables) *bool { return v.MasqueradeAll }).(pulumi.BoolPtrOutput)
}

func (o ClusterKubeProxyIPTablesOutput) MasqueradeBit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterKubeProxyIPTables) *int { return v.MasqueradeBit }).(pulumi.IntPtrOutput)
}

func (o ClusterKubeProxyIPTablesOutput) MinSyncPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKubeProxyIPTables) *string { return v.MinSyncPeriod }).(pulumi.StringPtrOutput)
}

func (o ClusterKubeProxyIPTablesOutput) SyncPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKubeProxyIPTables) *string { return v.SyncPeriod }).(pulumi.StringPtrOutput)
}

type ClusterKubeProxyIPTablesPtrOutput struct{ *pulumi.OutputState }

func (ClusterKubeProxyIPTablesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterKubeProxyIPTables)(nil)).Elem()
}

func (o ClusterKubeProxyIPTablesPtrOutput) ToClusterKubeProxyIPTablesPtrOutput() ClusterKubeProxyIPTablesPtrOutput {
	return o
}

func (o ClusterKubeProxyIPTablesPtrOutput) ToClusterKubeProxyIPTablesPtrOutputWithContext(ctx context.Context) ClusterKubeProxyIPTablesPtrOutput {
	return o
}

func (o ClusterKubeProxyIPTablesPtrOutput) Elem() ClusterKubeProxyIPTablesOutput {
	return o.ApplyT(func(v *ClusterKubeProxyIPTables) ClusterKubeProxyIPTables {
		if v != nil {
			return *v
		}
		var ret ClusterKubeProxyIPTables
		return ret
	}).(ClusterKubeProxyIPTablesOutput)
}

func (o ClusterKubeProxyIPTablesPtrOutput) MasqueradeAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterKubeProxyIPTables) *bool {
		if v == nil {
			return nil
		}
		return v.MasqueradeAll
	}).(pulumi.BoolPtrOutput)
}

func (o ClusterKubeProxyIPTablesPtrOutput) MasqueradeBit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterKubeProxyIPTables) *int {
		if v == nil {
			return nil
		}
		return v.MasqueradeBit
	}).(pulumi.IntPtrOutput)
}

func (o ClusterKubeProxyIPTablesPtrOutput) MinSyncPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterKubeProxyIPTables) *string {
		if v == nil {
			return nil
		}
		return v.MinSyncPeriod
	}).(pulumi.StringPtrOutput)
}

func (o ClusterKubeProxyIPTablesPtrOutput) SyncPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterKubeProxyIPTables) *string {
		if v == nil {
			return nil
		}
		return v.SyncPeriod
	}).(pulumi.StringPtrOutput)
}

type ClusterKubeProxyIPVS struct {
	ExcludeCIDRs  *string `pulumi:"excludeCIDRs"`
	MinSyncPeriod *string `pulumi:"minSyncPeriod"`
	Scheduler     *string `pulumi:"scheduler"`
	StrictARP     *bool   `pulumi:"strictARP"`
	SyncPeriod    *string `pulumi:"syncPeriod"`
	TcpFinTimeout *string `pulumi:"tcpFinTimeout"`
	TcpTimeout    *string `pulumi:"tcpTimeout"`
	UdpTimeout    *string `pulumi:"udpTimeout"`
}

// ClusterKubeProxyIPVSInput is an input type that accepts ClusterKubeProxyIPVSArgs and ClusterKubeProxyIPVSOutput values.
// You can construct a concrete instance of `ClusterKubeProxyIPVSInput` via:
//
//	ClusterKubeProxyIPVSArgs{...}
type ClusterKubeProxyIPVSInput interface {
	pulumi.Input

	ToClusterKubeProxyIPVSOutput() ClusterKubeProxyIPVSOutput
	ToClusterKubeProxyIPVSOutputWithContext(context.Context) ClusterKubeProxyIPVSOutput
}

type ClusterKubeProxyIPVSArgs struct {
	ExcludeCIDRs  pulumi.StringPtrInput `pulumi:"excludeCIDRs"`
	MinSyncPeriod pulumi.StringPtrInput `pulumi:"minSyncPeriod"`
	Scheduler     pulumi.StringPtrInput `pulumi:"scheduler"`
	StrictARP     pulumi.BoolPtrInput   `pulumi:"strictARP"`
	SyncPeriod    pulumi.StringPtrInput `pulumi:"syncPeriod"`
	TcpFinTimeout pulumi.StringPtrInput `pulumi:"tcpFinTimeout"`
	TcpTimeout    pulumi.StringPtrInput `pulumi:"tcpTimeout"`
	UdpTimeout    pulumi.StringPtrInput `pulumi:"udpTimeout"`
}

func (ClusterKubeProxyIPVSArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKubeProxyIPVS)(nil)).Elem()
}

func (i ClusterKubeProxyIPVSArgs) ToClusterKubeProxyIPVSOutput() ClusterKubeProxyIPVSOutput {
	return i.ToClusterKubeProxyIPVSOutputWithContext(context.Background())
}

func (i ClusterKubeProxyIPVSArgs) ToClusterKubeProxyIPVSOutputWithContext(ctx context.Context) ClusterKubeProxyIPVSOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKubeProxyIPVSOutput)
}

func (i ClusterKubeProxyIPVSArgs) ToClusterKubeProxyIPVSPtrOutput() ClusterKubeProxyIPVSPtrOutput {
	return i.ToClusterKubeProxyIPVSPtrOutputWithContext(context.Background())
}

func (i ClusterKubeProxyIPVSArgs) ToClusterKubeProxyIPVSPtrOutputWithContext(ctx context.Context) ClusterKubeProxyIPVSPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKubeProxyIPVSOutput).ToClusterKubeProxyIPVSPtrOutputWithContext(ctx)
}

// ClusterKubeProxyIPVSPtrInput is an input type that accepts ClusterKubeProxyIPVSArgs, ClusterKubeProxyIPVSPtr and ClusterKubeProxyIPVSPtrOutput values.
// You can construct a concrete instance of `ClusterKubeProxyIPVSPtrInput` via:
//
//	        ClusterKubeProxyIPVSArgs{...}
//
//	or:
//
//	        nil
type ClusterKubeProxyIPVSPtrInput interface {
	pulumi.Input

	ToClusterKubeProxyIPVSPtrOutput() ClusterKubeProxyIPVSPtrOutput
	ToClusterKubeProxyIPVSPtrOutputWithContext(context.Context) ClusterKubeProxyIPVSPtrOutput
}

type clusterKubeProxyIPVSPtrType ClusterKubeProxyIPVSArgs

func ClusterKubeProxyIPVSPtr(v *ClusterKubeProxyIPVSArgs) ClusterKubeProxyIPVSPtrInput {
	return (*clusterKubeProxyIPVSPtrType)(v)
}

func (*clusterKubeProxyIPVSPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterKubeProxyIPVS)(nil)).Elem()
}

func (i *clusterKubeProxyIPVSPtrType) ToClusterKubeProxyIPVSPtrOutput() ClusterKubeProxyIPVSPtrOutput {
	return i.ToClusterKubeProxyIPVSPtrOutputWithContext(context.Background())
}

func (i *clusterKubeProxyIPVSPtrType) ToClusterKubeProxyIPVSPtrOutputWithContext(ctx context.Context) ClusterKubeProxyIPVSPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKubeProxyIPVSPtrOutput)
}

type ClusterKubeProxyIPVSOutput struct{ *pulumi.OutputState }

func (ClusterKubeProxyIPVSOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKubeProxyIPVS)(nil)).Elem()
}

func (o ClusterKubeProxyIPVSOutput) ToClusterKubeProxyIPVSOutput() ClusterKubeProxyIPVSOutput {
	return o
}

func (o ClusterKubeProxyIPVSOutput) ToClusterKubeProxyIPVSOutputWithContext(ctx context.Context) ClusterKubeProxyIPVSOutput {
	return o
}

func (o ClusterKubeProxyIPVSOutput) ToClusterKubeProxyIPVSPtrOutput() ClusterKubeProxyIPVSPtrOutput {
	return o.ToClusterKubeProxyIPVSPtrOutputWithContext(context.Background())
}

func (o ClusterKubeProxyIPVSOutput) ToClusterKubeProxyIPVSPtrOutputWithContext(ctx context.Context) ClusterKubeProxyIPVSPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterKubeProxyIPVS) *ClusterKubeProxyIPVS {
		return &v
	}).(ClusterKubeProxyIPVSPtrOutput)
}

func (o ClusterKubeProxyIPVSOutput) ExcludeCIDRs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKubeProxyIPVS) *string { return v.ExcludeCIDRs }).(pulumi.StringPtrOutput)
}

func (o ClusterKubeProxyIPVSOutput) MinSyncPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKubeProxyIPVS) *string { return v.MinSyncPeriod }).(pulumi.StringPtrOutput)
}

func (o ClusterKubeProxyIPVSOutput) Scheduler() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKubeProxyIPVS) *string { return v.Scheduler }).(pulumi.StringPtrOutput)
}

func (o ClusterKubeProxyIPVSOutput) StrictARP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterKubeProxyIPVS) *bool { return v.StrictARP }).(pulumi.BoolPtrOutput)
}

func (o ClusterKubeProxyIPVSOutput) SyncPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKubeProxyIPVS) *string { return v.SyncPeriod }).(pulumi.StringPtrOutput)
}

func (o ClusterKubeProxyIPVSOutput) TcpFinTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKubeProxyIPVS) *string { return v.TcpFinTimeout }).(pulumi.StringPtrOutput)
}

func (o ClusterKubeProxyIPVSOutput) TcpTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKubeProxyIPVS) *string { return v.TcpTimeout }).(pulumi.StringPtrOutput)
}

func (o ClusterKubeProxyIPVSOutput) UdpTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKubeProxyIPVS) *string { return v.UdpTimeout }).(pulumi.StringPtrOutput)
}

type ClusterKubeProxyIPVSPtrOutput struct{ *pulumi.OutputState }

func (ClusterKubeProxyIPVSPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterKubeProxyIPVS)(nil)).Elem()
}

func (o ClusterKubeProxyIPVSPtrOutput) ToClusterKubeProxyIPVSPtrOutput() ClusterKubeProxyIPVSPtrOutput {
	return o
}

func (o ClusterKubeProxyIPVSPtrOutput) ToClusterKubeProxyIPVSPtrOutputWithContext(ctx context.Context) ClusterKubeProxyIPVSPtrOutput {
	return o
}

func (o ClusterKubeProxyIPVSPtrOutput) Elem() ClusterKubeProxyIPVSOutput {
	return o.ApplyT(func(v *ClusterKubeProxyIPVS) ClusterKubeProxyIPVS {
		if v != nil {
			return *v
		}
		var ret ClusterKubeProxyIPVS
		return ret
	}).(ClusterKubeProxyIPVSOutput)
}

func (o ClusterKubeProxyIPVSPtrOutput) ExcludeCIDRs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterKubeProxyIPVS) *string {
		if v == nil {
			return nil
		}
		return v.ExcludeCIDRs
	}).(pulumi.StringPtrOutput)
}

func (o ClusterKubeProxyIPVSPtrOutput) MinSyncPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterKubeProxyIPVS) *string {
		if v == nil {
			return nil
		}
		return v.MinSyncPeriod
	}).(pulumi.StringPtrOutput)
}

func (o ClusterKubeProxyIPVSPtrOutput) Scheduler() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterKubeProxyIPVS) *string {
		if v == nil {
			return nil
		}
		return v.Scheduler
	}).(pulumi.StringPtrOutput)
}

func (o ClusterKubeProxyIPVSPtrOutput) StrictARP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterKubeProxyIPVS) *bool {
		if v == nil {
			return nil
		}
		return v.StrictARP
	}).(pulumi.BoolPtrOutput)
}

func (o ClusterKubeProxyIPVSPtrOutput) SyncPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterKubeProxyIPVS) *string {
		if v == nil {
			return nil
		}
		return v.SyncPeriod
	}).(pulumi.StringPtrOutput)
}

func (o ClusterKubeProxyIPVSPtrOutput) TcpFinTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterKubeProxyIPVS) *string {
		if v == nil {
			return nil
		}
		return v.TcpFinTimeout
	}).(pulumi.StringPtrOutput)
}

func (o ClusterKubeProxyIPVSPtrOutput) TcpTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterKubeProxyIPVS) *string {
		if v == nil {
			return nil
		}
		return v.TcpTimeout
	}).(pulumi.StringPtrOutput)
}

func (o ClusterKubeProxyIPVSPtrOutput) UdpTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterKubeProxyIPVS) *string {
		if v == nil {
			return nil
		}
		return v.UdpTimeout
	}).(pulumi.StringPtrOutput)
}

type ClusterKubeRouter struct {
	AutoMTU     *bool             `pulumi:"autoMTU"`
	ExtraArgs   map[string]string `pulumi:"extraArgs"`
	Hairpin     *string           `pulumi:"hairpin"`
	IpMasq      *bool             `pulumi:"ipMasq"`
	MetricsPort *int              `pulumi:"metricsPort"`
	Mtu         *int              `pulumi:"mtu"`
}

// ClusterKubeRouterInput is an input type that accepts ClusterKubeRouterArgs and ClusterKubeRouterOutput values.
// You can construct a concrete instance of `ClusterKubeRouterInput` via:
//
//	ClusterKubeRouterArgs{...}
type ClusterKubeRouterInput interface {
	pulumi.Input

	ToClusterKubeRouterOutput() ClusterKubeRouterOutput
	ToClusterKubeRouterOutputWithContext(context.Context) ClusterKubeRouterOutput
}

type ClusterKubeRouterArgs struct {
	AutoMTU     pulumi.BoolPtrInput   `pulumi:"autoMTU"`
	ExtraArgs   pulumi.StringMapInput `pulumi:"extraArgs"`
	Hairpin     pulumi.StringPtrInput `pulumi:"hairpin"`
	IpMasq      pulumi.BoolPtrInput   `pulumi:"ipMasq"`
	MetricsPort pulumi.IntPtrInput    `pulumi:"metricsPort"`
	Mtu         pulumi.IntPtrInput    `pulumi:"mtu"`
}

func (ClusterKubeRouterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKubeRouter)(nil)).Elem()
}

func (i ClusterKubeRouterArgs) ToClusterKubeRouterOutput() ClusterKubeRouterOutput {
	return i.ToClusterKubeRouterOutputWithContext(context.Background())
}

func (i ClusterKubeRouterArgs) ToClusterKubeRouterOutputWithContext(ctx context.Context) ClusterKubeRouterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKubeRouterOutput)
}

func (i ClusterKubeRouterArgs) ToClusterKubeRouterPtrOutput() ClusterKubeRouterPtrOutput {
	return i.ToClusterKubeRouterPtrOutputWithContext(context.Background())
}

func (i ClusterKubeRouterArgs) ToClusterKubeRouterPtrOutputWithContext(ctx context.Context) ClusterKubeRouterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKubeRouterOutput).ToClusterKubeRouterPtrOutputWithContext(ctx)
}

// ClusterKubeRouterPtrInput is an input type that accepts ClusterKubeRouterArgs, ClusterKubeRouterPtr and ClusterKubeRouterPtrOutput values.
// You can construct a concrete instance of `ClusterKubeRouterPtrInput` via:
//
//	        ClusterKubeRouterArgs{...}
//
//	or:
//
//	        nil
type ClusterKubeRouterPtrInput interface {
	pulumi.Input

	ToClusterKubeRouterPtrOutput() ClusterKubeRouterPtrOutput
	ToClusterKubeRouterPtrOutputWithContext(context.Context) ClusterKubeRouterPtrOutput
}

type clusterKubeRouterPtrType ClusterKubeRouterArgs

func ClusterKubeRouterPtr(v *ClusterKubeRouterArgs) ClusterKubeRouterPtrInput {
	return (*clusterKubeRouterPtrType)(v)
}

func (*clusterKubeRouterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterKubeRouter)(nil)).Elem()
}

func (i *clusterKubeRouterPtrType) ToClusterKubeRouterPtrOutput() ClusterKubeRouterPtrOutput {
	return i.ToClusterKubeRouterPtrOutputWithContext(context.Background())
}

func (i *clusterKubeRouterPtrType) ToClusterKubeRouterPtrOutputWithContext(ctx context.Context) ClusterKubeRouterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKubeRouterPtrOutput)
}

type ClusterKubeRouterOutput struct{ *pulumi.OutputState }

func (ClusterKubeRouterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKubeRouter)(nil)).Elem()
}

func (o ClusterKubeRouterOutput) ToClusterKubeRouterOutput() ClusterKubeRouterOutput {
	return o
}

func (o ClusterKubeRouterOutput) ToClusterKubeRouterOutputWithContext(ctx context.Context) ClusterKubeRouterOutput {
	return o
}

func (o ClusterKubeRouterOutput) ToClusterKubeRouterPtrOutput() ClusterKubeRouterPtrOutput {
	return o.ToClusterKubeRouterPtrOutputWithContext(context.Background())
}

func (o ClusterKubeRouterOutput) ToClusterKubeRouterPtrOutputWithContext(ctx context.Context) ClusterKubeRouterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterKubeRouter) *ClusterKubeRouter {
		return &v
	}).(ClusterKubeRouterPtrOutput)
}

func (o ClusterKubeRouterOutput) AutoMTU() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterKubeRouter) *bool { return v.AutoMTU }).(pulumi.BoolPtrOutput)
}

func (o ClusterKubeRouterOutput) ExtraArgs() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterKubeRouter) map[string]string { return v.ExtraArgs }).(pulumi.StringMapOutput)
}

func (o ClusterKubeRouterOutput) Hairpin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKubeRouter) *string { return v.Hairpin }).(pulumi.StringPtrOutput)
}

func (o ClusterKubeRouterOutput) IpMasq() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterKubeRouter) *bool { return v.IpMasq }).(pulumi.BoolPtrOutput)
}

func (o ClusterKubeRouterOutput) MetricsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterKubeRouter) *int { return v.MetricsPort }).(pulumi.IntPtrOutput)
}

func (o ClusterKubeRouterOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterKubeRouter) *int { return v.Mtu }).(pulumi.IntPtrOutput)
}

type ClusterKubeRouterPtrOutput struct{ *pulumi.OutputState }

func (ClusterKubeRouterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterKubeRouter)(nil)).Elem()
}

func (o ClusterKubeRouterPtrOutput) ToClusterKubeRouterPtrOutput() ClusterKubeRouterPtrOutput {
	return o
}

func (o ClusterKubeRouterPtrOutput) ToClusterKubeRouterPtrOutputWithContext(ctx context.Context) ClusterKubeRouterPtrOutput {
	return o
}

func (o ClusterKubeRouterPtrOutput) Elem() ClusterKubeRouterOutput {
	return o.ApplyT(func(v *ClusterKubeRouter) ClusterKubeRouter {
		if v != nil {
			return *v
		}
		var ret ClusterKubeRouter
		return ret
	}).(ClusterKubeRouterOutput)
}

func (o ClusterKubeRouterPtrOutput) AutoMTU() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterKubeRouter) *bool {
		if v == nil {
			return nil
		}
		return v.AutoMTU
	}).(pulumi.BoolPtrOutput)
}

func (o ClusterKubeRouterPtrOutput) ExtraArgs() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterKubeRouter) map[string]string {
		if v == nil {
			return nil
		}
		return v.ExtraArgs
	}).(pulumi.StringMapOutput)
}

func (o ClusterKubeRouterPtrOutput) Hairpin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterKubeRouter) *string {
		if v == nil {
			return nil
		}
		return v.Hairpin
	}).(pulumi.StringPtrOutput)
}

func (o ClusterKubeRouterPtrOutput) IpMasq() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterKubeRouter) *bool {
		if v == nil {
			return nil
		}
		return v.IpMasq
	}).(pulumi.BoolPtrOutput)
}

func (o ClusterKubeRouterPtrOutput) MetricsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterKubeRouter) *int {
		if v == nil {
			return nil
		}
		return v.MetricsPort
	}).(pulumi.IntPtrOutput)
}

func (o ClusterKubeRouterPtrOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterKubeRouter) *int {
		if v == nil {
			return nil
		}
		return v.Mtu
	}).(pulumi.IntPtrOutput)
}

type ClusterKubeRouterImage struct {
	Cni          *ClusterImage `pulumi:"cni"`
	CniInstaller *ClusterImage `pulumi:"cniInstaller"`
}

// ClusterKubeRouterImageInput is an input type that accepts ClusterKubeRouterImageArgs and ClusterKubeRouterImageOutput values.
// You can construct a concrete instance of `ClusterKubeRouterImageInput` via:
//
//	ClusterKubeRouterImageArgs{...}
type ClusterKubeRouterImageInput interface {
	pulumi.Input

	ToClusterKubeRouterImageOutput() ClusterKubeRouterImageOutput
	ToClusterKubeRouterImageOutputWithContext(context.Context) ClusterKubeRouterImageOutput
}

type ClusterKubeRouterImageArgs struct {
	Cni          ClusterImagePtrInput `pulumi:"cni"`
	CniInstaller ClusterImagePtrInput `pulumi:"cniInstaller"`
}

func (ClusterKubeRouterImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKubeRouterImage)(nil)).Elem()
}

func (i ClusterKubeRouterImageArgs) ToClusterKubeRouterImageOutput() ClusterKubeRouterImageOutput {
	return i.ToClusterKubeRouterImageOutputWithContext(context.Background())
}

func (i ClusterKubeRouterImageArgs) ToClusterKubeRouterImageOutputWithContext(ctx context.Context) ClusterKubeRouterImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKubeRouterImageOutput)
}

func (i ClusterKubeRouterImageArgs) ToClusterKubeRouterImagePtrOutput() ClusterKubeRouterImagePtrOutput {
	return i.ToClusterKubeRouterImagePtrOutputWithContext(context.Background())
}

func (i ClusterKubeRouterImageArgs) ToClusterKubeRouterImagePtrOutputWithContext(ctx context.Context) ClusterKubeRouterImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKubeRouterImageOutput).ToClusterKubeRouterImagePtrOutputWithContext(ctx)
}

// ClusterKubeRouterImagePtrInput is an input type that accepts ClusterKubeRouterImageArgs, ClusterKubeRouterImagePtr and ClusterKubeRouterImagePtrOutput values.
// You can construct a concrete instance of `ClusterKubeRouterImagePtrInput` via:
//
//	        ClusterKubeRouterImageArgs{...}
//
//	or:
//
//	        nil
type ClusterKubeRouterImagePtrInput interface {
	pulumi.Input

	ToClusterKubeRouterImagePtrOutput() ClusterKubeRouterImagePtrOutput
	ToClusterKubeRouterImagePtrOutputWithContext(context.Context) ClusterKubeRouterImagePtrOutput
}

type clusterKubeRouterImagePtrType ClusterKubeRouterImageArgs

func ClusterKubeRouterImagePtr(v *ClusterKubeRouterImageArgs) ClusterKubeRouterImagePtrInput {
	return (*clusterKubeRouterImagePtrType)(v)
}

func (*clusterKubeRouterImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterKubeRouterImage)(nil)).Elem()
}

func (i *clusterKubeRouterImagePtrType) ToClusterKubeRouterImagePtrOutput() ClusterKubeRouterImagePtrOutput {
	return i.ToClusterKubeRouterImagePtrOutputWithContext(context.Background())
}

func (i *clusterKubeRouterImagePtrType) ToClusterKubeRouterImagePtrOutputWithContext(ctx context.Context) ClusterKubeRouterImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKubeRouterImagePtrOutput)
}

type ClusterKubeRouterImageOutput struct{ *pulumi.OutputState }

func (ClusterKubeRouterImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKubeRouterImage)(nil)).Elem()
}

func (o ClusterKubeRouterImageOutput) ToClusterKubeRouterImageOutput() ClusterKubeRouterImageOutput {
	return o
}

func (o ClusterKubeRouterImageOutput) ToClusterKubeRouterImageOutputWithContext(ctx context.Context) ClusterKubeRouterImageOutput {
	return o
}

func (o ClusterKubeRouterImageOutput) ToClusterKubeRouterImagePtrOutput() ClusterKubeRouterImagePtrOutput {
	return o.ToClusterKubeRouterImagePtrOutputWithContext(context.Background())
}

func (o ClusterKubeRouterImageOutput) ToClusterKubeRouterImagePtrOutputWithContext(ctx context.Context) ClusterKubeRouterImagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterKubeRouterImage) *ClusterKubeRouterImage {
		return &v
	}).(ClusterKubeRouterImagePtrOutput)
}

func (o ClusterKubeRouterImageOutput) Cni() ClusterImagePtrOutput {
	return o.ApplyT(func(v ClusterKubeRouterImage) *ClusterImage { return v.Cni }).(ClusterImagePtrOutput)
}

func (o ClusterKubeRouterImageOutput) CniInstaller() ClusterImagePtrOutput {
	return o.ApplyT(func(v ClusterKubeRouterImage) *ClusterImage { return v.CniInstaller }).(ClusterImagePtrOutput)
}

type ClusterKubeRouterImagePtrOutput struct{ *pulumi.OutputState }

func (ClusterKubeRouterImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterKubeRouterImage)(nil)).Elem()
}

func (o ClusterKubeRouterImagePtrOutput) ToClusterKubeRouterImagePtrOutput() ClusterKubeRouterImagePtrOutput {
	return o
}

func (o ClusterKubeRouterImagePtrOutput) ToClusterKubeRouterImagePtrOutputWithContext(ctx context.Context) ClusterKubeRouterImagePtrOutput {
	return o
}

func (o ClusterKubeRouterImagePtrOutput) Elem() ClusterKubeRouterImageOutput {
	return o.ApplyT(func(v *ClusterKubeRouterImage) ClusterKubeRouterImage {
		if v != nil {
			return *v
		}
		var ret ClusterKubeRouterImage
		return ret
	}).(ClusterKubeRouterImageOutput)
}

func (o ClusterKubeRouterImagePtrOutput) Cni() ClusterImagePtrOutput {
	return o.ApplyT(func(v *ClusterKubeRouterImage) *ClusterImage {
		if v == nil {
			return nil
		}
		return v.Cni
	}).(ClusterImagePtrOutput)
}

func (o ClusterKubeRouterImagePtrOutput) CniInstaller() ClusterImagePtrOutput {
	return o.ApplyT(func(v *ClusterKubeRouterImage) *ClusterImage {
		if v == nil {
			return nil
		}
		return v.CniInstaller
	}).(ClusterImagePtrOutput)
}

type ClusterLocalhost struct {
	Enabled *bool `pulumi:"enabled"`
}

// ClusterLocalhostInput is an input type that accepts ClusterLocalhostArgs and ClusterLocalhostOutput values.
// You can construct a concrete instance of `ClusterLocalhostInput` via:
//
//	ClusterLocalhostArgs{...}
type ClusterLocalhostInput interface {
	pulumi.Input

	ToClusterLocalhostOutput() ClusterLocalhostOutput
	ToClusterLocalhostOutputWithContext(context.Context) ClusterLocalhostOutput
}

type ClusterLocalhostArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ClusterLocalhostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLocalhost)(nil)).Elem()
}

func (i ClusterLocalhostArgs) ToClusterLocalhostOutput() ClusterLocalhostOutput {
	return i.ToClusterLocalhostOutputWithContext(context.Background())
}

func (i ClusterLocalhostArgs) ToClusterLocalhostOutputWithContext(ctx context.Context) ClusterLocalhostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLocalhostOutput)
}

func (i ClusterLocalhostArgs) ToClusterLocalhostPtrOutput() ClusterLocalhostPtrOutput {
	return i.ToClusterLocalhostPtrOutputWithContext(context.Background())
}

func (i ClusterLocalhostArgs) ToClusterLocalhostPtrOutputWithContext(ctx context.Context) ClusterLocalhostPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLocalhostOutput).ToClusterLocalhostPtrOutputWithContext(ctx)
}

// ClusterLocalhostPtrInput is an input type that accepts ClusterLocalhostArgs, ClusterLocalhostPtr and ClusterLocalhostPtrOutput values.
// You can construct a concrete instance of `ClusterLocalhostPtrInput` via:
//
//	        ClusterLocalhostArgs{...}
//
//	or:
//
//	        nil
type ClusterLocalhostPtrInput interface {
	pulumi.Input

	ToClusterLocalhostPtrOutput() ClusterLocalhostPtrOutput
	ToClusterLocalhostPtrOutputWithContext(context.Context) ClusterLocalhostPtrOutput
}

type clusterLocalhostPtrType ClusterLocalhostArgs

func ClusterLocalhostPtr(v *ClusterLocalhostArgs) ClusterLocalhostPtrInput {
	return (*clusterLocalhostPtrType)(v)
}

func (*clusterLocalhostPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLocalhost)(nil)).Elem()
}

func (i *clusterLocalhostPtrType) ToClusterLocalhostPtrOutput() ClusterLocalhostPtrOutput {
	return i.ToClusterLocalhostPtrOutputWithContext(context.Background())
}

func (i *clusterLocalhostPtrType) ToClusterLocalhostPtrOutputWithContext(ctx context.Context) ClusterLocalhostPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLocalhostPtrOutput)
}

type ClusterLocalhostOutput struct{ *pulumi.OutputState }

func (ClusterLocalhostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLocalhost)(nil)).Elem()
}

func (o ClusterLocalhostOutput) ToClusterLocalhostOutput() ClusterLocalhostOutput {
	return o
}

func (o ClusterLocalhostOutput) ToClusterLocalhostOutputWithContext(ctx context.Context) ClusterLocalhostOutput {
	return o
}

func (o ClusterLocalhostOutput) ToClusterLocalhostPtrOutput() ClusterLocalhostPtrOutput {
	return o.ToClusterLocalhostPtrOutputWithContext(context.Background())
}

func (o ClusterLocalhostOutput) ToClusterLocalhostPtrOutputWithContext(ctx context.Context) ClusterLocalhostPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterLocalhost) *ClusterLocalhost {
		return &v
	}).(ClusterLocalhostPtrOutput)
}

func (o ClusterLocalhostOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterLocalhost) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ClusterLocalhostPtrOutput struct{ *pulumi.OutputState }

func (ClusterLocalhostPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLocalhost)(nil)).Elem()
}

func (o ClusterLocalhostPtrOutput) ToClusterLocalhostPtrOutput() ClusterLocalhostPtrOutput {
	return o
}

func (o ClusterLocalhostPtrOutput) ToClusterLocalhostPtrOutputWithContext(ctx context.Context) ClusterLocalhostPtrOutput {
	return o
}

func (o ClusterLocalhostPtrOutput) Elem() ClusterLocalhostOutput {
	return o.ApplyT(func(v *ClusterLocalhost) ClusterLocalhost {
		if v != nil {
			return *v
		}
		var ret ClusterLocalhost
		return ret
	}).(ClusterLocalhostOutput)
}

func (o ClusterLocalhostPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterLocalhost) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterMetadata struct {
	Name string `pulumi:"name"`
}

// ClusterMetadataInput is an input type that accepts ClusterMetadataArgs and ClusterMetadataOutput values.
// You can construct a concrete instance of `ClusterMetadataInput` via:
//
//	ClusterMetadataArgs{...}
type ClusterMetadataInput interface {
	pulumi.Input

	ToClusterMetadataOutput() ClusterMetadataOutput
	ToClusterMetadataOutputWithContext(context.Context) ClusterMetadataOutput
}

type ClusterMetadataArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMetadata)(nil)).Elem()
}

func (i ClusterMetadataArgs) ToClusterMetadataOutput() ClusterMetadataOutput {
	return i.ToClusterMetadataOutputWithContext(context.Background())
}

func (i ClusterMetadataArgs) ToClusterMetadataOutputWithContext(ctx context.Context) ClusterMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMetadataOutput)
}

func (i ClusterMetadataArgs) ToClusterMetadataPtrOutput() ClusterMetadataPtrOutput {
	return i.ToClusterMetadataPtrOutputWithContext(context.Background())
}

func (i ClusterMetadataArgs) ToClusterMetadataPtrOutputWithContext(ctx context.Context) ClusterMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMetadataOutput).ToClusterMetadataPtrOutputWithContext(ctx)
}

// ClusterMetadataPtrInput is an input type that accepts ClusterMetadataArgs, ClusterMetadataPtr and ClusterMetadataPtrOutput values.
// You can construct a concrete instance of `ClusterMetadataPtrInput` via:
//
//	        ClusterMetadataArgs{...}
//
//	or:
//
//	        nil
type ClusterMetadataPtrInput interface {
	pulumi.Input

	ToClusterMetadataPtrOutput() ClusterMetadataPtrOutput
	ToClusterMetadataPtrOutputWithContext(context.Context) ClusterMetadataPtrOutput
}

type clusterMetadataPtrType ClusterMetadataArgs

func ClusterMetadataPtr(v *ClusterMetadataArgs) ClusterMetadataPtrInput {
	return (*clusterMetadataPtrType)(v)
}

func (*clusterMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMetadata)(nil)).Elem()
}

func (i *clusterMetadataPtrType) ToClusterMetadataPtrOutput() ClusterMetadataPtrOutput {
	return i.ToClusterMetadataPtrOutputWithContext(context.Background())
}

func (i *clusterMetadataPtrType) ToClusterMetadataPtrOutputWithContext(ctx context.Context) ClusterMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMetadataPtrOutput)
}

type ClusterMetadataOutput struct{ *pulumi.OutputState }

func (ClusterMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMetadata)(nil)).Elem()
}

func (o ClusterMetadataOutput) ToClusterMetadataOutput() ClusterMetadataOutput {
	return o
}

func (o ClusterMetadataOutput) ToClusterMetadataOutputWithContext(ctx context.Context) ClusterMetadataOutput {
	return o
}

func (o ClusterMetadataOutput) ToClusterMetadataPtrOutput() ClusterMetadataPtrOutput {
	return o.ToClusterMetadataPtrOutputWithContext(context.Background())
}

func (o ClusterMetadataOutput) ToClusterMetadataPtrOutputWithContext(ctx context.Context) ClusterMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterMetadata) *ClusterMetadata {
		return &v
	}).(ClusterMetadataPtrOutput)
}

func (o ClusterMetadataOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMetadata) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterMetadataPtrOutput struct{ *pulumi.OutputState }

func (ClusterMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMetadata)(nil)).Elem()
}

func (o ClusterMetadataPtrOutput) ToClusterMetadataPtrOutput() ClusterMetadataPtrOutput {
	return o
}

func (o ClusterMetadataPtrOutput) ToClusterMetadataPtrOutputWithContext(ctx context.Context) ClusterMetadataPtrOutput {
	return o
}

func (o ClusterMetadataPtrOutput) Elem() ClusterMetadataOutput {
	return o.ApplyT(func(v *ClusterMetadata) ClusterMetadata {
		if v != nil {
			return *v
		}
		var ret ClusterMetadata
		return ret
	}).(ClusterMetadataOutput)
}

func (o ClusterMetadataPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMetadata) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type ClusterNetwork struct {
	Calico                 *ClusterCalico                 `pulumi:"calico"`
	ClusterDomain          *string                        `pulumi:"clusterDomain"`
	DualStack              *ClusterDualStack              `pulumi:"dualStack"`
	KubeProxy              *ClusterKubeProxy              `pulumi:"kubeProxy"`
	Kuberouter             *ClusterKubeRouter             `pulumi:"kuberouter"`
	NodeLocalLoadBalancing *ClusterNodeLocalLoadBalancing `pulumi:"nodeLocalLoadBalancing"`
	PodCIDR                *string                        `pulumi:"podCIDR"`
	Provider               *string                        `pulumi:"provider"`
	ServiceCIDR            *string                        `pulumi:"serviceCIDR"`
}

// ClusterNetworkInput is an input type that accepts ClusterNetworkArgs and ClusterNetworkOutput values.
// You can construct a concrete instance of `ClusterNetworkInput` via:
//
//	ClusterNetworkArgs{...}
type ClusterNetworkInput interface {
	pulumi.Input

	ToClusterNetworkOutput() ClusterNetworkOutput
	ToClusterNetworkOutputWithContext(context.Context) ClusterNetworkOutput
}

type ClusterNetworkArgs struct {
	Calico                 ClusterCalicoPtrInput                 `pulumi:"calico"`
	ClusterDomain          pulumi.StringPtrInput                 `pulumi:"clusterDomain"`
	DualStack              ClusterDualStackPtrInput              `pulumi:"dualStack"`
	KubeProxy              ClusterKubeProxyPtrInput              `pulumi:"kubeProxy"`
	Kuberouter             ClusterKubeRouterPtrInput             `pulumi:"kuberouter"`
	NodeLocalLoadBalancing ClusterNodeLocalLoadBalancingPtrInput `pulumi:"nodeLocalLoadBalancing"`
	PodCIDR                pulumi.StringPtrInput                 `pulumi:"podCIDR"`
	Provider               pulumi.StringPtrInput                 `pulumi:"provider"`
	ServiceCIDR            pulumi.StringPtrInput                 `pulumi:"serviceCIDR"`
}

func (ClusterNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetwork)(nil)).Elem()
}

func (i ClusterNetworkArgs) ToClusterNetworkOutput() ClusterNetworkOutput {
	return i.ToClusterNetworkOutputWithContext(context.Background())
}

func (i ClusterNetworkArgs) ToClusterNetworkOutputWithContext(ctx context.Context) ClusterNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkOutput)
}

func (i ClusterNetworkArgs) ToClusterNetworkPtrOutput() ClusterNetworkPtrOutput {
	return i.ToClusterNetworkPtrOutputWithContext(context.Background())
}

func (i ClusterNetworkArgs) ToClusterNetworkPtrOutputWithContext(ctx context.Context) ClusterNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkOutput).ToClusterNetworkPtrOutputWithContext(ctx)
}

// ClusterNetworkPtrInput is an input type that accepts ClusterNetworkArgs, ClusterNetworkPtr and ClusterNetworkPtrOutput values.
// You can construct a concrete instance of `ClusterNetworkPtrInput` via:
//
//	        ClusterNetworkArgs{...}
//
//	or:
//
//	        nil
type ClusterNetworkPtrInput interface {
	pulumi.Input

	ToClusterNetworkPtrOutput() ClusterNetworkPtrOutput
	ToClusterNetworkPtrOutputWithContext(context.Context) ClusterNetworkPtrOutput
}

type clusterNetworkPtrType ClusterNetworkArgs

func ClusterNetworkPtr(v *ClusterNetworkArgs) ClusterNetworkPtrInput {
	return (*clusterNetworkPtrType)(v)
}

func (*clusterNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetwork)(nil)).Elem()
}

func (i *clusterNetworkPtrType) ToClusterNetworkPtrOutput() ClusterNetworkPtrOutput {
	return i.ToClusterNetworkPtrOutputWithContext(context.Background())
}

func (i *clusterNetworkPtrType) ToClusterNetworkPtrOutputWithContext(ctx context.Context) ClusterNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkPtrOutput)
}

type ClusterNetworkOutput struct{ *pulumi.OutputState }

func (ClusterNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetwork)(nil)).Elem()
}

func (o ClusterNetworkOutput) ToClusterNetworkOutput() ClusterNetworkOutput {
	return o
}

func (o ClusterNetworkOutput) ToClusterNetworkOutputWithContext(ctx context.Context) ClusterNetworkOutput {
	return o
}

func (o ClusterNetworkOutput) ToClusterNetworkPtrOutput() ClusterNetworkPtrOutput {
	return o.ToClusterNetworkPtrOutputWithContext(context.Background())
}

func (o ClusterNetworkOutput) ToClusterNetworkPtrOutputWithContext(ctx context.Context) ClusterNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNetwork) *ClusterNetwork {
		return &v
	}).(ClusterNetworkPtrOutput)
}

func (o ClusterNetworkOutput) Calico() ClusterCalicoPtrOutput {
	return o.ApplyT(func(v ClusterNetwork) *ClusterCalico { return v.Calico }).(ClusterCalicoPtrOutput)
}

func (o ClusterNetworkOutput) ClusterDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNetwork) *string { return v.ClusterDomain }).(pulumi.StringPtrOutput)
}

func (o ClusterNetworkOutput) DualStack() ClusterDualStackPtrOutput {
	return o.ApplyT(func(v ClusterNetwork) *ClusterDualStack { return v.DualStack }).(ClusterDualStackPtrOutput)
}

func (o ClusterNetworkOutput) KubeProxy() ClusterKubeProxyPtrOutput {
	return o.ApplyT(func(v ClusterNetwork) *ClusterKubeProxy { return v.KubeProxy }).(ClusterKubeProxyPtrOutput)
}

func (o ClusterNetworkOutput) Kuberouter() ClusterKubeRouterPtrOutput {
	return o.ApplyT(func(v ClusterNetwork) *ClusterKubeRouter { return v.Kuberouter }).(ClusterKubeRouterPtrOutput)
}

func (o ClusterNetworkOutput) NodeLocalLoadBalancing() ClusterNodeLocalLoadBalancingPtrOutput {
	return o.ApplyT(func(v ClusterNetwork) *ClusterNodeLocalLoadBalancing { return v.NodeLocalLoadBalancing }).(ClusterNodeLocalLoadBalancingPtrOutput)
}

func (o ClusterNetworkOutput) PodCIDR() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNetwork) *string { return v.PodCIDR }).(pulumi.StringPtrOutput)
}

func (o ClusterNetworkOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNetwork) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

func (o ClusterNetworkOutput) ServiceCIDR() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNetwork) *string { return v.ServiceCIDR }).(pulumi.StringPtrOutput)
}

type ClusterNetworkPtrOutput struct{ *pulumi.OutputState }

func (ClusterNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetwork)(nil)).Elem()
}

func (o ClusterNetworkPtrOutput) ToClusterNetworkPtrOutput() ClusterNetworkPtrOutput {
	return o
}

func (o ClusterNetworkPtrOutput) ToClusterNetworkPtrOutputWithContext(ctx context.Context) ClusterNetworkPtrOutput {
	return o
}

func (o ClusterNetworkPtrOutput) Elem() ClusterNetworkOutput {
	return o.ApplyT(func(v *ClusterNetwork) ClusterNetwork {
		if v != nil {
			return *v
		}
		var ret ClusterNetwork
		return ret
	}).(ClusterNetworkOutput)
}

func (o ClusterNetworkPtrOutput) Calico() ClusterCalicoPtrOutput {
	return o.ApplyT(func(v *ClusterNetwork) *ClusterCalico {
		if v == nil {
			return nil
		}
		return v.Calico
	}).(ClusterCalicoPtrOutput)
}

func (o ClusterNetworkPtrOutput) ClusterDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetwork) *string {
		if v == nil {
			return nil
		}
		return v.ClusterDomain
	}).(pulumi.StringPtrOutput)
}

func (o ClusterNetworkPtrOutput) DualStack() ClusterDualStackPtrOutput {
	return o.ApplyT(func(v *ClusterNetwork) *ClusterDualStack {
		if v == nil {
			return nil
		}
		return v.DualStack
	}).(ClusterDualStackPtrOutput)
}

func (o ClusterNetworkPtrOutput) KubeProxy() ClusterKubeProxyPtrOutput {
	return o.ApplyT(func(v *ClusterNetwork) *ClusterKubeProxy {
		if v == nil {
			return nil
		}
		return v.KubeProxy
	}).(ClusterKubeProxyPtrOutput)
}

func (o ClusterNetworkPtrOutput) Kuberouter() ClusterKubeRouterPtrOutput {
	return o.ApplyT(func(v *ClusterNetwork) *ClusterKubeRouter {
		if v == nil {
			return nil
		}
		return v.Kuberouter
	}).(ClusterKubeRouterPtrOutput)
}

func (o ClusterNetworkPtrOutput) NodeLocalLoadBalancing() ClusterNodeLocalLoadBalancingPtrOutput {
	return o.ApplyT(func(v *ClusterNetwork) *ClusterNodeLocalLoadBalancing {
		if v == nil {
			return nil
		}
		return v.NodeLocalLoadBalancing
	}).(ClusterNodeLocalLoadBalancingPtrOutput)
}

func (o ClusterNetworkPtrOutput) PodCIDR() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetwork) *string {
		if v == nil {
			return nil
		}
		return v.PodCIDR
	}).(pulumi.StringPtrOutput)
}

func (o ClusterNetworkPtrOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetwork) *string {
		if v == nil {
			return nil
		}
		return v.Provider
	}).(pulumi.StringPtrOutput)
}

func (o ClusterNetworkPtrOutput) ServiceCIDR() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetwork) *string {
		if v == nil {
			return nil
		}
		return v.ServiceCIDR
	}).(pulumi.StringPtrOutput)
}

type ClusterNodeLocalLoadBalancing struct {
	Enabled    *bool              `pulumi:"enabled"`
	EnvoyProxy *ClusterEnvoyProxy `pulumi:"envoyProxy"`
	Type       *string            `pulumi:"type"`
}

// ClusterNodeLocalLoadBalancingInput is an input type that accepts ClusterNodeLocalLoadBalancingArgs and ClusterNodeLocalLoadBalancingOutput values.
// You can construct a concrete instance of `ClusterNodeLocalLoadBalancingInput` via:
//
//	ClusterNodeLocalLoadBalancingArgs{...}
type ClusterNodeLocalLoadBalancingInput interface {
	pulumi.Input

	ToClusterNodeLocalLoadBalancingOutput() ClusterNodeLocalLoadBalancingOutput
	ToClusterNodeLocalLoadBalancingOutputWithContext(context.Context) ClusterNodeLocalLoadBalancingOutput
}

type ClusterNodeLocalLoadBalancingArgs struct {
	Enabled    pulumi.BoolPtrInput       `pulumi:"enabled"`
	EnvoyProxy ClusterEnvoyProxyPtrInput `pulumi:"envoyProxy"`
	Type       pulumi.StringPtrInput     `pulumi:"type"`
}

func (ClusterNodeLocalLoadBalancingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeLocalLoadBalancing)(nil)).Elem()
}

func (i ClusterNodeLocalLoadBalancingArgs) ToClusterNodeLocalLoadBalancingOutput() ClusterNodeLocalLoadBalancingOutput {
	return i.ToClusterNodeLocalLoadBalancingOutputWithContext(context.Background())
}

func (i ClusterNodeLocalLoadBalancingArgs) ToClusterNodeLocalLoadBalancingOutputWithContext(ctx context.Context) ClusterNodeLocalLoadBalancingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeLocalLoadBalancingOutput)
}

func (i ClusterNodeLocalLoadBalancingArgs) ToClusterNodeLocalLoadBalancingPtrOutput() ClusterNodeLocalLoadBalancingPtrOutput {
	return i.ToClusterNodeLocalLoadBalancingPtrOutputWithContext(context.Background())
}

func (i ClusterNodeLocalLoadBalancingArgs) ToClusterNodeLocalLoadBalancingPtrOutputWithContext(ctx context.Context) ClusterNodeLocalLoadBalancingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeLocalLoadBalancingOutput).ToClusterNodeLocalLoadBalancingPtrOutputWithContext(ctx)
}

// ClusterNodeLocalLoadBalancingPtrInput is an input type that accepts ClusterNodeLocalLoadBalancingArgs, ClusterNodeLocalLoadBalancingPtr and ClusterNodeLocalLoadBalancingPtrOutput values.
// You can construct a concrete instance of `ClusterNodeLocalLoadBalancingPtrInput` via:
//
//	        ClusterNodeLocalLoadBalancingArgs{...}
//
//	or:
//
//	        nil
type ClusterNodeLocalLoadBalancingPtrInput interface {
	pulumi.Input

	ToClusterNodeLocalLoadBalancingPtrOutput() ClusterNodeLocalLoadBalancingPtrOutput
	ToClusterNodeLocalLoadBalancingPtrOutputWithContext(context.Context) ClusterNodeLocalLoadBalancingPtrOutput
}

type clusterNodeLocalLoadBalancingPtrType ClusterNodeLocalLoadBalancingArgs

func ClusterNodeLocalLoadBalancingPtr(v *ClusterNodeLocalLoadBalancingArgs) ClusterNodeLocalLoadBalancingPtrInput {
	return (*clusterNodeLocalLoadBalancingPtrType)(v)
}

func (*clusterNodeLocalLoadBalancingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeLocalLoadBalancing)(nil)).Elem()
}

func (i *clusterNodeLocalLoadBalancingPtrType) ToClusterNodeLocalLoadBalancingPtrOutput() ClusterNodeLocalLoadBalancingPtrOutput {
	return i.ToClusterNodeLocalLoadBalancingPtrOutputWithContext(context.Background())
}

func (i *clusterNodeLocalLoadBalancingPtrType) ToClusterNodeLocalLoadBalancingPtrOutputWithContext(ctx context.Context) ClusterNodeLocalLoadBalancingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeLocalLoadBalancingPtrOutput)
}

type ClusterNodeLocalLoadBalancingOutput struct{ *pulumi.OutputState }

func (ClusterNodeLocalLoadBalancingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeLocalLoadBalancing)(nil)).Elem()
}

func (o ClusterNodeLocalLoadBalancingOutput) ToClusterNodeLocalLoadBalancingOutput() ClusterNodeLocalLoadBalancingOutput {
	return o
}

func (o ClusterNodeLocalLoadBalancingOutput) ToClusterNodeLocalLoadBalancingOutputWithContext(ctx context.Context) ClusterNodeLocalLoadBalancingOutput {
	return o
}

func (o ClusterNodeLocalLoadBalancingOutput) ToClusterNodeLocalLoadBalancingPtrOutput() ClusterNodeLocalLoadBalancingPtrOutput {
	return o.ToClusterNodeLocalLoadBalancingPtrOutputWithContext(context.Background())
}

func (o ClusterNodeLocalLoadBalancingOutput) ToClusterNodeLocalLoadBalancingPtrOutputWithContext(ctx context.Context) ClusterNodeLocalLoadBalancingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodeLocalLoadBalancing) *ClusterNodeLocalLoadBalancing {
		return &v
	}).(ClusterNodeLocalLoadBalancingPtrOutput)
}

func (o ClusterNodeLocalLoadBalancingOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodeLocalLoadBalancing) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o ClusterNodeLocalLoadBalancingOutput) EnvoyProxy() ClusterEnvoyProxyPtrOutput {
	return o.ApplyT(func(v ClusterNodeLocalLoadBalancing) *ClusterEnvoyProxy { return v.EnvoyProxy }).(ClusterEnvoyProxyPtrOutput)
}

func (o ClusterNodeLocalLoadBalancingOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeLocalLoadBalancing) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ClusterNodeLocalLoadBalancingPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeLocalLoadBalancingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeLocalLoadBalancing)(nil)).Elem()
}

func (o ClusterNodeLocalLoadBalancingPtrOutput) ToClusterNodeLocalLoadBalancingPtrOutput() ClusterNodeLocalLoadBalancingPtrOutput {
	return o
}

func (o ClusterNodeLocalLoadBalancingPtrOutput) ToClusterNodeLocalLoadBalancingPtrOutputWithContext(ctx context.Context) ClusterNodeLocalLoadBalancingPtrOutput {
	return o
}

func (o ClusterNodeLocalLoadBalancingPtrOutput) Elem() ClusterNodeLocalLoadBalancingOutput {
	return o.ApplyT(func(v *ClusterNodeLocalLoadBalancing) ClusterNodeLocalLoadBalancing {
		if v != nil {
			return *v
		}
		var ret ClusterNodeLocalLoadBalancing
		return ret
	}).(ClusterNodeLocalLoadBalancingOutput)
}

func (o ClusterNodeLocalLoadBalancingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodeLocalLoadBalancing) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o ClusterNodeLocalLoadBalancingPtrOutput) EnvoyProxy() ClusterEnvoyProxyPtrOutput {
	return o.ApplyT(func(v *ClusterNodeLocalLoadBalancing) *ClusterEnvoyProxy {
		if v == nil {
			return nil
		}
		return v.EnvoyProxy
	}).(ClusterEnvoyProxyPtrOutput)
}

func (o ClusterNodeLocalLoadBalancingPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNodeLocalLoadBalancing) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type ClusterPodSecurityPolicy struct {
	DefaultPolicy *string `pulumi:"defaultPolicy"`
}

// ClusterPodSecurityPolicyInput is an input type that accepts ClusterPodSecurityPolicyArgs and ClusterPodSecurityPolicyOutput values.
// You can construct a concrete instance of `ClusterPodSecurityPolicyInput` via:
//
//	ClusterPodSecurityPolicyArgs{...}
type ClusterPodSecurityPolicyInput interface {
	pulumi.Input

	ToClusterPodSecurityPolicyOutput() ClusterPodSecurityPolicyOutput
	ToClusterPodSecurityPolicyOutputWithContext(context.Context) ClusterPodSecurityPolicyOutput
}

type ClusterPodSecurityPolicyArgs struct {
	DefaultPolicy pulumi.StringPtrInput `pulumi:"defaultPolicy"`
}

func (ClusterPodSecurityPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPodSecurityPolicy)(nil)).Elem()
}

func (i ClusterPodSecurityPolicyArgs) ToClusterPodSecurityPolicyOutput() ClusterPodSecurityPolicyOutput {
	return i.ToClusterPodSecurityPolicyOutputWithContext(context.Background())
}

func (i ClusterPodSecurityPolicyArgs) ToClusterPodSecurityPolicyOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPodSecurityPolicyOutput)
}

func (i ClusterPodSecurityPolicyArgs) ToClusterPodSecurityPolicyPtrOutput() ClusterPodSecurityPolicyPtrOutput {
	return i.ToClusterPodSecurityPolicyPtrOutputWithContext(context.Background())
}

func (i ClusterPodSecurityPolicyArgs) ToClusterPodSecurityPolicyPtrOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPodSecurityPolicyOutput).ToClusterPodSecurityPolicyPtrOutputWithContext(ctx)
}

// ClusterPodSecurityPolicyPtrInput is an input type that accepts ClusterPodSecurityPolicyArgs, ClusterPodSecurityPolicyPtr and ClusterPodSecurityPolicyPtrOutput values.
// You can construct a concrete instance of `ClusterPodSecurityPolicyPtrInput` via:
//
//	        ClusterPodSecurityPolicyArgs{...}
//
//	or:
//
//	        nil
type ClusterPodSecurityPolicyPtrInput interface {
	pulumi.Input

	ToClusterPodSecurityPolicyPtrOutput() ClusterPodSecurityPolicyPtrOutput
	ToClusterPodSecurityPolicyPtrOutputWithContext(context.Context) ClusterPodSecurityPolicyPtrOutput
}

type clusterPodSecurityPolicyPtrType ClusterPodSecurityPolicyArgs

func ClusterPodSecurityPolicyPtr(v *ClusterPodSecurityPolicyArgs) ClusterPodSecurityPolicyPtrInput {
	return (*clusterPodSecurityPolicyPtrType)(v)
}

func (*clusterPodSecurityPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPodSecurityPolicy)(nil)).Elem()
}

func (i *clusterPodSecurityPolicyPtrType) ToClusterPodSecurityPolicyPtrOutput() ClusterPodSecurityPolicyPtrOutput {
	return i.ToClusterPodSecurityPolicyPtrOutputWithContext(context.Background())
}

func (i *clusterPodSecurityPolicyPtrType) ToClusterPodSecurityPolicyPtrOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPodSecurityPolicyPtrOutput)
}

type ClusterPodSecurityPolicyOutput struct{ *pulumi.OutputState }

func (ClusterPodSecurityPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPodSecurityPolicy)(nil)).Elem()
}

func (o ClusterPodSecurityPolicyOutput) ToClusterPodSecurityPolicyOutput() ClusterPodSecurityPolicyOutput {
	return o
}

func (o ClusterPodSecurityPolicyOutput) ToClusterPodSecurityPolicyOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyOutput {
	return o
}

func (o ClusterPodSecurityPolicyOutput) ToClusterPodSecurityPolicyPtrOutput() ClusterPodSecurityPolicyPtrOutput {
	return o.ToClusterPodSecurityPolicyPtrOutputWithContext(context.Background())
}

func (o ClusterPodSecurityPolicyOutput) ToClusterPodSecurityPolicyPtrOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterPodSecurityPolicy) *ClusterPodSecurityPolicy {
		return &v
	}).(ClusterPodSecurityPolicyPtrOutput)
}

func (o ClusterPodSecurityPolicyOutput) DefaultPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPodSecurityPolicy) *string { return v.DefaultPolicy }).(pulumi.StringPtrOutput)
}

type ClusterPodSecurityPolicyPtrOutput struct{ *pulumi.OutputState }

func (ClusterPodSecurityPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPodSecurityPolicy)(nil)).Elem()
}

func (o ClusterPodSecurityPolicyPtrOutput) ToClusterPodSecurityPolicyPtrOutput() ClusterPodSecurityPolicyPtrOutput {
	return o
}

func (o ClusterPodSecurityPolicyPtrOutput) ToClusterPodSecurityPolicyPtrOutputWithContext(ctx context.Context) ClusterPodSecurityPolicyPtrOutput {
	return o
}

func (o ClusterPodSecurityPolicyPtrOutput) Elem() ClusterPodSecurityPolicyOutput {
	return o.ApplyT(func(v *ClusterPodSecurityPolicy) ClusterPodSecurityPolicy {
		if v != nil {
			return *v
		}
		var ret ClusterPodSecurityPolicy
		return ret
	}).(ClusterPodSecurityPolicyOutput)
}

func (o ClusterPodSecurityPolicyPtrOutput) DefaultPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPodSecurityPolicy) *string {
		if v == nil {
			return nil
		}
		return v.DefaultPolicy
	}).(pulumi.StringPtrOutput)
}

type ClusterSSH struct {
	Address string      `pulumi:"address"`
	Bastion *ClusterSSH `pulumi:"bastion"`
	HostKey *string     `pulumi:"hostKey"`
	Key     *string     `pulumi:"key"`
	Port    *int        `pulumi:"port"`
	User    *string     `pulumi:"user"`
}

// ClusterSSHInput is an input type that accepts ClusterSSHArgs and ClusterSSHOutput values.
// You can construct a concrete instance of `ClusterSSHInput` via:
//
//	ClusterSSHArgs{...}
type ClusterSSHInput interface {
	pulumi.Input

	ToClusterSSHOutput() ClusterSSHOutput
	ToClusterSSHOutputWithContext(context.Context) ClusterSSHOutput
}

type ClusterSSHArgs struct {
	Address pulumi.StringInput    `pulumi:"address"`
	Bastion ClusterSSHPtrInput    `pulumi:"bastion"`
	HostKey pulumi.StringPtrInput `pulumi:"hostKey"`
	Key     pulumi.StringPtrInput `pulumi:"key"`
	Port    pulumi.IntPtrInput    `pulumi:"port"`
	User    pulumi.StringPtrInput `pulumi:"user"`
}

func (ClusterSSHArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSSH)(nil)).Elem()
}

func (i ClusterSSHArgs) ToClusterSSHOutput() ClusterSSHOutput {
	return i.ToClusterSSHOutputWithContext(context.Background())
}

func (i ClusterSSHArgs) ToClusterSSHOutputWithContext(ctx context.Context) ClusterSSHOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSSHOutput)
}

func (i ClusterSSHArgs) ToClusterSSHPtrOutput() ClusterSSHPtrOutput {
	return i.ToClusterSSHPtrOutputWithContext(context.Background())
}

func (i ClusterSSHArgs) ToClusterSSHPtrOutputWithContext(ctx context.Context) ClusterSSHPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSSHOutput).ToClusterSSHPtrOutputWithContext(ctx)
}

// ClusterSSHPtrInput is an input type that accepts ClusterSSHArgs, ClusterSSHPtr and ClusterSSHPtrOutput values.
// You can construct a concrete instance of `ClusterSSHPtrInput` via:
//
//	        ClusterSSHArgs{...}
//
//	or:
//
//	        nil
type ClusterSSHPtrInput interface {
	pulumi.Input

	ToClusterSSHPtrOutput() ClusterSSHPtrOutput
	ToClusterSSHPtrOutputWithContext(context.Context) ClusterSSHPtrOutput
}

type clusterSSHPtrType ClusterSSHArgs

func ClusterSSHPtr(v *ClusterSSHArgs) ClusterSSHPtrInput {
	return (*clusterSSHPtrType)(v)
}

func (*clusterSSHPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSSH)(nil)).Elem()
}

func (i *clusterSSHPtrType) ToClusterSSHPtrOutput() ClusterSSHPtrOutput {
	return i.ToClusterSSHPtrOutputWithContext(context.Background())
}

func (i *clusterSSHPtrType) ToClusterSSHPtrOutputWithContext(ctx context.Context) ClusterSSHPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSSHPtrOutput)
}

type ClusterSSHOutput struct{ *pulumi.OutputState }

func (ClusterSSHOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSSH)(nil)).Elem()
}

func (o ClusterSSHOutput) ToClusterSSHOutput() ClusterSSHOutput {
	return o
}

func (o ClusterSSHOutput) ToClusterSSHOutputWithContext(ctx context.Context) ClusterSSHOutput {
	return o
}

func (o ClusterSSHOutput) ToClusterSSHPtrOutput() ClusterSSHPtrOutput {
	return o.ToClusterSSHPtrOutputWithContext(context.Background())
}

func (o ClusterSSHOutput) ToClusterSSHPtrOutputWithContext(ctx context.Context) ClusterSSHPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSSH) *ClusterSSH {
		return &v
	}).(ClusterSSHPtrOutput)
}

func (o ClusterSSHOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSSH) string { return v.Address }).(pulumi.StringOutput)
}

func (o ClusterSSHOutput) Bastion() ClusterSSHPtrOutput {
	return o.ApplyT(func(v ClusterSSH) *ClusterSSH { return v.Bastion }).(ClusterSSHPtrOutput)
}

func (o ClusterSSHOutput) HostKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSSH) *string { return v.HostKey }).(pulumi.StringPtrOutput)
}

func (o ClusterSSHOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSSH) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o ClusterSSHOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterSSH) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o ClusterSSHOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSSH) *string { return v.User }).(pulumi.StringPtrOutput)
}

type ClusterSSHPtrOutput struct{ *pulumi.OutputState }

func (ClusterSSHPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSSH)(nil)).Elem()
}

func (o ClusterSSHPtrOutput) ToClusterSSHPtrOutput() ClusterSSHPtrOutput {
	return o
}

func (o ClusterSSHPtrOutput) ToClusterSSHPtrOutputWithContext(ctx context.Context) ClusterSSHPtrOutput {
	return o
}

func (o ClusterSSHPtrOutput) Elem() ClusterSSHOutput {
	return o.ApplyT(func(v *ClusterSSH) ClusterSSH {
		if v != nil {
			return *v
		}
		var ret ClusterSSH
		return ret
	}).(ClusterSSHOutput)
}

func (o ClusterSSHPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSSH) *string {
		if v == nil {
			return nil
		}
		return &v.Address
	}).(pulumi.StringPtrOutput)
}

func (o ClusterSSHPtrOutput) Bastion() ClusterSSHPtrOutput {
	return o.ApplyT(func(v *ClusterSSH) *ClusterSSH {
		if v == nil {
			return nil
		}
		return v.Bastion
	}).(ClusterSSHPtrOutput)
}

func (o ClusterSSHPtrOutput) HostKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSSH) *string {
		if v == nil {
			return nil
		}
		return v.HostKey
	}).(pulumi.StringPtrOutput)
}

func (o ClusterSSHPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSSH) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o ClusterSSHPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterSSH) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

func (o ClusterSSHPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSSH) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

type ClusterScheduler struct {
	ExtraArgs map[string]string `pulumi:"extraArgs"`
}

// ClusterSchedulerInput is an input type that accepts ClusterSchedulerArgs and ClusterSchedulerOutput values.
// You can construct a concrete instance of `ClusterSchedulerInput` via:
//
//	ClusterSchedulerArgs{...}
type ClusterSchedulerInput interface {
	pulumi.Input

	ToClusterSchedulerOutput() ClusterSchedulerOutput
	ToClusterSchedulerOutputWithContext(context.Context) ClusterSchedulerOutput
}

type ClusterSchedulerArgs struct {
	ExtraArgs pulumi.StringMapInput `pulumi:"extraArgs"`
}

func (ClusterSchedulerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterScheduler)(nil)).Elem()
}

func (i ClusterSchedulerArgs) ToClusterSchedulerOutput() ClusterSchedulerOutput {
	return i.ToClusterSchedulerOutputWithContext(context.Background())
}

func (i ClusterSchedulerArgs) ToClusterSchedulerOutputWithContext(ctx context.Context) ClusterSchedulerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSchedulerOutput)
}

func (i ClusterSchedulerArgs) ToClusterSchedulerPtrOutput() ClusterSchedulerPtrOutput {
	return i.ToClusterSchedulerPtrOutputWithContext(context.Background())
}

func (i ClusterSchedulerArgs) ToClusterSchedulerPtrOutputWithContext(ctx context.Context) ClusterSchedulerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSchedulerOutput).ToClusterSchedulerPtrOutputWithContext(ctx)
}

// ClusterSchedulerPtrInput is an input type that accepts ClusterSchedulerArgs, ClusterSchedulerPtr and ClusterSchedulerPtrOutput values.
// You can construct a concrete instance of `ClusterSchedulerPtrInput` via:
//
//	        ClusterSchedulerArgs{...}
//
//	or:
//
//	        nil
type ClusterSchedulerPtrInput interface {
	pulumi.Input

	ToClusterSchedulerPtrOutput() ClusterSchedulerPtrOutput
	ToClusterSchedulerPtrOutputWithContext(context.Context) ClusterSchedulerPtrOutput
}

type clusterSchedulerPtrType ClusterSchedulerArgs

func ClusterSchedulerPtr(v *ClusterSchedulerArgs) ClusterSchedulerPtrInput {
	return (*clusterSchedulerPtrType)(v)
}

func (*clusterSchedulerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterScheduler)(nil)).Elem()
}

func (i *clusterSchedulerPtrType) ToClusterSchedulerPtrOutput() ClusterSchedulerPtrOutput {
	return i.ToClusterSchedulerPtrOutputWithContext(context.Background())
}

func (i *clusterSchedulerPtrType) ToClusterSchedulerPtrOutputWithContext(ctx context.Context) ClusterSchedulerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSchedulerPtrOutput)
}

type ClusterSchedulerOutput struct{ *pulumi.OutputState }

func (ClusterSchedulerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterScheduler)(nil)).Elem()
}

func (o ClusterSchedulerOutput) ToClusterSchedulerOutput() ClusterSchedulerOutput {
	return o
}

func (o ClusterSchedulerOutput) ToClusterSchedulerOutputWithContext(ctx context.Context) ClusterSchedulerOutput {
	return o
}

func (o ClusterSchedulerOutput) ToClusterSchedulerPtrOutput() ClusterSchedulerPtrOutput {
	return o.ToClusterSchedulerPtrOutputWithContext(context.Background())
}

func (o ClusterSchedulerOutput) ToClusterSchedulerPtrOutputWithContext(ctx context.Context) ClusterSchedulerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterScheduler) *ClusterScheduler {
		return &v
	}).(ClusterSchedulerPtrOutput)
}

func (o ClusterSchedulerOutput) ExtraArgs() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterScheduler) map[string]string { return v.ExtraArgs }).(pulumi.StringMapOutput)
}

type ClusterSchedulerPtrOutput struct{ *pulumi.OutputState }

func (ClusterSchedulerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterScheduler)(nil)).Elem()
}

func (o ClusterSchedulerPtrOutput) ToClusterSchedulerPtrOutput() ClusterSchedulerPtrOutput {
	return o
}

func (o ClusterSchedulerPtrOutput) ToClusterSchedulerPtrOutputWithContext(ctx context.Context) ClusterSchedulerPtrOutput {
	return o
}

func (o ClusterSchedulerPtrOutput) Elem() ClusterSchedulerOutput {
	return o.ApplyT(func(v *ClusterScheduler) ClusterScheduler {
		if v != nil {
			return *v
		}
		var ret ClusterScheduler
		return ret
	}).(ClusterSchedulerOutput)
}

func (o ClusterSchedulerPtrOutput) ExtraArgs() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterScheduler) map[string]string {
		if v == nil {
			return nil
		}
		return v.ExtraArgs
	}).(pulumi.StringMapOutput)
}

type ClusterSpec struct {
	Hosts []ClusterHost `pulumi:"hosts"`
	K0s   *ClusterK0s   `pulumi:"k0s"`
}

// ClusterSpecInput is an input type that accepts ClusterSpecArgs and ClusterSpecOutput values.
// You can construct a concrete instance of `ClusterSpecInput` via:
//
//	ClusterSpecArgs{...}
type ClusterSpecInput interface {
	pulumi.Input

	ToClusterSpecOutput() ClusterSpecOutput
	ToClusterSpecOutputWithContext(context.Context) ClusterSpecOutput
}

type ClusterSpecArgs struct {
	Hosts ClusterHostArrayInput `pulumi:"hosts"`
	K0s   ClusterK0sPtrInput    `pulumi:"k0s"`
}

func (ClusterSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpec)(nil)).Elem()
}

func (i ClusterSpecArgs) ToClusterSpecOutput() ClusterSpecOutput {
	return i.ToClusterSpecOutputWithContext(context.Background())
}

func (i ClusterSpecArgs) ToClusterSpecOutputWithContext(ctx context.Context) ClusterSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecOutput)
}

func (i ClusterSpecArgs) ToClusterSpecPtrOutput() ClusterSpecPtrOutput {
	return i.ToClusterSpecPtrOutputWithContext(context.Background())
}

func (i ClusterSpecArgs) ToClusterSpecPtrOutputWithContext(ctx context.Context) ClusterSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecOutput).ToClusterSpecPtrOutputWithContext(ctx)
}

// ClusterSpecPtrInput is an input type that accepts ClusterSpecArgs, ClusterSpecPtr and ClusterSpecPtrOutput values.
// You can construct a concrete instance of `ClusterSpecPtrInput` via:
//
//	        ClusterSpecArgs{...}
//
//	or:
//
//	        nil
type ClusterSpecPtrInput interface {
	pulumi.Input

	ToClusterSpecPtrOutput() ClusterSpecPtrOutput
	ToClusterSpecPtrOutputWithContext(context.Context) ClusterSpecPtrOutput
}

type clusterSpecPtrType ClusterSpecArgs

func ClusterSpecPtr(v *ClusterSpecArgs) ClusterSpecPtrInput {
	return (*clusterSpecPtrType)(v)
}

func (*clusterSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpec)(nil)).Elem()
}

func (i *clusterSpecPtrType) ToClusterSpecPtrOutput() ClusterSpecPtrOutput {
	return i.ToClusterSpecPtrOutputWithContext(context.Background())
}

func (i *clusterSpecPtrType) ToClusterSpecPtrOutputWithContext(ctx context.Context) ClusterSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSpecPtrOutput)
}

type ClusterSpecOutput struct{ *pulumi.OutputState }

func (ClusterSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSpec)(nil)).Elem()
}

func (o ClusterSpecOutput) ToClusterSpecOutput() ClusterSpecOutput {
	return o
}

func (o ClusterSpecOutput) ToClusterSpecOutputWithContext(ctx context.Context) ClusterSpecOutput {
	return o
}

func (o ClusterSpecOutput) ToClusterSpecPtrOutput() ClusterSpecPtrOutput {
	return o.ToClusterSpecPtrOutputWithContext(context.Background())
}

func (o ClusterSpecOutput) ToClusterSpecPtrOutputWithContext(ctx context.Context) ClusterSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSpec) *ClusterSpec {
		return &v
	}).(ClusterSpecPtrOutput)
}

func (o ClusterSpecOutput) Hosts() ClusterHostArrayOutput {
	return o.ApplyT(func(v ClusterSpec) []ClusterHost { return v.Hosts }).(ClusterHostArrayOutput)
}

func (o ClusterSpecOutput) K0s() ClusterK0sPtrOutput {
	return o.ApplyT(func(v ClusterSpec) *ClusterK0s { return v.K0s }).(ClusterK0sPtrOutput)
}

type ClusterSpecPtrOutput struct{ *pulumi.OutputState }

func (ClusterSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSpec)(nil)).Elem()
}

func (o ClusterSpecPtrOutput) ToClusterSpecPtrOutput() ClusterSpecPtrOutput {
	return o
}

func (o ClusterSpecPtrOutput) ToClusterSpecPtrOutputWithContext(ctx context.Context) ClusterSpecPtrOutput {
	return o
}

func (o ClusterSpecPtrOutput) Elem() ClusterSpecOutput {
	return o.ApplyT(func(v *ClusterSpec) ClusterSpec {
		if v != nil {
			return *v
		}
		var ret ClusterSpec
		return ret
	}).(ClusterSpecOutput)
}

func (o ClusterSpecPtrOutput) Hosts() ClusterHostArrayOutput {
	return o.ApplyT(func(v *ClusterSpec) []ClusterHost {
		if v == nil {
			return nil
		}
		return v.Hosts
	}).(ClusterHostArrayOutput)
}

func (o ClusterSpecPtrOutput) K0s() ClusterK0sPtrOutput {
	return o.ApplyT(func(v *ClusterSpec) *ClusterK0s {
		if v == nil {
			return nil
		}
		return v.K0s
	}).(ClusterK0sPtrOutput)
}

type ClusterStorage struct {
	Etcd *ClusterEtcd `pulumi:"etcd"`
	Kine *ClusterKine `pulumi:"kine"`
	Type *string      `pulumi:"type"`
}

// ClusterStorageInput is an input type that accepts ClusterStorageArgs and ClusterStorageOutput values.
// You can construct a concrete instance of `ClusterStorageInput` via:
//
//	ClusterStorageArgs{...}
type ClusterStorageInput interface {
	pulumi.Input

	ToClusterStorageOutput() ClusterStorageOutput
	ToClusterStorageOutputWithContext(context.Context) ClusterStorageOutput
}

type ClusterStorageArgs struct {
	Etcd ClusterEtcdPtrInput   `pulumi:"etcd"`
	Kine ClusterKinePtrInput   `pulumi:"kine"`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ClusterStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterStorage)(nil)).Elem()
}

func (i ClusterStorageArgs) ToClusterStorageOutput() ClusterStorageOutput {
	return i.ToClusterStorageOutputWithContext(context.Background())
}

func (i ClusterStorageArgs) ToClusterStorageOutputWithContext(ctx context.Context) ClusterStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStorageOutput)
}

func (i ClusterStorageArgs) ToClusterStoragePtrOutput() ClusterStoragePtrOutput {
	return i.ToClusterStoragePtrOutputWithContext(context.Background())
}

func (i ClusterStorageArgs) ToClusterStoragePtrOutputWithContext(ctx context.Context) ClusterStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStorageOutput).ToClusterStoragePtrOutputWithContext(ctx)
}

// ClusterStoragePtrInput is an input type that accepts ClusterStorageArgs, ClusterStoragePtr and ClusterStoragePtrOutput values.
// You can construct a concrete instance of `ClusterStoragePtrInput` via:
//
//	        ClusterStorageArgs{...}
//
//	or:
//
//	        nil
type ClusterStoragePtrInput interface {
	pulumi.Input

	ToClusterStoragePtrOutput() ClusterStoragePtrOutput
	ToClusterStoragePtrOutputWithContext(context.Context) ClusterStoragePtrOutput
}

type clusterStoragePtrType ClusterStorageArgs

func ClusterStoragePtr(v *ClusterStorageArgs) ClusterStoragePtrInput {
	return (*clusterStoragePtrType)(v)
}

func (*clusterStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterStorage)(nil)).Elem()
}

func (i *clusterStoragePtrType) ToClusterStoragePtrOutput() ClusterStoragePtrOutput {
	return i.ToClusterStoragePtrOutputWithContext(context.Background())
}

func (i *clusterStoragePtrType) ToClusterStoragePtrOutputWithContext(ctx context.Context) ClusterStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStoragePtrOutput)
}

type ClusterStorageOutput struct{ *pulumi.OutputState }

func (ClusterStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterStorage)(nil)).Elem()
}

func (o ClusterStorageOutput) ToClusterStorageOutput() ClusterStorageOutput {
	return o
}

func (o ClusterStorageOutput) ToClusterStorageOutputWithContext(ctx context.Context) ClusterStorageOutput {
	return o
}

func (o ClusterStorageOutput) ToClusterStoragePtrOutput() ClusterStoragePtrOutput {
	return o.ToClusterStoragePtrOutputWithContext(context.Background())
}

func (o ClusterStorageOutput) ToClusterStoragePtrOutputWithContext(ctx context.Context) ClusterStoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterStorage) *ClusterStorage {
		return &v
	}).(ClusterStoragePtrOutput)
}

func (o ClusterStorageOutput) Etcd() ClusterEtcdPtrOutput {
	return o.ApplyT(func(v ClusterStorage) *ClusterEtcd { return v.Etcd }).(ClusterEtcdPtrOutput)
}

func (o ClusterStorageOutput) Kine() ClusterKinePtrOutput {
	return o.ApplyT(func(v ClusterStorage) *ClusterKine { return v.Kine }).(ClusterKinePtrOutput)
}

func (o ClusterStorageOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterStorage) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ClusterStoragePtrOutput struct{ *pulumi.OutputState }

func (ClusterStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterStorage)(nil)).Elem()
}

func (o ClusterStoragePtrOutput) ToClusterStoragePtrOutput() ClusterStoragePtrOutput {
	return o
}

func (o ClusterStoragePtrOutput) ToClusterStoragePtrOutputWithContext(ctx context.Context) ClusterStoragePtrOutput {
	return o
}

func (o ClusterStoragePtrOutput) Elem() ClusterStorageOutput {
	return o.ApplyT(func(v *ClusterStorage) ClusterStorage {
		if v != nil {
			return *v
		}
		var ret ClusterStorage
		return ret
	}).(ClusterStorageOutput)
}

func (o ClusterStoragePtrOutput) Etcd() ClusterEtcdPtrOutput {
	return o.ApplyT(func(v *ClusterStorage) *ClusterEtcd {
		if v == nil {
			return nil
		}
		return v.Etcd
	}).(ClusterEtcdPtrOutput)
}

func (o ClusterStoragePtrOutput) Kine() ClusterKinePtrOutput {
	return o.ApplyT(func(v *ClusterStorage) *ClusterKine {
		if v == nil {
			return nil
		}
		return v.Kine
	}).(ClusterKinePtrOutput)
}

func (o ClusterStoragePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterStorage) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type ClusterTelemetry struct {
	Enabled *bool `pulumi:"enabled"`
}

// ClusterTelemetryInput is an input type that accepts ClusterTelemetryArgs and ClusterTelemetryOutput values.
// You can construct a concrete instance of `ClusterTelemetryInput` via:
//
//	ClusterTelemetryArgs{...}
type ClusterTelemetryInput interface {
	pulumi.Input

	ToClusterTelemetryOutput() ClusterTelemetryOutput
	ToClusterTelemetryOutputWithContext(context.Context) ClusterTelemetryOutput
}

type ClusterTelemetryArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ClusterTelemetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterTelemetry)(nil)).Elem()
}

func (i ClusterTelemetryArgs) ToClusterTelemetryOutput() ClusterTelemetryOutput {
	return i.ToClusterTelemetryOutputWithContext(context.Background())
}

func (i ClusterTelemetryArgs) ToClusterTelemetryOutputWithContext(ctx context.Context) ClusterTelemetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterTelemetryOutput)
}

func (i ClusterTelemetryArgs) ToClusterTelemetryPtrOutput() ClusterTelemetryPtrOutput {
	return i.ToClusterTelemetryPtrOutputWithContext(context.Background())
}

func (i ClusterTelemetryArgs) ToClusterTelemetryPtrOutputWithContext(ctx context.Context) ClusterTelemetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterTelemetryOutput).ToClusterTelemetryPtrOutputWithContext(ctx)
}

// ClusterTelemetryPtrInput is an input type that accepts ClusterTelemetryArgs, ClusterTelemetryPtr and ClusterTelemetryPtrOutput values.
// You can construct a concrete instance of `ClusterTelemetryPtrInput` via:
//
//	        ClusterTelemetryArgs{...}
//
//	or:
//
//	        nil
type ClusterTelemetryPtrInput interface {
	pulumi.Input

	ToClusterTelemetryPtrOutput() ClusterTelemetryPtrOutput
	ToClusterTelemetryPtrOutputWithContext(context.Context) ClusterTelemetryPtrOutput
}

type clusterTelemetryPtrType ClusterTelemetryArgs

func ClusterTelemetryPtr(v *ClusterTelemetryArgs) ClusterTelemetryPtrInput {
	return (*clusterTelemetryPtrType)(v)
}

func (*clusterTelemetryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterTelemetry)(nil)).Elem()
}

func (i *clusterTelemetryPtrType) ToClusterTelemetryPtrOutput() ClusterTelemetryPtrOutput {
	return i.ToClusterTelemetryPtrOutputWithContext(context.Background())
}

func (i *clusterTelemetryPtrType) ToClusterTelemetryPtrOutputWithContext(ctx context.Context) ClusterTelemetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterTelemetryPtrOutput)
}

type ClusterTelemetryOutput struct{ *pulumi.OutputState }

func (ClusterTelemetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterTelemetry)(nil)).Elem()
}

func (o ClusterTelemetryOutput) ToClusterTelemetryOutput() ClusterTelemetryOutput {
	return o
}

func (o ClusterTelemetryOutput) ToClusterTelemetryOutputWithContext(ctx context.Context) ClusterTelemetryOutput {
	return o
}

func (o ClusterTelemetryOutput) ToClusterTelemetryPtrOutput() ClusterTelemetryPtrOutput {
	return o.ToClusterTelemetryPtrOutputWithContext(context.Background())
}

func (o ClusterTelemetryOutput) ToClusterTelemetryPtrOutputWithContext(ctx context.Context) ClusterTelemetryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterTelemetry) *ClusterTelemetry {
		return &v
	}).(ClusterTelemetryPtrOutput)
}

func (o ClusterTelemetryOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterTelemetry) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ClusterTelemetryPtrOutput struct{ *pulumi.OutputState }

func (ClusterTelemetryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterTelemetry)(nil)).Elem()
}

func (o ClusterTelemetryPtrOutput) ToClusterTelemetryPtrOutput() ClusterTelemetryPtrOutput {
	return o
}

func (o ClusterTelemetryPtrOutput) ToClusterTelemetryPtrOutputWithContext(ctx context.Context) ClusterTelemetryPtrOutput {
	return o
}

func (o ClusterTelemetryPtrOutput) Elem() ClusterTelemetryOutput {
	return o.ApplyT(func(v *ClusterTelemetry) ClusterTelemetry {
		if v != nil {
			return *v
		}
		var ret ClusterTelemetry
		return ret
	}).(ClusterTelemetryOutput)
}

func (o ClusterTelemetryPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterTelemetry) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterWinRM struct {
	Address       string      `pulumi:"address"`
	Bastion       *ClusterSSH `pulumi:"bastion"`
	CaCert        *string     `pulumi:"caCert"`
	Cert          *string     `pulumi:"cert"`
	Insecure      *bool       `pulumi:"insecure"`
	Key           *string     `pulumi:"key"`
	Password      *string     `pulumi:"password"`
	Port          *int        `pulumi:"port"`
	TlsServerName *string     `pulumi:"tlsServerName"`
	UseHTTPS      *bool       `pulumi:"useHTTPS"`
	UseNTLM       *bool       `pulumi:"useNTLM"`
	User          *string     `pulumi:"user"`
}

// ClusterWinRMInput is an input type that accepts ClusterWinRMArgs and ClusterWinRMOutput values.
// You can construct a concrete instance of `ClusterWinRMInput` via:
//
//	ClusterWinRMArgs{...}
type ClusterWinRMInput interface {
	pulumi.Input

	ToClusterWinRMOutput() ClusterWinRMOutput
	ToClusterWinRMOutputWithContext(context.Context) ClusterWinRMOutput
}

type ClusterWinRMArgs struct {
	Address       pulumi.StringInput    `pulumi:"address"`
	Bastion       ClusterSSHPtrInput    `pulumi:"bastion"`
	CaCert        pulumi.StringPtrInput `pulumi:"caCert"`
	Cert          pulumi.StringPtrInput `pulumi:"cert"`
	Insecure      pulumi.BoolPtrInput   `pulumi:"insecure"`
	Key           pulumi.StringPtrInput `pulumi:"key"`
	Password      pulumi.StringPtrInput `pulumi:"password"`
	Port          pulumi.IntPtrInput    `pulumi:"port"`
	TlsServerName pulumi.StringPtrInput `pulumi:"tlsServerName"`
	UseHTTPS      pulumi.BoolPtrInput   `pulumi:"useHTTPS"`
	UseNTLM       pulumi.BoolPtrInput   `pulumi:"useNTLM"`
	User          pulumi.StringPtrInput `pulumi:"user"`
}

func (ClusterWinRMArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterWinRM)(nil)).Elem()
}

func (i ClusterWinRMArgs) ToClusterWinRMOutput() ClusterWinRMOutput {
	return i.ToClusterWinRMOutputWithContext(context.Background())
}

func (i ClusterWinRMArgs) ToClusterWinRMOutputWithContext(ctx context.Context) ClusterWinRMOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterWinRMOutput)
}

func (i ClusterWinRMArgs) ToClusterWinRMPtrOutput() ClusterWinRMPtrOutput {
	return i.ToClusterWinRMPtrOutputWithContext(context.Background())
}

func (i ClusterWinRMArgs) ToClusterWinRMPtrOutputWithContext(ctx context.Context) ClusterWinRMPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterWinRMOutput).ToClusterWinRMPtrOutputWithContext(ctx)
}

// ClusterWinRMPtrInput is an input type that accepts ClusterWinRMArgs, ClusterWinRMPtr and ClusterWinRMPtrOutput values.
// You can construct a concrete instance of `ClusterWinRMPtrInput` via:
//
//	        ClusterWinRMArgs{...}
//
//	or:
//
//	        nil
type ClusterWinRMPtrInput interface {
	pulumi.Input

	ToClusterWinRMPtrOutput() ClusterWinRMPtrOutput
	ToClusterWinRMPtrOutputWithContext(context.Context) ClusterWinRMPtrOutput
}

type clusterWinRMPtrType ClusterWinRMArgs

func ClusterWinRMPtr(v *ClusterWinRMArgs) ClusterWinRMPtrInput {
	return (*clusterWinRMPtrType)(v)
}

func (*clusterWinRMPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterWinRM)(nil)).Elem()
}

func (i *clusterWinRMPtrType) ToClusterWinRMPtrOutput() ClusterWinRMPtrOutput {
	return i.ToClusterWinRMPtrOutputWithContext(context.Background())
}

func (i *clusterWinRMPtrType) ToClusterWinRMPtrOutputWithContext(ctx context.Context) ClusterWinRMPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterWinRMPtrOutput)
}

type ClusterWinRMOutput struct{ *pulumi.OutputState }

func (ClusterWinRMOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterWinRM)(nil)).Elem()
}

func (o ClusterWinRMOutput) ToClusterWinRMOutput() ClusterWinRMOutput {
	return o
}

func (o ClusterWinRMOutput) ToClusterWinRMOutputWithContext(ctx context.Context) ClusterWinRMOutput {
	return o
}

func (o ClusterWinRMOutput) ToClusterWinRMPtrOutput() ClusterWinRMPtrOutput {
	return o.ToClusterWinRMPtrOutputWithContext(context.Background())
}

func (o ClusterWinRMOutput) ToClusterWinRMPtrOutputWithContext(ctx context.Context) ClusterWinRMPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterWinRM) *ClusterWinRM {
		return &v
	}).(ClusterWinRMPtrOutput)
}

func (o ClusterWinRMOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterWinRM) string { return v.Address }).(pulumi.StringOutput)
}

func (o ClusterWinRMOutput) Bastion() ClusterSSHPtrOutput {
	return o.ApplyT(func(v ClusterWinRM) *ClusterSSH { return v.Bastion }).(ClusterSSHPtrOutput)
}

func (o ClusterWinRMOutput) CaCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWinRM) *string { return v.CaCert }).(pulumi.StringPtrOutput)
}

func (o ClusterWinRMOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWinRM) *string { return v.Cert }).(pulumi.StringPtrOutput)
}

func (o ClusterWinRMOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterWinRM) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

func (o ClusterWinRMOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWinRM) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o ClusterWinRMOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWinRM) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o ClusterWinRMOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterWinRM) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o ClusterWinRMOutput) TlsServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWinRM) *string { return v.TlsServerName }).(pulumi.StringPtrOutput)
}

func (o ClusterWinRMOutput) UseHTTPS() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterWinRM) *bool { return v.UseHTTPS }).(pulumi.BoolPtrOutput)
}

func (o ClusterWinRMOutput) UseNTLM() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterWinRM) *bool { return v.UseNTLM }).(pulumi.BoolPtrOutput)
}

func (o ClusterWinRMOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWinRM) *string { return v.User }).(pulumi.StringPtrOutput)
}

type ClusterWinRMPtrOutput struct{ *pulumi.OutputState }

func (ClusterWinRMPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterWinRM)(nil)).Elem()
}

func (o ClusterWinRMPtrOutput) ToClusterWinRMPtrOutput() ClusterWinRMPtrOutput {
	return o
}

func (o ClusterWinRMPtrOutput) ToClusterWinRMPtrOutputWithContext(ctx context.Context) ClusterWinRMPtrOutput {
	return o
}

func (o ClusterWinRMPtrOutput) Elem() ClusterWinRMOutput {
	return o.ApplyT(func(v *ClusterWinRM) ClusterWinRM {
		if v != nil {
			return *v
		}
		var ret ClusterWinRM
		return ret
	}).(ClusterWinRMOutput)
}

func (o ClusterWinRMPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterWinRM) *string {
		if v == nil {
			return nil
		}
		return &v.Address
	}).(pulumi.StringPtrOutput)
}

func (o ClusterWinRMPtrOutput) Bastion() ClusterSSHPtrOutput {
	return o.ApplyT(func(v *ClusterWinRM) *ClusterSSH {
		if v == nil {
			return nil
		}
		return v.Bastion
	}).(ClusterSSHPtrOutput)
}

func (o ClusterWinRMPtrOutput) CaCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterWinRM) *string {
		if v == nil {
			return nil
		}
		return v.CaCert
	}).(pulumi.StringPtrOutput)
}

func (o ClusterWinRMPtrOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterWinRM) *string {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(pulumi.StringPtrOutput)
}

func (o ClusterWinRMPtrOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterWinRM) *bool {
		if v == nil {
			return nil
		}
		return v.Insecure
	}).(pulumi.BoolPtrOutput)
}

func (o ClusterWinRMPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterWinRM) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o ClusterWinRMPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterWinRM) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o ClusterWinRMPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterWinRM) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

func (o ClusterWinRMPtrOutput) TlsServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterWinRM) *string {
		if v == nil {
			return nil
		}
		return v.TlsServerName
	}).(pulumi.StringPtrOutput)
}

func (o ClusterWinRMPtrOutput) UseHTTPS() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterWinRM) *bool {
		if v == nil {
			return nil
		}
		return v.UseHTTPS
	}).(pulumi.BoolPtrOutput)
}

func (o ClusterWinRMPtrOutput) UseNTLM() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterWinRM) *bool {
		if v == nil {
			return nil
		}
		return v.UseNTLM
	}).(pulumi.BoolPtrOutput)
}

func (o ClusterWinRMPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterWinRM) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

type ClusterWorkerProfile struct {
	Name   string                 `pulumi:"name"`
	Values map[string]interface{} `pulumi:"values"`
}

// ClusterWorkerProfileInput is an input type that accepts ClusterWorkerProfileArgs and ClusterWorkerProfileOutput values.
// You can construct a concrete instance of `ClusterWorkerProfileInput` via:
//
//	ClusterWorkerProfileArgs{...}
type ClusterWorkerProfileInput interface {
	pulumi.Input

	ToClusterWorkerProfileOutput() ClusterWorkerProfileOutput
	ToClusterWorkerProfileOutputWithContext(context.Context) ClusterWorkerProfileOutput
}

type ClusterWorkerProfileArgs struct {
	Name   pulumi.StringInput `pulumi:"name"`
	Values pulumi.MapInput    `pulumi:"values"`
}

func (ClusterWorkerProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterWorkerProfile)(nil)).Elem()
}

func (i ClusterWorkerProfileArgs) ToClusterWorkerProfileOutput() ClusterWorkerProfileOutput {
	return i.ToClusterWorkerProfileOutputWithContext(context.Background())
}

func (i ClusterWorkerProfileArgs) ToClusterWorkerProfileOutputWithContext(ctx context.Context) ClusterWorkerProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterWorkerProfileOutput)
}

// ClusterWorkerProfileArrayInput is an input type that accepts ClusterWorkerProfileArray and ClusterWorkerProfileArrayOutput values.
// You can construct a concrete instance of `ClusterWorkerProfileArrayInput` via:
//
//	ClusterWorkerProfileArray{ ClusterWorkerProfileArgs{...} }
type ClusterWorkerProfileArrayInput interface {
	pulumi.Input

	ToClusterWorkerProfileArrayOutput() ClusterWorkerProfileArrayOutput
	ToClusterWorkerProfileArrayOutputWithContext(context.Context) ClusterWorkerProfileArrayOutput
}

type ClusterWorkerProfileArray []ClusterWorkerProfileInput

func (ClusterWorkerProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterWorkerProfile)(nil)).Elem()
}

func (i ClusterWorkerProfileArray) ToClusterWorkerProfileArrayOutput() ClusterWorkerProfileArrayOutput {
	return i.ToClusterWorkerProfileArrayOutputWithContext(context.Background())
}

func (i ClusterWorkerProfileArray) ToClusterWorkerProfileArrayOutputWithContext(ctx context.Context) ClusterWorkerProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterWorkerProfileArrayOutput)
}

type ClusterWorkerProfileOutput struct{ *pulumi.OutputState }

func (ClusterWorkerProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterWorkerProfile)(nil)).Elem()
}

func (o ClusterWorkerProfileOutput) ToClusterWorkerProfileOutput() ClusterWorkerProfileOutput {
	return o
}

func (o ClusterWorkerProfileOutput) ToClusterWorkerProfileOutputWithContext(ctx context.Context) ClusterWorkerProfileOutput {
	return o
}

func (o ClusterWorkerProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterWorkerProfile) string { return v.Name }).(pulumi.StringOutput)
}

func (o ClusterWorkerProfileOutput) Values() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterWorkerProfile) map[string]interface{} { return v.Values }).(pulumi.MapOutput)
}

type ClusterWorkerProfileArrayOutput struct{ *pulumi.OutputState }

func (ClusterWorkerProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterWorkerProfile)(nil)).Elem()
}

func (o ClusterWorkerProfileArrayOutput) ToClusterWorkerProfileArrayOutput() ClusterWorkerProfileArrayOutput {
	return o
}

func (o ClusterWorkerProfileArrayOutput) ToClusterWorkerProfileArrayOutputWithContext(ctx context.Context) ClusterWorkerProfileArrayOutput {
	return o
}

func (o ClusterWorkerProfileArrayOutput) Index(i pulumi.IntInput) ClusterWorkerProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterWorkerProfile {
		return vs[0].([]ClusterWorkerProfile)[vs[1].(int)]
	}).(ClusterWorkerProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAPIInput)(nil)).Elem(), ClusterAPIArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAPIPtrInput)(nil)).Elem(), ClusterAPIArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCalicoInput)(nil)).Elem(), ClusterCalicoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCalicoPtrInput)(nil)).Elem(), ClusterCalicoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCalicoImageInput)(nil)).Elem(), ClusterCalicoImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCalicoImagePtrInput)(nil)).Elem(), ClusterCalicoImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterControllerManagerInput)(nil)).Elem(), ClusterControllerManagerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterControllerManagerPtrInput)(nil)).Elem(), ClusterControllerManagerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterDualStackInput)(nil)).Elem(), ClusterDualStackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterDualStackPtrInput)(nil)).Elem(), ClusterDualStackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEnvoyProxyInput)(nil)).Elem(), ClusterEnvoyProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEnvoyProxyPtrInput)(nil)).Elem(), ClusterEnvoyProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEtcdInput)(nil)).Elem(), ClusterEtcdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEtcdPtrInput)(nil)).Elem(), ClusterEtcdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEtcdExternalClusterInput)(nil)).Elem(), ClusterEtcdExternalClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEtcdExternalClusterPtrInput)(nil)).Elem(), ClusterEtcdExternalClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterFeatureGateInput)(nil)).Elem(), ClusterFeatureGateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterFeatureGateArrayInput)(nil)).Elem(), ClusterFeatureGateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterFileInput)(nil)).Elem(), ClusterFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterFileArrayInput)(nil)).Elem(), ClusterFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterHookInput)(nil)).Elem(), ClusterHookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterHookPtrInput)(nil)).Elem(), ClusterHookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterHooksInput)(nil)).Elem(), ClusterHooksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterHooksPtrInput)(nil)).Elem(), ClusterHooksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterHostInput)(nil)).Elem(), ClusterHostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterHostArrayInput)(nil)).Elem(), ClusterHostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterImageInput)(nil)).Elem(), ClusterImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterImagePtrInput)(nil)).Elem(), ClusterImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterImagesInput)(nil)).Elem(), ClusterImagesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterImagesPtrInput)(nil)).Elem(), ClusterImagesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterInstallConfigInput)(nil)).Elem(), ClusterInstallConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterInstallConfigPtrInput)(nil)).Elem(), ClusterInstallConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterInstallConfigUserInput)(nil)).Elem(), ClusterInstallConfigUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterInstallConfigUserPtrInput)(nil)).Elem(), ClusterInstallConfigUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterK0sInput)(nil)).Elem(), ClusterK0sArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterK0sPtrInput)(nil)).Elem(), ClusterK0sArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterK0sConfigInput)(nil)).Elem(), ClusterK0sConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterK0sConfigPtrInput)(nil)).Elem(), ClusterK0sConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterK0sSpecInput)(nil)).Elem(), ClusterK0sSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterK0sSpecPtrInput)(nil)).Elem(), ClusterK0sSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterKineInput)(nil)).Elem(), ClusterKineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterKinePtrInput)(nil)).Elem(), ClusterKineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterKonnectivityInput)(nil)).Elem(), ClusterKonnectivityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterKonnectivityPtrInput)(nil)).Elem(), ClusterKonnectivityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterKubeProxyInput)(nil)).Elem(), ClusterKubeProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterKubeProxyPtrInput)(nil)).Elem(), ClusterKubeProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterKubeProxyIPTablesInput)(nil)).Elem(), ClusterKubeProxyIPTablesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterKubeProxyIPTablesPtrInput)(nil)).Elem(), ClusterKubeProxyIPTablesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterKubeProxyIPVSInput)(nil)).Elem(), ClusterKubeProxyIPVSArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterKubeProxyIPVSPtrInput)(nil)).Elem(), ClusterKubeProxyIPVSArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterKubeRouterInput)(nil)).Elem(), ClusterKubeRouterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterKubeRouterPtrInput)(nil)).Elem(), ClusterKubeRouterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterKubeRouterImageInput)(nil)).Elem(), ClusterKubeRouterImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterKubeRouterImagePtrInput)(nil)).Elem(), ClusterKubeRouterImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLocalhostInput)(nil)).Elem(), ClusterLocalhostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLocalhostPtrInput)(nil)).Elem(), ClusterLocalhostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMetadataInput)(nil)).Elem(), ClusterMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMetadataPtrInput)(nil)).Elem(), ClusterMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNetworkInput)(nil)).Elem(), ClusterNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNetworkPtrInput)(nil)).Elem(), ClusterNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeLocalLoadBalancingInput)(nil)).Elem(), ClusterNodeLocalLoadBalancingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeLocalLoadBalancingPtrInput)(nil)).Elem(), ClusterNodeLocalLoadBalancingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPodSecurityPolicyInput)(nil)).Elem(), ClusterPodSecurityPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPodSecurityPolicyPtrInput)(nil)).Elem(), ClusterPodSecurityPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSSHInput)(nil)).Elem(), ClusterSSHArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSSHPtrInput)(nil)).Elem(), ClusterSSHArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSchedulerInput)(nil)).Elem(), ClusterSchedulerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSchedulerPtrInput)(nil)).Elem(), ClusterSchedulerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecInput)(nil)).Elem(), ClusterSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSpecPtrInput)(nil)).Elem(), ClusterSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterStorageInput)(nil)).Elem(), ClusterStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterStoragePtrInput)(nil)).Elem(), ClusterStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterTelemetryInput)(nil)).Elem(), ClusterTelemetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterTelemetryPtrInput)(nil)).Elem(), ClusterTelemetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterWinRMInput)(nil)).Elem(), ClusterWinRMArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterWinRMPtrInput)(nil)).Elem(), ClusterWinRMArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterWorkerProfileInput)(nil)).Elem(), ClusterWorkerProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterWorkerProfileArrayInput)(nil)).Elem(), ClusterWorkerProfileArray{})
	pulumi.RegisterOutputType(ClusterAPIOutput{})
	pulumi.RegisterOutputType(ClusterAPIPtrOutput{})
	pulumi.RegisterOutputType(ClusterCalicoOutput{})
	pulumi.RegisterOutputType(ClusterCalicoPtrOutput{})
	pulumi.RegisterOutputType(ClusterCalicoImageOutput{})
	pulumi.RegisterOutputType(ClusterCalicoImagePtrOutput{})
	pulumi.RegisterOutputType(ClusterControllerManagerOutput{})
	pulumi.RegisterOutputType(ClusterControllerManagerPtrOutput{})
	pulumi.RegisterOutputType(ClusterDualStackOutput{})
	pulumi.RegisterOutputType(ClusterDualStackPtrOutput{})
	pulumi.RegisterOutputType(ClusterEnvoyProxyOutput{})
	pulumi.RegisterOutputType(ClusterEnvoyProxyPtrOutput{})
	pulumi.RegisterOutputType(ClusterEtcdOutput{})
	pulumi.RegisterOutputType(ClusterEtcdPtrOutput{})
	pulumi.RegisterOutputType(ClusterEtcdExternalClusterOutput{})
	pulumi.RegisterOutputType(ClusterEtcdExternalClusterPtrOutput{})
	pulumi.RegisterOutputType(ClusterFeatureGateOutput{})
	pulumi.RegisterOutputType(ClusterFeatureGateArrayOutput{})
	pulumi.RegisterOutputType(ClusterFileOutput{})
	pulumi.RegisterOutputType(ClusterFileArrayOutput{})
	pulumi.RegisterOutputType(ClusterHookOutput{})
	pulumi.RegisterOutputType(ClusterHookPtrOutput{})
	pulumi.RegisterOutputType(ClusterHooksOutput{})
	pulumi.RegisterOutputType(ClusterHooksPtrOutput{})
	pulumi.RegisterOutputType(ClusterHostOutput{})
	pulumi.RegisterOutputType(ClusterHostArrayOutput{})
	pulumi.RegisterOutputType(ClusterImageOutput{})
	pulumi.RegisterOutputType(ClusterImagePtrOutput{})
	pulumi.RegisterOutputType(ClusterImagesOutput{})
	pulumi.RegisterOutputType(ClusterImagesPtrOutput{})
	pulumi.RegisterOutputType(ClusterInstallConfigOutput{})
	pulumi.RegisterOutputType(ClusterInstallConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterInstallConfigUserOutput{})
	pulumi.RegisterOutputType(ClusterInstallConfigUserPtrOutput{})
	pulumi.RegisterOutputType(ClusterK0sOutput{})
	pulumi.RegisterOutputType(ClusterK0sPtrOutput{})
	pulumi.RegisterOutputType(ClusterK0sConfigOutput{})
	pulumi.RegisterOutputType(ClusterK0sConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterK0sSpecOutput{})
	pulumi.RegisterOutputType(ClusterK0sSpecPtrOutput{})
	pulumi.RegisterOutputType(ClusterKineOutput{})
	pulumi.RegisterOutputType(ClusterKinePtrOutput{})
	pulumi.RegisterOutputType(ClusterKonnectivityOutput{})
	pulumi.RegisterOutputType(ClusterKonnectivityPtrOutput{})
	pulumi.RegisterOutputType(ClusterKubeProxyOutput{})
	pulumi.RegisterOutputType(ClusterKubeProxyPtrOutput{})
	pulumi.RegisterOutputType(ClusterKubeProxyIPTablesOutput{})
	pulumi.RegisterOutputType(ClusterKubeProxyIPTablesPtrOutput{})
	pulumi.RegisterOutputType(ClusterKubeProxyIPVSOutput{})
	pulumi.RegisterOutputType(ClusterKubeProxyIPVSPtrOutput{})
	pulumi.RegisterOutputType(ClusterKubeRouterOutput{})
	pulumi.RegisterOutputType(ClusterKubeRouterPtrOutput{})
	pulumi.RegisterOutputType(ClusterKubeRouterImageOutput{})
	pulumi.RegisterOutputType(ClusterKubeRouterImagePtrOutput{})
	pulumi.RegisterOutputType(ClusterLocalhostOutput{})
	pulumi.RegisterOutputType(ClusterLocalhostPtrOutput{})
	pulumi.RegisterOutputType(ClusterMetadataOutput{})
	pulumi.RegisterOutputType(ClusterMetadataPtrOutput{})
	pulumi.RegisterOutputType(ClusterNetworkOutput{})
	pulumi.RegisterOutputType(ClusterNetworkPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeLocalLoadBalancingOutput{})
	pulumi.RegisterOutputType(ClusterNodeLocalLoadBalancingPtrOutput{})
	pulumi.RegisterOutputType(ClusterPodSecurityPolicyOutput{})
	pulumi.RegisterOutputType(ClusterPodSecurityPolicyPtrOutput{})
	pulumi.RegisterOutputType(ClusterSSHOutput{})
	pulumi.RegisterOutputType(ClusterSSHPtrOutput{})
	pulumi.RegisterOutputType(ClusterSchedulerOutput{})
	pulumi.RegisterOutputType(ClusterSchedulerPtrOutput{})
	pulumi.RegisterOutputType(ClusterSpecOutput{})
	pulumi.RegisterOutputType(ClusterSpecPtrOutput{})
	pulumi.RegisterOutputType(ClusterStorageOutput{})
	pulumi.RegisterOutputType(ClusterStoragePtrOutput{})
	pulumi.RegisterOutputType(ClusterTelemetryOutput{})
	pulumi.RegisterOutputType(ClusterTelemetryPtrOutput{})
	pulumi.RegisterOutputType(ClusterWinRMOutput{})
	pulumi.RegisterOutputType(ClusterWinRMPtrOutput{})
	pulumi.RegisterOutputType(ClusterWorkerProfileOutput{})
	pulumi.RegisterOutputType(ClusterWorkerProfileArrayOutput{})
}
