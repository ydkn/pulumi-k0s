// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.K0s.Inputs
{

    public sealed class ClusterWinRMArgs : global::Pulumi.ResourceArgs
    {
        [Input("address", required: true)]
        public Input<string> Address { get; set; } = null!;

        [Input("bastion")]
        public Input<Inputs.ClusterSSHArgs>? Bastion { get; set; }

        [Input("caCert")]
        private Input<string>? _caCert;
        public Input<string>? CaCert
        {
            get => _caCert;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _caCert = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("cert")]
        private Input<string>? _cert;
        public Input<string>? Cert
        {
            get => _cert;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _cert = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("insecure")]
        public Input<bool>? Insecure { get; set; }

        [Input("key")]
        private Input<string>? _key;
        public Input<string>? Key
        {
            get => _key;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _key = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("password")]
        private Input<string>? _password;
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("tlsServerName")]
        public Input<string>? TlsServerName { get; set; }

        [Input("useHTTPS")]
        public Input<bool>? UseHTTPS { get; set; }

        [Input("useNTLM")]
        public Input<bool>? UseNTLM { get; set; }

        [Input("user")]
        public Input<string>? User { get; set; }

        public ClusterWinRMArgs()
        {
        }
        public static new ClusterWinRMArgs Empty => new ClusterWinRMArgs();
    }
}
